{
    "sourceFile": "src/components/HorizontalBar/HorizontalBar.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 112,
            "patches": [
                {
                    "date": 1693253176847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693253229934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,19 @@\n import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n import './HorizontalBar.scss';\r\n \r\n const HorizontalBar = ({\r\n-  data,\r\n   width=400,\r\n   height=300,\r\n   margin=20,\r\n }) => {\r\n   const svgRef = useRef(null);\r\n+  const data = [\r\n+    { Country: 'US', Value: 100 },\r\n+    { Country: 'S. Korea', Value: 85 },\r\n+    { Country: 'Italy', Value: 72 },\r\n+    { Country: 'Japan', Value: 80 },\r\n+  ];\r\n \r\n   const drawSvg = useCallback(\r\n     (div) => {\r\n       const svg = d3\r\n"
                },
                {
                    "date": 1693253279623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,25 @@\n-import React, { useEffect, useCallback, useRef } from 'react'\r\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n import * as d3 from 'd3';\r\n import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n import './HorizontalBar.scss';\r\n \r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n const HorizontalBar = ({\r\n   width=400,\r\n   height=300,\r\n   margin=20,\r\n }) => {\r\n   const svgRef = useRef(null);\r\n-  const data = [\r\n-    { Country: 'US', Value: 100 },\r\n-    { Country: 'S. Korea', Value: 85 },\r\n-    { Country: 'Italy', Value: 72 },\r\n-    { Country: 'Japan', Value: 80 },\r\n-  ];\r\n \r\n+  const [data, setSetData] = useState(defaultData);\r\n+\r\n   const drawSvg = useCallback(\r\n     (div) => {\r\n       const svg = d3\r\n         .select(div)\r\n"
                },
                {
                    "date": 1693253361222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    console.log('helloworld', data);\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253387327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,89 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    console.log('helloworld', data);\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253440711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253453058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253468372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253486930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253880610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693253996557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n       createGraph(svgRef.current);\r\n     }\r\n-  }, [svgRef, createGraph]);\r\n+  }, [svgRef, createGraph, data]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n       <HorizontalBarPanel setDataCB={setDataCB} />\r\n"
                },
                {
                    "date": 1693254028279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693254036990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693254135775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255169353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .remove();\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255179230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n     svg.selectAll(\"myRect\")\r\n-        .remove();\r\n+        .remove()\r\n         .data(data)\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n@@ -91,1020 +91,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    console.log('helloworld', data);\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    console.log('helloworld', data);\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setSetData] = useState(defaultData);\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255203354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255212959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255219702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255234914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .exit().remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255324692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,10 @@\n         .call(d3.axisLeft(y))\r\n \r\n     svg.selectAll(\"myRect\")\r\n         .data(data)\r\n-        .exit().remove()\r\n+        .exit()\r\n+        .remove()\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n"
                },
                {
                    "date": 1693255335614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .exit()\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255360228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .exit()\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693255377619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,8 @@\n         .call(d3.axisLeft(y))\r\n \r\n     svg.selectAll(\"myRect\")\r\n         .data(data)\r\n-        .exit()\r\n         .remove()\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n"
                },
                {
                    "date": 1693256279347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,8 @@\n         .call(d3.axisLeft(y))\r\n \r\n     svg.selectAll(\"myRect\")\r\n         .data(data)\r\n-        .remove()\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n"
                },
                {
                    "date": 1693256297784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .exit()\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256467351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+        svg.exit().remove();\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256474993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+      svg.exit().remove();\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256501804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,864 +93,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-        svg.exit().remove();\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .exit()\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .exit()\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .exit()\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .remove()\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256521458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(`${d.Country}+test`); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+      svg.exit().remove();\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256535100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         .remove()\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(`${d.Country}+test`); })\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n"
                },
                {
                    "date": 1693256610329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+      // svg.exit().remove();\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256664488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+      // svg.exit().remove();\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256778916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     .range([ 0, height ])\r\n     .domain(data.map(function(d) { return d.Country; }))\r\n     .padding(.1);\r\n \r\n-  const createGraph = (div, data) => {\r\n+  const createGraph = useCallback((div, data) => {\r\n     const svg = drawSvg(div, data);\r\n \r\n     svg.exit().remove()\r\n \r\n@@ -77,9 +77,11 @@\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n       // svg.exit().remove();\r\n-  }\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n       createGraph(svgRef.current, data);\r\n"
                },
                {
                    "date": 1693256900176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256918927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(`test`); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256942439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256969828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  y.exit().remove();\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693256990959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.exit().remove();\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257007661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.exit().remove();\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .remove()\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257065175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,10 @@\n     const svg = drawSvg(div, data);\r\n \r\n     // svg.exit().remove()\r\n \r\n+    svg.exit().remove();\r\n+\r\n     svg.append(\"g\")\r\n         .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n         .call(d3.axisBottom(x))\r\n         .selectAll(\"text\")\r\n@@ -65,10 +67,8 @@\n           .style(\"text-anchor\", \"end\");\r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n-    svg.exit().remove();\r\n-\r\n     const recs = svg.selectAll(\"myRect\");\r\n \r\n     recs\r\n         .data(data)\r\n"
                },
                {
                    "date": 1693257103719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n     const recs = svg.selectAll(\"myRect\");\r\n \r\n     recs\r\n         .data(data)\r\n-        .remove()\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n"
                },
                {
                    "date": 1693257118465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257140871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257147620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n       const svg = d3\r\n         .select(div)\r\n         .attr(\"width\", width + margin + 50)\r\n         .attr(\"height\", height + margin + 50)\r\n+        .remove();\r\n         .append(\"g\")\r\n         .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n       return svg;\r\n     },\r\n"
                },
                {
                    "date": 1693257158203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257165061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .remove()\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = useCallback((div, data) => {\r\n+    const svg = drawSvg(div, data);\r\n+\r\n+    // svg.exit().remove()\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const recs = svg.selectAll(\"myRect\");\r\n+\r\n+    recs\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    recs.exit().remove();\r\n+\r\n+      // svg.exit().remove();\r\n+  }, [\r\n+    data,\r\n+  ]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current, data);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257213818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257284648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    svg.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257297055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    svg.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257454170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n-    svg.exit().remove();\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693257464037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257494422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,97 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    console.log(svg.selectAll(\"myRect\"));\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257548513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,11 @@\n         .call(d3.axisBottom(x))\r\n         .selectAll(\"text\")\r\n           .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n           .style(\"text-anchor\", \"end\");\r\n+\r\n+    svg.selectAll(\"text\").exit().remove();\r\n+\r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n     svg.selectAll(\"myRect\")\r\n@@ -74,9 +77,8 @@\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n     console.log(svg.selectAll(\"myRect\"));\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693257567518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,10 @@\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n     console.log(svg.selectAll(\"myRect\"));\r\n+\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693257585421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        // .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    console.log(svg.selectAll(\"myRect\"));\r\n+\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257599334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    y.exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    console.log(svg.selectAll(\"myRect\"));\r\n+\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257674828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n     .range([ 0, width]);\r\n \r\n   // Y axis\r\n   var y = d3.scaleBand()\r\n+    \r\n     .range([ 0, height ])\r\n     .domain(data.map(function(d) { return d.Country; }))\r\n     .padding(.1);\r\n \r\n@@ -61,9 +62,9 @@\n         .selectAll(\"text\")\r\n           .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n           .style(\"text-anchor\", \"end\");\r\n \r\n-    y.exit().remove();\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n \r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n@@ -71,9 +72,8 @@\n         .data(data)\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n@@ -97,2036 +97,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        // .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    console.log(svg.selectAll(\"myRect\"));\r\n-\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    console.log(svg.selectAll(\"myRect\"));\r\n-\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    svg.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .remove()\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .remove();\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return `${d.Country}-test`; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.exit().remove();\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  y.exit().remove();\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(`test`); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    // svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const recs = svg.selectAll(\"myRect\");\r\n-\r\n-    recs\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    recs.exit().remove();\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = useCallback((div, data) => {\r\n-    const svg = drawSvg(div, data);\r\n-\r\n-    svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-      // svg.exit().remove();\r\n-  }, [\r\n-    data,\r\n-  ]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current, data);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.exit().remove()\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-      // svg.exit().remove();\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-      svg.exit().remove();\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .remove()\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-      svg.exit().remove();\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257823744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,18 +75,17 @@\n         .attr(\"x\", x(0) )\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    console.log(svg.selectAll(\"myRect\"));\r\n-\r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n       createGraph(svgRef.current);\r\n     }\r\n+    return () => {\r\n+      svg.selectAll('*').remove();\r\n+    };\r\n   }, [svgRef, createGraph]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n"
                },
                {
                    "date": 1693257837892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,101 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+    return () => {\r\n+      svg.selectAll('*').remove();\r\n+    };\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693257885688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n         .append(\"g\")\r\n         .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n       return svg;\r\n     },\r\n-    [height, width, margin]\r\n+    [height, width, margin, data]\r\n   );\r\n \r\n   // Add X axis\r\n   const x = d3.scaleLinear()\r\n@@ -82,11 +82,8 @@\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n       createGraph(svgRef.current);\r\n     }\r\n-    return () => {\r\n-      svg.selectAll('*').remove();\r\n-    };\r\n   }, [svgRef, createGraph]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n"
                },
                {
                    "date": 1693257910182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    svg.selectAll(\"myRect\")\r\n+        .data(data)\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693338965586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n       createGraph(svgRef.current);\r\n     }\r\n-  }, [svgRef, createGraph]);\r\n+  }, [svgRef, createGraph, data]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n       <HorizontalBarPanel setDataCB={setDataCB} />\r\n@@ -94,203 +94,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-    return () => {\r\n-      svg.selectAll('*').remove();\r\n-    };\r\n-  }, [svgRef, createGraph]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339071287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         .selectAll(\"text\")\r\n           .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n           .style(\"text-anchor\", \"end\");\r\n \r\n-    // svg.selectAll(\"text\").exit().remove();\r\n+    svg.selectAll(\"text\").exit().remove();\r\n \r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n@@ -76,8 +76,10 @@\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    svg.selectAll(\"myRect\").exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693339152734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,19 +67,20 @@\n \r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n         .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n-    svg.selectAll(\"myRect\").exit().remove();\r\n+    rec.exit().remove();\r\n }\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693339160273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,8 @@\n \r\n     const rec = svg.selectAll(\"myRect\").data(data);\r\n \r\n     rec\r\n-        .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n"
                },
                {
                    "date": 1693339172033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n \r\n     const rec = svg.selectAll(\"myRect\").data(data);\r\n \r\n     rec\r\n+        .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n"
                },
                {
                    "date": 1693339287991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+        .remove();\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339302163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .remove()\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339307774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .remove()\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339543211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    svg.append(\"g\")\r\n+        .remove()\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339583467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    xx.exit().remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339589818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    xx..remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339597173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    xx.exit().remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339657307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .data(d3.axisLeft(y))\r\n+\r\n+    xx.exit().remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339664150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n \r\n     const xx = svg.append(\"g\")\r\n \r\n       xx\r\n-        .data(d3.axisLeft(y))\r\n+        .call(d3.axisLeft(y))\r\n \r\n     xx.exit().remove()\r\n \r\n     const rec = svg.selectAll(\"myRect\").data(data);\r\n"
                },
                {
                    "date": 1693339937077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,113 +52,10 @@\n     .range([ 0, height ])\r\n     .domain(data.map(function(d) { return d.Country; }))\r\n     .padding(.1);\r\n \r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n+  y.axis().remove()\r\n \r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    xx.exit().remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n   const createGraph = (div) => {\r\n     const svg = drawSvg(div);\r\n \r\n     svg.append(\"g\")\r\n@@ -174,9 +71,9 @@\n \r\n       xx\r\n         .call(d3.axisLeft(y))\r\n \r\n-    xx.exit().remove()\r\n+    // xx.exit().remove()\r\n \r\n     const rec = svg.selectAll(\"myRect\").data(data);\r\n \r\n     rec\r\n@@ -206,724 +103,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    xx..remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    xx.exit().remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .remove()\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .remove()\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .remove()\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-        .remove();\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693339947264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     .range([ 0, height ])\r\n     .domain(data.map(function(d) { return d.Country; }))\r\n     .padding(.1);\r\n \r\n-  y.axis().remove()\r\n+  y.exit().remove()\r\n \r\n   const createGraph = (div) => {\r\n     const svg = drawSvg(div);\r\n \r\n"
                },
                {
                    "date": 1693340079412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    d3.select(\"svg\").exit().remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340089536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    d3.select(\"svg\").remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340155761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+      xx\r\n+        .selectAll(\"uniq\")\r\n+\r\n+      xx.remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340164957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+      xx\r\n+        .selectAll(\"uniq\")\r\n+\r\n+      xx.remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340172904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+      xx.remove()\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340182771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+    xx.remove()\r\n+    \r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340192663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,107 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+      xx.exit();\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340205052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n+\r\n+      // console.log('')\r\n+      // xx.exit();\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340215341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      // console.log('')\r\n+      // xx.exit();\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340220972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.append(\"g\")\r\n+\r\n+      // console.log('')\r\n+      xx.exit();\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340373720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n           .style(\"text-anchor\", \"end\");\r\n \r\n     // svg.selectAll(\"text\").exit().remove();\r\n \r\n-    const xx = svg.append(\"g\")\r\n+    const xx = svg.update(\"g\")\r\n \r\n       // console.log('')\r\n       xx.exit();\r\n \r\n"
                },
                {
                    "date": 1693340628686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+\r\n+    // svg.selectAll(\"text\").exit().remove();\r\n+\r\n+    const xx = svg.update(\"g\")\r\n+\r\n+      // console.log('')\r\n+      // xx.exit();\r\n+\r\n+      xx\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340649552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 120 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340784099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = useCallback(\r\n+    (div, data) => {\r\n+      const svg = d3\r\n+        .select(div)\r\n+        .attr(\"width\", width + margin + 50)\r\n+        .attr(\"height\", height + margin + 50)\r\n+        .append(\"g\")\r\n+        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+      return svg;\r\n+    },\r\n+    [height, width, margin, data]\r\n+  );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693340974835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341003332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341012746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341074355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341457294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  var y = useMemo(() => {\r\n+    return d3\r\n+            .scaleBand()\r\n+            .range([ 0, height ])\r\n+            .domain(data.map(function(d) { return d.Country; }))\r\n+            .padding(.1); \r\n+  }, [data])\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341469846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  var y = useMemo(() => {\r\n+    return d3\r\n+            .scaleBand()\r\n+            .range([ 0, height ])\r\n+            .domain(data.map(function(d) { return d.Country; }))\r\n+            .padding(.1); \r\n+  }, [data])\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341480673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  var y = useMemo(() => {\r\n+    return d3\r\n+            .scaleBand()\r\n+            .range([ 0, height ])\r\n+            .domain(data.map(function(d) { return d.Country; }))\r\n+            .padding(.1); \r\n+  }, [data])\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341521946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,2185 +116,5 @@\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-\r\n-  var y = useMemo(() => {\r\n-    return d3\r\n-            .scaleBand()\r\n-            .range([ 0, height ])\r\n-            .domain(data.map(function(d) { return d.Country; }))\r\n-            .padding(.1); \r\n-  }, [data])\r\n-\r\n-  // var y = d3.scaleBand()\r\n-    \r\n-  //   .range([ 0, height ])\r\n-  //   .domain(data.map(function(d) { return d.Country; }))\r\n-  //   .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-\r\n-  var y = useMemo(() => {\r\n-    return d3\r\n-            .scaleBand()\r\n-            .range([ 0, height ])\r\n-            .domain(data.map(function(d) { return d.Country; }))\r\n-            .padding(.1); \r\n-  }, [data])\r\n-\r\n-  // var y = d3.scaleBand()\r\n-    \r\n-  //   .range([ 0, height ])\r\n-  //   .domain(data.map(function(d) { return d.Country; }))\r\n-  //   .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    rec.exit().remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = (div) => {\r\n-    const svg = d3\r\n-    .select(div)\r\n-    .attr(\"width\", width + margin + 50)\r\n-    .attr(\"height\", height + margin + 50)\r\n-    .append(\"g\")\r\n-    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-    return svg;\r\n-  }\r\n-\r\n-  // const drawSvg = useCallback(\r\n-  //   (div) => {\r\n-  //     const svg = d3\r\n-  //       .select(div)\r\n-  //       .attr(\"width\", width + margin + 50)\r\n-  //       .attr(\"height\", height + margin + 50)\r\n-  //       .append(\"g\")\r\n-  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-  //     return svg;\r\n-  //   },\r\n-  //   [height, width, margin, data]\r\n-  // );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = useCallback((div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}, [data]);\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 10 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-    svg.append(\"g\")\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  console.log('>>> data', data);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.update(\"g\")\r\n-\r\n-      // console.log('')\r\n-      // xx.exit();\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.update(\"g\")\r\n-\r\n-      // console.log('')\r\n-      xx.exit();\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      // console.log('')\r\n-      // xx.exit();\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-      // console.log('')\r\n-      // xx.exit();\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-      xx.exit();\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-    xx.remove()\r\n-    \r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-      xx.remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-      xx\r\n-        .selectAll(\"uniq\")\r\n-\r\n-      xx.remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\").selectAll(\"uniq\")\r\n-\r\n-      xx\r\n-        .selectAll(\"uniq\")\r\n-\r\n-      xx.remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    d3.select(\"svg\").remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  // y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    d3.select(\"svg\").exit().remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n-export default HorizontalBar\n-import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n-import * as d3 from 'd3';\r\n-import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n-import './HorizontalBar.scss';\r\n-\r\n-const defaultData = [\r\n-  { Country: 'US', Value: 100 },\r\n-  { Country: 'S. Korea', Value: 85 },\r\n-  { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan 123', Value: 80 },\r\n-];\r\n-\r\n-const HorizontalBar = ({\r\n-  width=400,\r\n-  height=300,\r\n-  margin=20,\r\n-}) => {\r\n-  const svgRef = useRef(null);\r\n-\r\n-  const [data, setData] = useState(defaultData);\r\n-\r\n-  const setDataCB = (data) => {\r\n-    setData([\r\n-      { Country: 'USA', Value: 120 },\r\n-      { Country: 'S. Korea 123', Value: 85 },\r\n-      { Country: 'Italy', Value: 72 },\r\n-      { Country: 'Japan', Value: 80 },\r\n-    ])\r\n-  }\r\n-\r\n-  const drawSvg = useCallback(\r\n-    (div, data) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin, data]\r\n-  );\r\n-\r\n-  // Add X axis\r\n-  const x = d3.scaleLinear()\r\n-    .domain([0, 100])\r\n-    .range([ 0, width]);\r\n-\r\n-  // Y axis\r\n-  var y = d3.scaleBand()\r\n-    \r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n-\r\n-  y.exit().remove()\r\n-\r\n-  const createGraph = (div) => {\r\n-    const svg = drawSvg(div);\r\n-\r\n-    svg.append(\"g\")\r\n-        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n-        .call(d3.axisBottom(x))\r\n-        .selectAll(\"text\")\r\n-          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n-          .style(\"text-anchor\", \"end\");\r\n-\r\n-    // svg.selectAll(\"text\").exit().remove();\r\n-\r\n-    const xx = svg.append(\"g\")\r\n-\r\n-      xx\r\n-        .call(d3.axisLeft(y))\r\n-\r\n-    // xx.exit().remove()\r\n-\r\n-    const rec = svg.selectAll(\"myRect\").data(data);\r\n-\r\n-    rec\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-\r\n-    // rec.exit().remove();\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (svgRef.current) {\r\n-      createGraph(svgRef.current);\r\n-    }\r\n-  }, [svgRef, createGraph, data]);\r\n-\r\n-  return (\r\n-    <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel setDataCB={setDataCB} />\r\n-      <div className=\"horizontal-bar-right\">\r\n-        <svg ref={svgRef} />\r\n-      </div>\r\n-    </div>\r\n-  )\r\n-}\r\n-\r\n export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341545950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,126 @@\n+import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  var y = d3\r\n+            .scaleBand()\r\n+            .range([ 0, height ])\r\n+            .domain(data.map(function(d) { return d.Country; }))\r\n+            .padding(.1); \r\n+\r\n+  // var y = useMemo(() => {\r\n+  //   return d3\r\n+  //           .scaleBand()\r\n+  //           .range([ 0, height ])\r\n+  //           .domain(data.map(function(d) { return d.Country; }))\r\n+  //           .padding(.1); \r\n+  // }, [data])\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341572365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+import React, { useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+  \r\n+  var y = d3.scaleBand()\r\n+    \r\n+    .range([ 0, height ])\r\n+    .domain(data.map(function(d) { return d.Country; }))\r\n+    .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    rec.remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341579575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n     .domain([0, 100])\r\n     .range([ 0, width]);\r\n \r\n   // Y axis\r\n-  \r\n   var y = d3.scaleBand()\r\n     \r\n     .range([ 0, height ])\r\n     .domain(data.map(function(d) { return d.Country; }))\r\n@@ -82,16 +81,17 @@\n \r\n     const rec = svg.selectAll(\"myRect\").data(data);\r\n \r\n     rec\r\n+        .enter()\r\n         .append(\"rect\")\r\n         .attr(\"x\", x(0) )\r\n         .attr(\"y\", function(d) { return y(d.Country); })\r\n         .attr(\"width\", function(d) { return x(d.Value); })\r\n         .attr(\"height\", y.bandwidth() )\r\n         .attr(\"fill\", \"#69b3a2\")\r\n \r\n-    rec.remove();\r\n+    // rec.exit().remove();\r\n }, [data]);\r\n \r\n   useEffect(() => {\r\n     if (svgRef.current) {\r\n"
                },
                {
                    "date": 1693341623640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const yScale = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693341631812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342087746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,127 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = useCallback((div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const update = (dataArg) => {\r\n+      const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n+\r\n+      rec\r\n+          .enter()\r\n+          .append(\"rect\")\r\n+          .attr(\"x\", x(0) )\r\n+          .attr(\"y\", function(d) { return y(d.Country); })\r\n+          .attr(\"width\", function(d) { return x(d.Value); })\r\n+          .attr(\"height\", y.bandwidth() )\r\n+          .attr(\"fill\", \"#69b3a2\")\r\n+    }\r\n+\r\n+    // rec.exit().remove();\r\n+}, [data]);\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    update(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342143712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,127 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const update = (dataArg) => {\r\n+      const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n+\r\n+      rec\r\n+          .enter()\r\n+          .append(\"rect\")\r\n+          .attr(\"x\", x(0) )\r\n+          .attr(\"y\", function(d) { return y(d.Country); })\r\n+          .attr(\"width\", function(d) { return x(d.Value); })\r\n+          .attr(\"height\", y.bandwidth() )\r\n+          .attr(\"fill\", \"#69b3a2\")\r\n+    }\r\n+\r\n+    // rec.exit().remove();\r\n+};\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    update(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342153904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,127 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    // rec.exit().remove();\r\n+};\r\n+\r\n+const update = (dataArg) => {\r\n+  const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n+\r\n+  rec\r\n+      .enter()\r\n+      .append(\"rect\")\r\n+      .attr(\"x\", x(0) )\r\n+      .attr(\"y\", function(d) { return y(d.Country); })\r\n+      .attr(\"width\", function(d) { return x(d.Value); })\r\n+      .attr(\"height\", y.bandwidth() )\r\n+      .attr(\"fill\", \"#69b3a2\")\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    update(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342188117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+};\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    createGraph(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342201276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const rec = svg.selectAll(\"myRect\").data(data);\r\n+\r\n+    rec\r\n+        .enter()\r\n+        .append(\"rect\")\r\n+        .attr(\"x\", x(0) )\r\n+        .attr(\"y\", function(d) { return y(d.Country); })\r\n+        .attr(\"width\", function(d) { return x(d.Value); })\r\n+        .attr(\"height\", y.bandwidth() )\r\n+        .attr(\"fill\", \"#69b3a2\")\r\n+\r\n+    // rec.exit().remove();\r\n+};\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    createGraph(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342231227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,124 @@\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n+import * as d3 from 'd3';\r\n+import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n+import './HorizontalBar.scss';\r\n+\r\n+const defaultData = [\r\n+  { Country: 'US', Value: 100 },\r\n+  { Country: 'S. Korea', Value: 85 },\r\n+  { Country: 'Italy', Value: 72 },\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n+\r\n+const HorizontalBar = ({\r\n+  width=400,\r\n+  height=300,\r\n+  margin=20,\r\n+}) => {\r\n+  const svgRef = useRef(null);\r\n+\r\n+  const [data, setData] = useState(defaultData);\r\n+\r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n+  // Add X axis\r\n+  const x = d3.scaleLinear()\r\n+    .domain([0, 100])\r\n+    .range([ 0, width]);\r\n+\r\n+  // Y axis\r\n+\r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n+  const createGraph = (div) => {\r\n+    const svg = drawSvg(div);\r\n+\r\n+    svg.append(\"g\")\r\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n+        .call(d3.axisBottom(x))\r\n+        .selectAll(\"text\")\r\n+          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n+          .style(\"text-anchor\", \"end\");\r\n+    svg.append(\"g\")\r\n+        .call(d3.axisLeft(y))\r\n+\r\n+    const update = (dataArg) => {\r\n+      const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n+\r\n+      rec\r\n+          .enter()\r\n+          .append(\"rect\")\r\n+          .attr(\"x\", x(0) )\r\n+          .attr(\"y\", function(d) { return y(d.Country); })\r\n+          .attr(\"width\", function(d) { return x(d.Value); })\r\n+          .attr(\"height\", y.bandwidth() )\r\n+          .attr(\"fill\", \"#69b3a2\")\r\n+    }\r\n+\r\n+  useEffect(() => {\r\n+    if (svgRef.current || data) {\r\n+      createGraph(svgRef.current);\r\n+    }\r\n+  }, [svgRef, createGraph, data]);\r\n+\r\n+  useEffect(() => {\r\n+    update(data)\r\n+  }, [data]);\r\n+\r\n+  return (\r\n+    <div className=\"horizontal-bar-wrapper\">\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n+      <div className=\"horizontal-bar-right\">\r\n+        <svg ref={svgRef} />\r\n+      </div>\r\n+    </div>\r\n+  )\r\n+}\r\n+\r\n+export default HorizontalBar\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342252293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,82 @@\n-import React, { useEffect, useCallback, useRef } from 'react'\r\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n import * as d3 from 'd3';\r\n import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n import './HorizontalBar.scss';\r\n \r\n-const data = [\r\n+const defaultData = [\r\n   { Country: 'US', Value: 100 },\r\n   { Country: 'S. Korea', Value: 85 },\r\n   { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-]\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n \r\n const HorizontalBar = ({\r\n   width=400,\r\n   height=300,\r\n   margin=20,\r\n }) => {\r\n   const svgRef = useRef(null);\r\n \r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n+  const [data, setData] = useState(defaultData);\r\n \r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n   // Add X axis\r\n   const x = d3.scaleLinear()\r\n     .domain([0, 100])\r\n     .range([ 0, width]);\r\n \r\n   // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n \r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n   const createGraph = (div) => {\r\n     const svg = drawSvg(div);\r\n \r\n     svg.append(\"g\")\r\n@@ -52,32 +87,34 @@\n           .style(\"text-anchor\", \"end\");\r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n+    const update = (dataArg) => {\r\n+      const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n \r\n+      rec\r\n+          .enter()\r\n+          .append(\"rect\")\r\n+          .attr(\"x\", x(0) )\r\n+          .attr(\"y\", function(d) { return y(d.Country); })\r\n+          .attr(\"width\", function(d) { return x(d.Value); })\r\n+          .attr(\"height\", y.bandwidth() )\r\n+          .attr(\"fill\", \"#69b3a2\")\r\n+    }\r\n+\r\n   useEffect(() => {\r\n-    if (svgRef.current) {\r\n+    if (svgRef.current || data) {\r\n       createGraph(svgRef.current);\r\n     }\r\n\\ No newline at end of file\n   }, [svgRef, createGraph]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel />\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n       <div className=\"horizontal-bar-right\">\r\n         <svg ref={svgRef} />\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n+export default HorizontalBar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1693342262280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,82 @@\n-import React, { useEffect, useCallback, useRef } from 'react'\r\n+import React, { useMemo, useState, useEffect, useCallback, useRef } from 'react'\r\n import * as d3 from 'd3';\r\n import HorizontalBarPanel from \"./HorizontalBarPanel\";\r\n import './HorizontalBar.scss';\r\n \r\n-const data = [\r\n+const defaultData = [\r\n   { Country: 'US', Value: 100 },\r\n   { Country: 'S. Korea', Value: 85 },\r\n   { Country: 'Italy', Value: 72 },\r\n-  { Country: 'Japan', Value: 80 },\r\n-]\r\n+  { Country: 'Japan 123', Value: 80 },\r\n+];\r\n \r\n const HorizontalBar = ({\r\n   width=400,\r\n   height=300,\r\n   margin=20,\r\n }) => {\r\n   const svgRef = useRef(null);\r\n \r\n-  const drawSvg = useCallback(\r\n-    (div) => {\r\n-      const svg = d3\r\n-        .select(div)\r\n-        .attr(\"width\", width + margin + 50)\r\n-        .attr(\"height\", height + margin + 50)\r\n-        .append(\"g\")\r\n-        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n-      return svg;\r\n-    },\r\n-    [height, width, margin]\r\n-  );\r\n+  const [data, setData] = useState(defaultData);\r\n \r\n+  console.log('>>> data', data);\r\n+\r\n+  const setDataCB = (data) => {\r\n+    setData([\r\n+      { Country: 'USA', Value: 10 },\r\n+      { Country: 'S. Korea 123', Value: 85 },\r\n+      { Country: 'Italy', Value: 72 },\r\n+      { Country: 'Japan', Value: 80 },\r\n+    ])\r\n+  }\r\n+\r\n+  const drawSvg = (div) => {\r\n+    const svg = d3\r\n+    .select(div)\r\n+    .attr(\"width\", width + margin + 50)\r\n+    .attr(\"height\", height + margin + 50)\r\n+    .append(\"g\")\r\n+    .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+    return svg;\r\n+  }\r\n+\r\n+  // const drawSvg = useCallback(\r\n+  //   (div) => {\r\n+  //     const svg = d3\r\n+  //       .select(div)\r\n+  //       .attr(\"width\", width + margin + 50)\r\n+  //       .attr(\"height\", height + margin + 50)\r\n+  //       .append(\"g\")\r\n+  //       .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n+  //     return svg;\r\n+  //   },\r\n+  //   [height, width, margin, data]\r\n+  // );\r\n+\r\n   // Add X axis\r\n   const x = d3.scaleLinear()\r\n     .domain([0, 100])\r\n     .range([ 0, width]);\r\n \r\n   // Y axis\r\n-  var y = d3.scaleBand()\r\n-    .range([ 0, height ])\r\n-    .domain(data.map(function(d) { return d.Country; }))\r\n-    .padding(.1);\r\n \r\n+  const y = useMemo(() => {\r\n+    return d3\r\n+      .scaleBand()\r\n+      .range([ 0, height ])\r\n+      .domain(data.map(function(d) { return d.Country; }))\r\n+      .padding(.1);\r\n+  }, [data]);\r\n+\r\n+  // var y = d3.scaleBand()\r\n+    \r\n+  //   .range([ 0, height ])\r\n+  //   .domain(data.map(function(d) { return d.Country; }))\r\n+  //   .padding(.1);\r\n+\r\n+  // y.exit().remove()\r\n+\r\n   const createGraph = (div) => {\r\n     const svg = drawSvg(div);\r\n \r\n     svg.append(\"g\")\r\n@@ -52,32 +87,34 @@\n           .style(\"text-anchor\", \"end\");\r\n     svg.append(\"g\")\r\n         .call(d3.axisLeft(y))\r\n \r\n-    svg.selectAll(\"myRect\")\r\n-        .data(data)\r\n-        .enter()\r\n-        .append(\"rect\")\r\n-        .attr(\"x\", x(0) )\r\n-        .attr(\"y\", function(d) { return y(d.Country); })\r\n-        .attr(\"width\", function(d) { return x(d.Value); })\r\n-        .attr(\"height\", y.bandwidth() )\r\n-        .attr(\"fill\", \"#69b3a2\")\r\n-  }\r\n+    const update = (dataArg) => {\r\n+      const rec = svg.selectAll(\"myRect\").data(dataArg);\r\n \r\n+      rec\r\n+          .enter()\r\n+          .append(\"rect\")\r\n+          .attr(\"x\", x(0) )\r\n+          .attr(\"y\", function(d) { return y(d.Country); })\r\n+          .attr(\"width\", function(d) { return x(d.Value); })\r\n+          .attr(\"height\", y.bandwidth() )\r\n+          .attr(\"fill\", \"#69b3a2\")\r\n+    }\r\n+\r\n   useEffect(() => {\r\n-    if (svgRef.current) {\r\n+    if (svgRef.current || data) {\r\n       createGraph(svgRef.current);\r\n     }\r\n\\ No newline at end of file\n   }, [svgRef, createGraph]);\r\n \r\n   return (\r\n     <div className=\"horizontal-bar-wrapper\">\r\n-      <HorizontalBarPanel />\r\n+      <HorizontalBarPanel setDataCB={setDataCB} />\r\n       <div className=\"horizontal-bar-right\">\r\n         <svg ref={svgRef} />\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n \r\n-export default HorizontalBar\n+export default HorizontalBar;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1693253176847,
            "name": "Commit-0",
            "content": "import React, { useEffect, useCallback, useRef } from 'react'\r\nimport * as d3 from 'd3';\r\nimport HorizontalBarPanel from \"./HorizontalBarPanel\";\r\nimport './HorizontalBar.scss';\r\n\r\nconst HorizontalBar = ({\r\n  data,\r\n  width=400,\r\n  height=300,\r\n  margin=20,\r\n}) => {\r\n  const svgRef = useRef(null);\r\n\r\n  const drawSvg = useCallback(\r\n    (div) => {\r\n      const svg = d3\r\n        .select(div)\r\n        .attr(\"width\", width + margin + 50)\r\n        .attr(\"height\", height + margin + 50)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\r\n      return svg;\r\n    },\r\n    [height, width, margin]\r\n  );\r\n\r\n  // Add X axis\r\n  const x = d3.scaleLinear()\r\n    .domain([0, 100])\r\n    .range([ 0, width]);\r\n\r\n  // Y axis\r\n  var y = d3.scaleBand()\r\n    .range([ 0, height ])\r\n    .domain(data.map(function(d) { return d.Country; }))\r\n    .padding(.1);\r\n\r\n  const createGraph = (div) => {\r\n    const svg = drawSvg(div);\r\n\r\n    svg.append(\"g\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x))\r\n        .selectAll(\"text\")\r\n          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n          .style(\"text-anchor\", \"end\");\r\n    svg.append(\"g\")\r\n        .call(d3.axisLeft(y))\r\n\r\n    svg.selectAll(\"myRect\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", x(0) )\r\n        .attr(\"y\", function(d) { return y(d.Country); })\r\n        .attr(\"width\", function(d) { return x(d.Value); })\r\n        .attr(\"height\", y.bandwidth() )\r\n        .attr(\"fill\", \"#69b3a2\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current) {\r\n      createGraph(svgRef.current);\r\n    }\r\n  }, [svgRef, createGraph]);\r\n\r\n  return (\r\n    <div className=\"horizontal-bar-wrapper\">\r\n      <HorizontalBarPanel />\r\n      <div className=\"horizontal-bar-right\">\r\n        <svg ref={svgRef} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalBar"
        }
    ]
}