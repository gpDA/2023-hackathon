{
    "sourceFile": "src/components/VerticalBar/VerticalBar.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1692908649857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692910041145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,11 @@\n     scaleLinear,\r\n     select\r\n   } from \"d3\";\r\n \r\n+import VerticalBarPanel from \"./VerticalBarPanel\";\r\n+import './VerticalBar.scss';\r\n+\r\n const AxisBottom = ({scale, transform}) => {\r\n     const ref = useRef();\r\n \r\n     useEffect(() => {\r\n"
                },
                {
                    "date": 1692910099205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,18 +77,23 @@\n       .domain([0, Math.max(...data.map(({ value }) => value))])\r\n       .range([height, 0]);\r\n   \r\n     return (\r\n-      <svg\r\n-        width={width + margin.left + margin.right}\r\n-        height={height + margin.top + margin.bottom}\r\n-      >\r\n-        <g transform={`translate(${margin.left}, ${margin.top})`}>\r\n-          <AxisBottom scale={scaleX} transform={`translate(0, ${height})`} />\r\n-          <AxisLeft scale={scaleY} />\r\n-          <Bars data={data} height={height} scaleX={scaleX} scaleY={scaleY} />\r\n-        </g>\r\n-      </svg>\r\n+      <div className=\"vertical-bar-wrapper\">\r\n+        <VerticalBarPanel />\r\n+        <div className=\"vertical-bar-right\">\r\n+            <svg\r\n+            width={width + margin.left + margin.right}\r\n+            height={height + margin.top + margin.bottom}\r\n+          >\r\n+            <g transform={`translate(${margin.left}, ${margin.top})`}>\r\n+              <AxisBottom scale={scaleX} transform={`translate(0, ${height})`} />\r\n+              <AxisLeft scale={scaleY} />\r\n+              <Bars data={data} height={height} scaleX={scaleX} scaleY={scaleY} />\r\n+            </g>\r\n+          </svg>\r\n+        </div>\r\n+      </div>\r\n     );\r\n }\r\n \r\n export default VerticalBar\n\\ No newline at end of file\n"
                }
            ],
            "date": 1692908649857,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef } from 'react'\r\n\r\nimport {\r\n    axisBottom,\r\n    axisLeft,\r\n    ScaleBand,\r\n    scaleBand,\r\n    ScaleLinear,\r\n    scaleLinear,\r\n    select\r\n  } from \"d3\";\r\n\r\nconst AxisBottom = ({scale, transform}) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n          select(ref.current).call(axisBottom(scale));\r\n        }\r\n      }, [scale]);\r\n    \r\n    return <g ref={ref} transform={transform} />;\r\n}\r\n\r\nconst AxisLeft = ({scale, transform}) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        if (ref.current) {\r\n          select(ref.current).call(axisLeft(scale));\r\n        }\r\n      }, [scale]);\r\n    \r\n    return <g ref={ref} transform={transform} />;\r\n}\r\n\r\nconst Bars = ({data, height, scaleX, scaleY}) => {\r\n    return (\r\n        <>\r\n          {data.map(({ value, label }) => (\r\n            <rect\r\n              key={`bar-${label}`}\r\n              x={scaleX(label)}\r\n              y={scaleY(value)}\r\n              width={scaleX.bandwidth()}\r\n              height={height - scaleY(value)}\r\n              fill=\"teal\"\r\n            />\r\n          ))}\r\n        </>\r\n      );\r\n}\r\n\r\n// TODO: change the color of a bar (+ individually)\r\n// TODO: ultimately, make a storybook so that the user can play around with props\r\n// TODO: make it scale based on the screen size\r\n// TODO: change the x- y- axis tick rotation (+ individually)\r\n\r\n// TODO: onClick ... onHover event for the each ticks\r\n// TODO: hover over the bar and see what happens (+ individually)\r\n// TODO: max Value\r\n// TODO: enableLabel\r\n// \r\nconst VerticalBar = ({ data }) => {\r\n    const margin = { top: 10, right: 0, bottom: 20, left: 30 };\r\n    const width = 500 - margin.left - margin.right;\r\n    const height = 300 - margin.top - margin.bottom;\r\n  \r\n    const scaleX = scaleBand()\r\n      .domain(data.map(({ label }) => label))\r\n      .range([0, width])\r\n      .padding(0.5);\r\n    const scaleY = scaleLinear()\r\n      .domain([0, Math.max(...data.map(({ value }) => value))])\r\n      .range([height, 0]);\r\n  \r\n    return (\r\n      <svg\r\n        width={width + margin.left + margin.right}\r\n        height={height + margin.top + margin.bottom}\r\n      >\r\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\r\n          <AxisBottom scale={scaleX} transform={`translate(0, ${height})`} />\r\n          <AxisLeft scale={scaleY} />\r\n          <Bars data={data} height={height} scaleX={scaleX} scaleY={scaleY} />\r\n        </g>\r\n      </svg>\r\n    );\r\n}\r\n\r\nexport default VerticalBar"
        }
    ]
}