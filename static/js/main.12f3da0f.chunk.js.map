{"version":3,"sources":["components/Cell/Cell.jsx","components/utils/GroupButton/GroupButton.jsx","components/HorizontalBar/HorizontalBarPanel.jsx","components/HorizontalBar/HorizontalBar.jsx","components/VerticalBar/VerticalBarPanel.jsx","components/VerticalBar/VerticalBar.jsx","utils/color.js","components/HorizontalStackedBar/HorizontalStackedBarPanel.jsx","components/HorizontalStackedBar/HorizontalStackedBar.jsx","components/VeritcalStackedBar/VerticalStackedBarPanel.jsx","components/VeritcalStackedBar/VerticalStackedBar.jsx","components/AreaChart/AreaChartPanel.jsx","components/AreaChart/AreaChart.jsx","components/PieGraph/PieGraphPanel.jsx","components/PieGraph/PieGraph.jsx","utils/help.js","components/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","title","children","className","GroupButton","rotateId","buttons","rotateButtonGroupCB","map","buttonLabel","i","name","onClick","event","HorizontalBarPanel","setDataCB","HorizontalBar","data","width","height","margin","svgRef","useRef","y","useMemo","d3","range","domain","d","Country","padding","useState","setRotateId","widthLength","heightLength","svgTransform","axisY","axisX","axisXFunctionName","axisYFunctionName","axisYTransform","axisXTransform","axisXLeftRotateTransform","rectX","x","rectY","rectWidth","Value","rectHeight","bandwidth","rotateAttr","setRotateAttr","values","ele","xLinearDomainRange","useEffect","setRotateAttrHandler","attr","previous","drawSvg","useCallback","div","remove","append","createGraph","svg","call","tickSizeOuter","selectAll","style","join","current","ref","VerticalBarPanel","AxisBottom","scale","transform","select","axisBottom","AxisLeft","axisLeft","Bars","scaleX","scaleY","value","label","fill","VerticalBar","scaleBand","scaleLinear","Math","max","createColorPalette","type","len","slice","HorizontalStackedBarPanel","HorizontalStackedBar","show","xLabel","yLabel","groupKey","subgroups","colorPalette","colorType","handleAxis","groups","datanum","obj","Object","keys","reduce","acc","key","includes","parseInt","domainMax","ceil","handleScale","length","paletteRange","createPieGraph","stackedData","color","text","VerticalStackedBarPanel","VerticalStackedBar","defaultProps","AreaChartPanel","AreaChart","left","bottom","top","right","xAxis","yAxis","copyData","setCopyData","parseTime","newFormattedData","date","reformatDates","nice","createAreaGraph","ticks","classed","datum","y0","y1","PieGraphPanel","PieGraph","dataKey","arc","tooltip","donut","handleUniqDataLen","Set","el","uniqArr","Array","from","createDomain","createPie","pie","handleRadius","min","handleConerRadius","outerRadius","limitRange","cornerRadius","handleText","arcGenerator","outerArc","radius","enter","location","pos","centroid","midangle","startAngle","endAngle","PI","textAnchor","createTooltip","handleInnerRadius","innerRadius","handleTextLine","posA","posB","posC","pie_data","padAngle","Tooltip","on","transition","duration","pageX","pageY","dataObj","replace","match","str","parseTooltipText","showLine","sidebarNavItems","display","icon","to","section","Sidebar","activeIndex","setActiveIndex","stepHeight","setStepHeight","sidebarRef","indicatorRef","useLocation","setTimeout","sidebarItem","querySelector","clientHeight","curPath","window","pathname","split","activeItem","findIndex","item","index","defaultData","BAR_CHART_DATA","STACKED_BAR_CHART_DATA","diff","AREA_CHART_DATA","Layout","App","path","element","file","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f3da0f.chunk.js","sourcesContent":["import './Cell.scss'\n\nconst Cell = ({title, children,}) => {\n    return (\n        <div className=\"cell\">\n            <div>\n                {title}\n            </div>\n            {children}\n        </div>\n    )\n};\n\nexport default Cell;","import { useState } from 'react'\nimport './GroupButton.scss'\n\nconst GroupButton = ({rotateId, buttons, rotateButtonGroupCB}) => {\n\n    const handleClick = (event, id) => {\n        // setClickedId(id);\n        // console.log('>>> printButtonLabel', printButtonLabel);\n        rotateButtonGroupCB(id);\n      };    \n\n    return (\n        <>\n            {buttons.map((buttonLabel, i) => (\n                <button\n                key={i}\n                name={buttonLabel}\n                onClick={(event) => handleClick(event, i)}\n                className={i === rotateId ? \"customButton active\" : \"customButton\"}\n                >\n                {buttonLabel}\n                </button>\n            ))}\n        </>\n      );\n}\n\nexport default GroupButton;","import './HorizontalBarPanel.scss';\nimport Cell from '../Cell/Cell';\nimport ToggleButton from '../utils/ToggleButton/ToggleButton';\nimport GroupButton from '../utils/GroupButton/GroupButton';\nimport { FileUploader } from \"react-drag-drop-files\"; // in case, drag & drop file is useful\n\nconst HorizontalBarPanel = ({rotateId, rotateButtonGroupCB, setDataCB}) => {\n    const toggleCB = toggleState => {\n        // false | true\n    }\n\n    return (\n        <div className=\"horizontal-bar-left\">\n            {/* in case, drag & drop file is useful */}\n            {/* <Cell title={'cell-title'}>\n                <FileUploader handleChange={setDataCB} name=\"files\" types={[\"JPG\", \"PNG\", \"GIF\"]} />\n            </Cell>             */}\n\n            <Cell title={'cell-title'}>\n                <button\n                    onClick={() => setDataCB('test')}\n                >\n                    I am test button\n                </button>\n            </Cell>\n\n            <Cell title={'rotate'}>\n                <GroupButton\n                    buttons={[\"right\", \"top\", \"left\", \"bottom\"]}\n                    rotateButtonGroupCB={rotateButtonGroupCB}\n                    rotateId={rotateId}\n                />\n            </Cell>            \n\n            GroupButton\n\n            {/* <Cell title={'cell-title'}>\n                <ToggleButton \n                    label=\"Toggle me\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell> */}\n        </div>\n    )\n};\n\nexport default HorizontalBarPanel;","import React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport * as d3 from 'd3';\nimport HorizontalBarPanel from \"./HorizontalBarPanel\";\nimport './HorizontalBar.scss';\n\n\n\nconst HorizontalBar = ({\n  data = [],\n  setDataCB,\n  width=400,\n  height=300,\n  margin=20,\n}) => {\n  const svgRef = useRef(null);\n\n  // Y-axis\n  const y = useMemo(() => {\n    return d3\n      .scaleBand()\n      .range([ 0, height ])\n      .domain(data.map(function(d) { return d.Country; }))\n      .padding(.1);\n  }, [data]);     \n\n  // idea for the customization\n  // TODO: set the max for each ticks\n  // TODO: change the margin for x- & y- axis\n  // TODO: color change\n\n  // right: 0, top: 1, left: 2, bottom: 3\n  const [rotateId, setRotateId] = useState(0);\n  const [rotateAttr, setRotateAttr] = useState({\n    widthLength: width + margin + 100,\n    heightLength: height + margin + 100,\n    svgTransform: `translate(${margin + 30},${margin / 2})`,\n    axisY: y,\n    axisX: null, // x - x cannot be initialized before rotateAttr useState\n    axisXFunctionName: 'axisBottom',\n    axisYFunctionName: 'axisLeft',\n    axisYTransform: \"translate(0,\" + height + \")\",\n    axisXTransform: \"translate(10,10)rotate(45)\",\n    axisXLeftRotateTransform: null,\n    rectX: function () { return x(0)},\n    rectY: function(d) { return y(d.Country); },\n    rectWidth: function(d) { return x(d.Value); },\n    rectHeight: function () { return y.bandwidth()},\n  })\n\n  // X-axis\n\n  const x = useMemo(() => {\n    const values = data.map(ele => ele.Value)\n    let xLinearDomainRange = [0, d3.max(values)];\n\n    if (rotateId === 3 || rotateId === 2) {\n      xLinearDomainRange = [d3.max(values), 0]\n    } else {\n      xLinearDomainRange = [0, d3.max(values)] // [0, 100]\n    }\n    return d3.scaleLinear()\n    .domain(xLinearDomainRange)\n    .range([ 0, width])\n  }, [rotateId]);\n\n  \n\n  const rotateButtonGroupCB = (name) => {\n    setRotateId(name)\n  }\n\n  useEffect(() => {\n    // rotateCB();\n    setRotateAttrHandler();\n  }, [rotateId])\n\n  const setRotateAttrHandler = () => {\n    const attr = {};\n    if (rotateId === 0) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function () { return x(0)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 1) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2 + 60})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisTop',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0, 0)\";\n      attr.axisXTransform = \"translate(+10,-10)rotate(0)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function(d) { return y(d.Country); };\n      attr.rectY = function () { return x(0)};\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return x(d.Value); };\n    }\n    if (rotateId === 2) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisRight',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = `translate(${width}, 0)`;\n      attr.rectX = function (d) { return x(d.Value)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return width - x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 3) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2 + 60})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisRight',\n      attr.axisYTransform = `translate(0, ${height+100})`;\n      attr.axisXTransform = \"translate(+10,0)rotate(0)\";\n      attr.axisXLeftRotateTransform = `translate(${width-100}, 0)`;\n      attr.rectX = function(d) { return y(d.Country); }; // d.Country\n      attr.rectY = function (d) { return x(d.Value) }; // height + 100 - x(d.Value)\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return height + 100 - x(d.Value) };\n    }    \n\n    setRotateAttr((previous) => ({\n      ...previous,\n      ...attr,\n    }))    \n  }; \n\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".test2\").remove();\n      const svg = d3\n        .select(div)\n        .attr(\"width\", rotateAttr.widthLength)\n        .attr(\"height\", rotateAttr.heightLength)\n        .append(\"g\")\n        .attr('class', 'test2')\n        .attr(\"transform\", rotateAttr.svgTransform);\n\n      return svg;\n    },\n    [height, width, margin, rotateId]\n  );\n\n  const createGraph = (div) => {\n    const svg = drawSvg(div);\n\n    svg.append(\"g\")\n        .attr(\"transform\", rotateAttr.axisYTransform)\n        .call(d3[rotateAttr.axisXFunctionName](rotateAttr?.axisX ?? x\n        .range([ 0, width])).tickSizeOuter(0))\n        .selectAll(\"text\")\n          .attr(\"transform\", rotateAttr.axisXTransform)\n          .style(\"text-anchor\", \"end\");\n    svg.append(\"g\")\n        .call(d3[rotateAttr.axisYFunctionName](rotateAttr.axisY).tickSizeOuter(0))\n        // ${width}\n        .attr(\"transform\", rotateAttr.axisXLeftRotateTransform);\n\n    const rec = svg.selectAll(\"rect\").data(data);\n\n    rec\n      .join(\"rect\")\n      // .enter()\n      // .append(\"rect\")\n      .attr(\"class\", \"test\")\n      .attr(\"x\", (d) => (rotateAttr.rectX(d)))\n      .attr(\"y\", (d) => (rotateAttr.rectY(d)))\n      .attr(\"width\", (d) => (rotateAttr.rectWidth(d)))\n      .attr(\"height\", (d) => (rotateAttr.rectHeight(d)))\n      .attr(\"fill\", \"#69b3a2\")\n  }\n\n  useEffect(() => {\n    if (svgRef.current || data) {\n      createGraph(svgRef.current);\n    }\n  }, [svgRef, createGraph, data]);\n\n  return (\n    <div className=\"horizontal-bar-wrapper\">\n      <HorizontalBarPanel rotateId={rotateId} rotateButtonGroupCB={rotateButtonGroupCB} setDataCB={setDataCB} />\n      <div className=\"horizontal-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  )\n}\n\nexport default HorizontalBar;","import './VerticalBarPanel.scss'\n\nconst VerticalBarPanel = () => {\n    return (\n        <div className=\"vertical-bar-left\">\n            hello VerticalBarPanel\n        </div>\n    )\n};\n\nexport default VerticalBarPanel;","import React, { useEffect, useRef } from 'react'\n\nimport {\n    axisBottom,\n    axisLeft,\n    ScaleBand,\n    scaleBand,\n    ScaleLinear,\n    scaleLinear,\n    select\n  } from \"d3\";\n\nimport VerticalBarPanel from \"./VerticalBarPanel\";\nimport './VerticalBar.scss';\n\nconst AxisBottom = ({scale, transform}) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n          select(ref.current).call(axisBottom(scale));\n        }\n      }, [scale]);\n    \n    return <g ref={ref} transform={transform} />;\n}\n\nconst AxisLeft = ({scale, transform}) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n          select(ref.current).call(axisLeft(scale));\n        }\n      }, [scale]);\n    \n    return <g ref={ref} transform={transform} />;\n}\n\nconst Bars = ({data, height, scaleX, scaleY}) => {\n    return (\n        <>\n          {data.map(({ value, label }) => (\n            <rect\n              key={`bar-${label}`}\n              x={scaleX(label)}\n              y={scaleY(value)}\n              width={scaleX.bandwidth()}\n              height={height - scaleY(value)}\n              fill=\"teal\"\n            />\n          ))}\n        </>\n      );\n}\n\n// TODO: change the color of a bar (+ individually)\n// TODO: ultimately, make a storybook so that the user can play around with props\n// TODO: make it scale based on the screen size\n// TODO: change the x- y- axis tick rotation (+ individually)\n\n// TODO: onClick ... onHover event for the each ticks\n// TODO: hover over the bar and see what happens (+ individually)\n// TODO: max Value\n// TODO: enableLabel\n// \nconst VerticalBar = ({ data }) => {\n    const margin = { top: 10, right: 0, bottom: 20, left: 30 };\n    const width = 500 - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n  \n    const scaleX = scaleBand()\n      .domain(data.map(({ label }) => label))\n      .range([0, width])\n      .padding(0.5);\n    const scaleY = scaleLinear()\n      .domain([0, Math.max(...data.map(({ value }) => value))])\n      .range([height, 0]);\n  \n    return (\n      <div className=\"vertical-bar-wrapper\">\n        <VerticalBarPanel />\n        <div className=\"vertical-bar-right\">\n            <svg\n            width={width + margin.left + margin.right}\n            height={height + margin.top + margin.bottom}\n          >\n            <g transform={`translate(${margin.left}, ${margin.top})`}>\n              <AxisBottom scale={scaleX} transform={`translate(0, ${height})`} />\n              <AxisLeft scale={scaleY} />\n              <Bars data={data} height={height} scaleX={scaleX} scaleY={scaleY} />\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n}\n\nexport default VerticalBar","import * as d3 from \"d3\";\n\nexport const createColorPalette = (type, len) => {\n  switch (type) {\n    case \"Color-1\":\n      return d3.schemeCategory10.slice(0, len);\n    case \"Color-2\":\n      return d3.schemeAccent.slice(0, len);\n    case \"Color-3\":\n      return d3.schemeDark2.slice(0, len);\n    case \"Color-4\":\n      return d3.schemePaired.slice(0, len);\n    case \"Color-5\":\n      return d3.schemePastel1.slice(0, len);\n    case \"Color-6\":\n      return d3.schemePastel2.slice(0, len);\n    case \"Color-7\":\n      return d3.schemeSet1.slice(0, len);\n    case \"Color-8\":\n      return d3.schemeSet2.slice(0, len);\n    case \"Color-9\":\n      return d3.schemeSet3.slice(0, len);\n    case \"Color-10\":\n      return d3.schemeTableau10.slice(0, len);\n    default:\n      return [];\n  }\n};\n","import './HorizontalStackedBarPanel.scss'\n\nconst HorizontalStackedBarPanel = () => {\n    return (\n        <div className=\"horizontal-stacked-bar-left\">\n            hello HorizontalStackedBarPanel\n        </div>\n    )\n};\n\nexport default HorizontalStackedBarPanel;","import React, { useEffect, useCallback, useRef } from 'react';\nimport { createColorPalette } from \"../../utils/color\";\nimport * as d3 from 'd3';\nimport HorizontalStackedBarPanel from \"./HorizontalStackedBarPanel\";\nimport './HorizontalStackedBar.scss';\n\n\nconst HorizontalStackedBar = ({\n  data,\n  label = { show: true, xLabel: \"Percentage %\", yLabel: \"Fruit Type\" },\n  width = 400,\n  height = 400,\n  margin = 80,\n  groupKey = \"label\",\n  subgroups = [\"value\", \"diff\"],\n  colorPalette = [],\n  colorType = \"Color-6\"\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin + 50)\n        .attr(\"height\", height + margin + 50)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(\n    (groups) => {\n      const datanum = data.map((obj) =>\n        Object.keys(obj).reduce(\n          (acc, key) =>\n            subgroups.includes(key) ? acc + parseInt(obj[key]) : acc + 0,\n          0\n        )\n      );\n      const domainMax = Math.max(...datanum);\n\n      let y = d3.scaleBand().domain(groups).range([0, height]).padding([0.2]);\n      let x = d3\n        .scaleLinear()\n        .domain([0, Math.ceil(domainMax)])\n        .range([width, 0]);\n      return [x, y];\n    },\n    [width, height, subgroups]\n  );\n\n  const handleScale = useCallback(() => {\n    const len = subgroups.length;\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const color = d3.scaleOrdinal().domain(subgroups).range(paletteRange);\n    return color;\n  }, [subgroups, colorPalette, colorType]);\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const groups = data.map((d) => d[groupKey]);\n      const stackedData = d3.stack().keys(subgroups)(data);\n      const [x, y] = handleAxis(groups);\n      const color = handleScale();\n\n      // y axis\n      svg\n        .append(\"g\")\n        .call(d3.axisLeft(y).tickSizeOuter(0));\n      // x axis\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x));\n\n      svg\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(stackedData)\n        .join(\"g\")\n        .attr(\"fill\", (d) => color(d.key))\n        .selectAll(\"rect\")\n        .data((d) => d)\n        .join(\"rect\")\n        .attr(\"y\", (d) => y(d.data[groupKey]))\n        .attr(\"x\", (d) => x(d[1]))\n        .attr(\"width\", (d) => x(d[0]) - x(d[1]))\n        .attr(\"height\", y.bandwidth());\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", -height / 2)\n          .attr(\"y\", -margin / 1.3)\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(label.yLabel);\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", height + (margin * 2) / 2.5)\n          .attr(\"text-anchor\", \"middle\")\n          .text(label.xLabel);\n    },\n    [\n      drawSvg,\n      handleAxis,\n      handleScale,\n      height,\n      subgroups,\n      groupKey,\n      label,\n      margin,\n      width\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div className=\"horizontal-stacked-bar-wrapper\">\n      <HorizontalStackedBarPanel />\n      <div className=\"horizontal-stacked-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default HorizontalStackedBar","import './VerticalStackedBarPanel.scss'\n\nconst VerticalStackedBarPanel = () => {\n    return (\n        <div className=\"vertical-stacked-bar-left\">\n            hello VerticalStackedBarPanel\n        </div>\n    )\n};\n\nexport default VerticalStackedBarPanel;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport { createColorPalette } from \"../../utils/color\";\nimport * as d3 from \"d3\";\nimport VerticalStackedBarPanel from \"./VerticalStackedBarPanel\";\nimport './VerticalStackedBar.scss';\n\n\nconst VerticalStackedBar = ({\n  data,\n  label = { show: true, xLabel: \"Percentage %\", yLabel: \"Fruit Type\" },\n  width = 400,\n  height = 400,\n  margin = 80,\n  groupKey = \"label\",\n  subgroups = [\"value\", \"diff\"],\n  colorPalette = [],\n  colorType = \"Color-6\"\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin + 50)\n        .attr(\"height\", height + margin + 50)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin + 30},${margin / 2})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(\n    (groups) => {\n      const datanum = data.map((obj) =>\n        Object.keys(obj).reduce(\n          (acc, key) =>\n            subgroups.includes(key) ? acc + parseInt(obj[key]) : acc + 0,\n          0\n        )\n      );\n      const domainMax = Math.max(...datanum);\n\n      let x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2]);\n      let y = d3\n        .scaleLinear()\n        .domain([0, Math.ceil(domainMax)])\n        .range([height, 0]);\n      return [x, y];\n    },\n    [width, height, subgroups]\n  );\n\n  const handleScale = useCallback(() => {\n    const len = subgroups.length;\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const color = d3.scaleOrdinal().domain(subgroups).range(paletteRange);\n    return color;\n  }, [subgroups, colorPalette, colorType]);\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const groups = data.map((d) => d[groupKey]);\n      const stackedData = d3.stack().keys(subgroups)(data);\n      const [x, y] = handleAxis(groups);\n      const color = handleScale();\n\n      // x axis\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0));\n      // y axis\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      svg\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(stackedData)\n        .join(\"g\")\n        .attr(\"fill\", (d) => color(d.key))\n        .selectAll(\"rect\")\n        .data((d) => d)\n        .join(\"rect\")\n        .attr(\"x\", (d) => x(d.data[groupKey]))\n        .attr(\"y\", (d) => y(d[1]))\n        .attr(\"height\", (d) => y(d[0]) - y(d[1]))\n        .attr(\"width\", x.bandwidth());\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", -height / 2)\n          .attr(\"y\", -margin / 1.3)\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(label.xLabel);\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", height + (margin * 2) / 2.5)\n          .attr(\"text-anchor\", \"middle\")\n          .text(label.yLabel);\n    },\n    [\n      drawSvg,\n      handleAxis,\n      handleScale,\n      height,\n      subgroups,\n      groupKey,\n      label,\n      margin,\n      width\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div className=\"vertical-stacked-bar-wrapper\">\n      <VerticalStackedBarPanel />\n      <div className=\"vertical-stacked-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n};\n\nVerticalStackedBar.defaultProps = {\n  // data: [],\n  // domain: [],\n  // width: 400,\n  // height: 400,\n  // margin: {},\n  // xAxis: '',\n  // yAxis: '',\n  // barType: 'vertical',\n  // barColor: 'skyblue',\n  // text: {\n  //   angle: 'titled',\n  //   anchor: 'end'\n  // },\n  // label: {\n  //   show: false,\n  //   xLabel: '',\n  //   yLabel: ''\n  // },\n  // grid: {\n  //   xLine: false,\n  //   yLine: false\n  // },\n  // line: {\n  //   show: false,\n  //   color: 'white'\n  // },\n  // info: {\n  //   show: false,\n  //   location: 'inside',\n  //   color: 'black'\n  // }\n};\n\nexport default VerticalStackedBar;\n","import './AreaChartPanel.scss'\n\nconst AreaChartPanel = () => {\n    return (\n        <div className=\"area-chart-left\">\n            hello AreaChartPanel\n        </div>\n    )\n};\n\nexport default AreaChartPanel;","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport AreaChartPanel from \"./AreaChartPanel\";\nimport './AreaChart.scss';\n\n\nconst AreaChart = ({\n  data,\n  width = 400,\n  height = 400,\n  margin = { left: 100, bottom: 100, top: 50, right: 50 },\n  xAxis = \"date\",\n  yAxis = \"value\"\n  // tooltip={show: true, text: '<div>Portfolio Value: $%value%</div>'}\n}) => {\n  const svgRef = useRef(null);\n  const [copyData, setCopyData] = useState([]);\n\n  useEffect(() => {\n    const parseTime = d3.timeParse(\"%Y\");\n    const newFormattedData = data.map((obj) => {\n      return { date: parseTime(obj.data), value: obj.value };\n    });\n    setCopyData([...newFormattedData]);\n  }, []);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.right})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(() => {\n    let x, y;\n    // const domainMax = (axis) => Math.max.apply(Math, data.map(function(o) { return o[axis]; }))\n    // const scaleDomain = domain.length > 0 ? domain : createDomain(data, xAxis);\n    const reformatDates = copyData.map((obj) => obj[xAxis]);\n    x = d3\n      .scaleTime()\n      .domain(d3.extent(reformatDates))\n      .range([0, width])\n      .nice();\n\n    y = d3\n      .scaleLinear()\n      .domain([0, d3.max(copyData, (d) => +d[yAxis])])\n      .range([height, 0]);\n    return [x, y];\n  }, [width, height, copyData, xAxis, yAxis]);\n\n  const createAreaGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const [x, y] = handleAxis();\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x).ticks(d3.timeYear));\n      svg.append(\"g\").call(d3.axisLeft(y));\n      // svg.append('line').classed('hoverLine', true)\n      // svg.append('circle').classed('hoverPoint', true);\n      svg.append(\"text\").classed(\"hoverText\", true);\n\n      // Add the area\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\n          \"d\",\n          d3\n            .area()\n            .x((d) => x(d[xAxis]))\n            .y0(y(0))\n            .y1((d) => y(d[yAxis]))\n        );\n\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 2)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x((d) => x(d[xAxis]))\n            .y((d) => y(d[yAxis]))\n        );\n\n      svg\n        .selectAll(\"myCircles\")\n        .data(copyData)\n        .join(\"circle\")\n        .attr(\"fill\", \"yellow\")\n        .attr(\"stroke\", \"none\")\n        .attr(\"cx\", (d) => x(d[xAxis]))\n        .attr(\"cy\", (d) => y(d[yAxis]))\n        .attr(\"r\", 3);\n    },\n    [handleAxis, height, drawSvg, copyData, xAxis, yAxis]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createAreaGraph(svgRef.current);\n    }\n  }, [svgRef, createAreaGraph]);\n\n  return (\n    <div className=\"area-chart-wrapper\">\n      <AreaChartPanel />\n      <div className=\"area-chart-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default AreaChart;\n","import './PieGraphPanel.scss'\n\nconst PieGraphPanel = () => {\n    return (\n        <div className=\"pie-graph-left\">\n            hello PieGraphPanel\n        </div>\n    )\n};\n\nexport default PieGraphPanel;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport { createColorPalette } from \"../../utils/color\";\nimport { createDomain, parseTooltipText } from \"../../utils/help\";\nimport * as d3 from \"d3\";\nimport PieGraphPanel from \"./PieGraphPanel\";\nimport './PieGraph.scss';\n\nconst PieGraph = ({\n  data,\n  width,\n  height,\n  dataKey,\n  value,\n  colorPalette,\n  colorType,\n  margin,\n  style,\n  text,\n  arc,\n  tooltip,\n  donut\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      return svg;\n    },\n    [height, width]\n  );\n\n  const handleUniqDataLen = useCallback(() => {\n    const uniqueArr = [...new Set(data.map((el) => el[dataKey]))];\n    return uniqueArr.length;\n  }, [data, dataKey]);\n\n  const handleScale = useCallback(() => {\n    const len = handleUniqDataLen();\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const ordScale = d3\n      .scaleOrdinal()\n      .domain(createDomain(data, dataKey))\n      .range(paletteRange);\n    return ordScale;\n  }, [data, dataKey, handleUniqDataLen, colorPalette, colorType]);\n\n  const createPie = useCallback(() => {\n    const pie = d3.pie().value((d) => d[value]);\n    return pie(data);\n  }, [data, value]);\n\n  const handleRadius = useCallback(() => {\n    if (margin) {\n      return Math.min(width, height) / 2 - margin;\n    }\n    return Math.min(width, height) / 2;\n  }, [width, height, margin]);\n\n  const handleConerRadius = useCallback(() => {\n    const outerRadius = height / 2 - 30;\n    const innerRadius = outerRadius / 3;\n    const limitRange = (outerRadius - innerRadius) / 2;\n\n    if (arc.cornerRadius >= limitRange) return limitRange;\n    return arc.cornerRadius;\n  }, [height, arc]);\n\n  const handleText = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"arc\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"arcText\")\n        .text((d) => d.data[dataKey])\n        .attr(\"transform\", function (d) {\n          if (text.location === \"outside\") {\n            const pos = outerArc.centroid(d);\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n            return \"translate(\" + pos + \")\";\n          }\n          return `translate(${arcGenerator.centroid(d)})`;\n        })\n        .style(\"text-anchor\", function (d) {\n          if (text.location === \"outside\") {\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            return midangle < Math.PI ? \"start\" : \"end\";\n          }\n          return text.textAnchor;\n        });\n    },\n    [dataKey, text]\n  );\n\n  const createTooltip = useCallback(() => {\n    const tooltipDiv = d3\n      .select(\".App\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"opacity\", 0);\n    return tooltipDiv;\n  }, []);\n\n  const handleInnerRadius = useCallback(\n    (radius) => {\n      if (donut.show) {\n        return radius < donut.innerRadius ? radius : donut.innerRadius;\n      }\n      return 0;\n    },\n    [donut]\n  );\n\n  const handleTextLine = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"allPolylines\")\n        .data(data)\n        .enter()\n        .append(\"polyline\")\n        .attr(\"class\", \"textLine\")\n        .style(\"fill\", \"none\")\n        .attr(\"points\", function (d) {\n          const posA = arcGenerator.centroid(d); // line insertion in the slice\n          const posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\n          const posC = outerArc.centroid(d); // Label position = almost the same as posB\n          const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\n          posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n          return [posA, posB, posC];\n        });\n    },\n    []\n  );\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const pie_data = createPie();\n      const color = handleScale();\n      const radius = handleRadius();\n      const arcGenerator = d3\n        .arc()\n        .innerRadius(handleInnerRadius(radius)) // range = 0 <= radius\n        .outerRadius(radius)\n        .cornerRadius(handleConerRadius())\n        .padAngle(arc.padAngle);\n      const outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      const Tooltip = createTooltip();\n\n      // create arc and fill in the color by value\n      svg\n        .selectAll(\".arc\")\n        .data(pie_data)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", arcGenerator)\n        .attr(\"fill\", (d) => color(d.data[dataKey]))\n        .on(\"mouseover\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition()\n              .duration(200)\n              .style(\"opacity\", 1)\n              .style(\"left\", event.pageX + 20 + \"px\")\n              .style(\"top\", event.pageY - 20 + \"px\")\n              .text(parseTooltipText(tooltip.text, d.data));\n        })\n        .on(\"mouseout\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n\n      // text line\n      text.showLine &&\n        handleTextLine(svg, pie_data, arcGenerator, outerArc, radius);\n      // text\n      text.show && handleText(svg, pie_data, arcGenerator, outerArc, radius);\n    },\n    [\n      handleTextLine,\n      handleInnerRadius,\n      dataKey,\n      tooltip,\n      createTooltip,\n      drawSvg,\n      createPie,\n      handleScale,\n      handleRadius,\n      text,\n      arc,\n      handleConerRadius,\n      handleText\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div style={{ margin: \"2em\" }} className=\"pie-graph-wrapper\">\n      <PieGraphPanel />\n      <div className=\"pie-graph-right\">\n        <svg ref={svgRef} width={width} height={height} />\n      </div>\n    </div>\n  );\n};\n\nPieGraph.defaultProps = {\n  data: [],\n  width: 300,\n  height: 300,\n  dataKey: \"\",\n  value: \"\",\n  colorPalette: [],\n  colorType: \"Color-1\",\n  margin: 0,\n  text: {\n    show: false,\n    textAnchor: \"middle\",\n    location: \"inside\",\n    showLine: false\n  },\n  arc: {\n    padAngle: 0,\n    cornerRadius: 0\n  },\n  tooltip: {\n    show: false,\n    text: \"\"\n  },\n  donut: {\n    show: false,\n    innerRadius: 0\n  }\n};\n\nexport default PieGraph;","export const createDomain = (data, key) => {\n  const uniqArr = new Set(data.map((el) => el[key]));\n  return Array.from(uniqArr);\n};\n\nexport const parseTooltipText = (text, dataObj) => {\n  const newText = text.replace(/%.*?%/g, (match) => {\n    const str = match.replace(/[^()_a-zA-Z0-9-]+/g, \"\");\n    return dataObj[str];\n  });\n  return newText;\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Sidebar.scss';\n\nconst sidebarNavItems = [\n    {\n        display: 'Horizontal Bar',\n        icon: <i className='bx bx-home'></i>,\n        to: '/2023-hackathon/horizontal-bar',\n        section: ''\n    },\n    {\n        display: 'Vertical Bar',\n        icon: <i className='bx bx-star'></i>,\n        to: '/2023-hackathon/vertical-bar',\n        section: 'started'\n    },\n    {\n        display: 'Vertical Staked Bar',\n        icon: <i className='bx bx-calendar'></i>,\n        to: '/2023-hackathon/vertical-stacked-bar',\n        section: 'calendar'\n    },\n    {\n        display: 'Horizontal Stacked Bar',\n        icon: <i className='bx bx-user'></i>,\n        to: '/2023-hackathon/horizontal-stacked-bar',\n        section: 'user'\n    },\n    {\n        display: 'Area Chart',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/area-chart',\n        section: 'order'\n    },\n    {\n        display: 'Pie Graph',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/pie-graph',\n        section: 'order'\n    },    \n]\n\nconst Sidebar = () => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [stepHeight, setStepHeight] = useState(0);\n    const sidebarRef = useRef();\n    const indicatorRef = useRef();\n    const location = useLocation();\n\n    useEffect(() => {\n        setTimeout(() => {\n            const sidebarItem = sidebarRef.current.querySelector('.sidebar__menu__item');\n            indicatorRef.current.style.height = `${sidebarItem.clientHeight}px`;\n            setStepHeight(sidebarItem.clientHeight);\n        }, 50);\n    }, []);\n\n    // change active index\n    useEffect(() => {\n        const curPath = window.location.pathname.split('/')[1];\n        const activeItem = sidebarNavItems.findIndex(item => item.section === curPath);\n        setActiveIndex(curPath.length === 0 ? 0 : activeItem);\n    }, [location]);\n\n    return <div className='sidebar'>\n        <div className=\"sidebar__logo\">\n            Animate\n        </div>\n        <div ref={sidebarRef} className=\"sidebar__menu\">\n            <div\n                ref={indicatorRef}\n                className=\"sidebar__menu__indicator\"\n                style={{\n                    transform: `translateX(-50%) translateY(${activeIndex * stepHeight}px)`\n                }}\n            ></div>\n            {\n                sidebarNavItems.map((item, index) => (\n                    <Link to={item.to} key={index}>\n                        <div className={`sidebar__menu__item ${activeIndex === index ? 'active' : ''}`}>\n                            <div className=\"sidebar__menu__item__icon\">\n                                {item.icon}\n                            </div>\n                            <div className=\"sidebar__menu__item__text\">\n                                {item.display}\n                            </div>\n                        </div>\n                    </Link>\n                ))\n            }\n        </div>\n    </div>;\n};\n\nexport default Sidebar;","import './App.scss';\nimport React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport HorizontalBar from \"./components/HorizontalBar/HorizontalBar\";\nimport VerticalBar from \"./components/VerticalBar/VerticalBar\";\nimport HorizontalStackedBar from \"./components/HorizontalStackedBar/HorizontalStackedBar\";\nimport VerticalStackedBar from \"./components/VeritcalStackedBar/VerticalStackedBar\";\nimport AreaChart from \"./components/AreaChart/AreaChart\";\nimport PieGraph from \"./components/PieGraph/PieGraph\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { Routes, Route, Outlet, Link } from \"react-router-dom\";\n\nconst defaultData = [\n  { Country: 'US', Value: 100 },\n  { Country: 'S. Korea', Value: 85 },\n  { Country: 'Italy', Value: 72 },\n  { Country: 'Japan', Value: 80 },\n]\n\nconst BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100 },\n  { label: \"Bananas\", value: 200 },\n  { label: \"Oranges\", value: 50 },\n  { label: \"Kiwis\", value: 150 }\n];\n\nconst STACKED_BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100, diff: 100, max: 200 },\n  { label: \"Bananas\", value: 200, diff: 0, max: 200 },\n  { label: \"Oranges\", value: 50, diff: 150, max: 200  },\n  { label: \"Kiwis\", value: 150, diff: 50, max: 200  }\n];\n\nconst AREA_CHART_DATA = [\n  { data: \"2001\", value: 100 },\n  { data: \"2002\", value: 150 },\n  { data: \"2003\", value: 100 },\n  { data: \"2004\", value: 400 },\n  { data: \"2005\", value: 1070 },\n  { data: \"2006\", value: 700 }\n];\n\n\nfunction App() {\n\n  const [data, setDataCB] = useState(defaultData);\n\n  // TADA: WORKING NOW - drag and drop - make \n  const setData = (file) => {\n    console.log('setData', file)\n    setDataCB(\n      [\n        { Country: 'USA', Value: 80 },\n        { Country: 'S. Korea', Value: 85 },\n        { Country: 'Italy', Value: 72 },\n        { Country: 'Japan', Value: 80 },\n      ]\n    )\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/2023-hackathon\" element={<Layout />}>\n          <Route path='horizontal-bar' element={<HorizontalBar data={data} setDataCB={setData} />}/>\n          <Route path='vertical-bar' element={<VerticalBar data={BAR_CHART_DATA} />}/>\n          <Route path='vertical-stacked-bar' element={<VerticalStackedBar data={STACKED_BAR_CHART_DATA}  />}/>\n          <Route path='horizontal-stacked-bar' element={<HorizontalStackedBar data={STACKED_BAR_CHART_DATA}/>}/>\n          <Route path='area-chart' element={<AreaChart data={AREA_CHART_DATA} />}/>\n          <Route path='pie-graph' element={<PieGraph data={BAR_CHART_DATA} dataKey=\"label\" value=\"value\" />}/>\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Layout() {\n  return <div style={{\n    padding: '50px 0px 0px 370px'\n}}>\n    <Sidebar />\n    <Outlet />\n</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}