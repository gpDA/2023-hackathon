{"version":3,"sources":["components/Sidebar/Sidebar.module.scss","components/GraphGallery/GraphGallery.module.scss","components/utils/ToggleButton/ToggleButton.module.scss","components/Bar/Bar.module.scss","components/Cell/Cell.jsx","components/utils/ToggleButton/ToggleButton.jsx","components/utils/GroupButton/GroupButton.jsx","components/utils/ColorPicker/ColorPicker.jsx","components/Bar/BarPanel.jsx","components/Bar/Bar.jsx","utils/color.js","components/StackedBar/StackedBarPanel.jsx","components/StackedBar/StackedBar.jsx","components/AreaChart/AreaChartPanel.jsx","components/AreaChart/AreaChart.jsx","components/PieGraph/PieGraphPanel.jsx","components/PieGraph/PieGraph.jsx","utils/help.js","components/Sidebar/Sidebar.jsx","components/GraphGallery/GraphGallery.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Cell","title","children","className","ToggleButton","id","label","toggled","onClick","onChange","value","useState","isToggled","toggle","styles","style","marginBottom","type","defaultChecked","width","readonly","min","max","GroupButton","buttons","buttonGroupCB","map","buttonLabel","i","name","event","handleClick","ColorPicker","height","color","handleChange","hsva","BarPanel","rotateId","rotateButtonGroupCB","recColor","interactiveTextColor","handleColorPick","setDataCB","toggleCB","maxValue","maxValueCB","Bar","data","margin","shouldDisplay","svgRef","useRef","y","useMemo","d3","range","domain","d","Country","padding","setRotateId","setRecColor","setInteractiveTextColor","setMaxValue","isInteractiveValue","setIsInteractiveValue","widthLength","heightLength","svgTransform","axisY","axisX","axisXFunctionName","axisYFunctionName","axisYTransform","axisXTransform","axisXLeftRotateTransform","rectX","x","rectY","rectWidth","Value","rectHeight","bandwidth","test","rotateAttr","setRotateAttr","handleMaxValue","values","ele","xLinearDomainRange","useEffect","setRotateAttrHandler","attr","previous","drawSvg","useCallback","div","remove","append","mouseOverEvent","svg","selectAll","on","text","mouseOutEvent","createGraph","call","tickSizeOuter","join","current","bar_graph","ref","hex","toggleState","e","target","createColorPalette","len","slice","StackedBarPanel","colorType","setColorType","minMaxVal","rangeVal","setRangeVal","handleLabel","labels","hover","checked","setChecked","checked2","setChecked2","onChangeLabel","index","options","nextChecked","Math","ceil","xLabel","yLabel","StackedBar","show","groupKey","colorPalette","subgroups","Object","keys","obj","reduce","acc","key","includes","parseInt","graphAngle","setGraphAngle","setLabels","handleAxis","groups","domainMax","handleScale","length","paletteRange","handleXAxis","svgContent","handleYAxis","createPieGraph","stackedData","this","transition","duration","angle","prev","AreaChartPanel","AreaChart","left","bottom","top","right","xAxis","yAxis","copyData","setCopyData","parseTime","newFormattedData","date","reformatDates","nice","createAreaGraph","ticks","classed","datum","y0","y1","PieGraphPanel","PieGraph","dataKey","arc","tooltip","donut","handleUniqDataLen","Set","el","uniqArr","Array","from","createDomain","createPie","pie","handleRadius","handleConerRadius","outerRadius","limitRange","cornerRadius","handleText","arcGenerator","outerArc","radius","enter","location","pos","centroid","midangle","startAngle","endAngle","PI","textAnchor","createTooltip","handleInnerRadius","innerRadius","handleTextLine","posA","posB","posC","pie_data","padAngle","Tooltip","pageX","pageY","dataObj","replace","match","str","parseTooltipText","showLine","defaultProps","sidebarNavItems","display","icon","to","section","Sidebar","activeIndex","setActiveIndex","useLocation","navigate","useNavigate","console","log","curPath","window","pathname","split","activeItem","findIndex","item","sidebar","defaultData","graphGallery","barData","setBarData","handleFileUpload","file","a","reader","FileReader","addEventListener","result","parsedData","JSON","parse","readAsText","types","BAR_CHART_DATA","STACKED_BAR_CHART_DATA","diff","value1","diff1","AREA_CHART_DATA","Layout","App","path","element","GraphGallery","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9415c35c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3qUkX\",\"sidebar__logo\":\"Sidebar_sidebar__logo__24jLF\",\"sidebar__menu\":\"Sidebar_sidebar__menu__Fm3D3\",\"sidebar__menu__item\":\"Sidebar_sidebar__menu__item__1aJQo\",\"active\":\"Sidebar_active__9wFJE\",\"sidebar__menu__item__icon\":\"Sidebar_sidebar__menu__item__icon__XCl5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphGallery\":\"GraphGallery_graphGallery__Fefxx\",\"graph-wrapper\":\"GraphGallery_graph-wrapper__2F5xI\",\"graph\":\"GraphGallery_graph__2LJzW\",\"drag-drop-wrapper\":\"GraphGallery_drag-drop-wrapper__1zJo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleButton\":\"ToggleButton_toggleButton__3cASR\",\"input-wrapper\":\"ToggleButton_input-wrapper__1xN-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar-wrapper\":\"Bar_bar-wrapper__3fEds\",\"bar-right\":\"Bar_bar-right__1XL2E\",\"bar_graph\":\"Bar_bar_graph__1leK_\"};","import './Cell.scss'\n\nconst Cell = ({title, children,}) => {\n    return (\n        <div className=\"cell\">\n            <div className=\"title\">\n                {title}\n            </div>\n            {children}\n        </div>\n    )\n};\n\nexport default Cell;","import { useEffect, useState } from 'react'\nimport styles  from './ToggleButton.module.scss'\n\nconst ToggleButton = ({ id, label, toggled, onClick, onChange, value }) => {\n    const [isToggled, toggle] = useState(toggled);\n\n\n    const callback = () => {\n        toggle(!isToggled)\n        onClick(!isToggled, id)\n    }\n\n    return (\n        <>\n            <label className={styles['toggleButton']}>\n                <div style={{marginBottom: '30px'}}>\n                    <input type=\"checkbox\" defaultChecked={isToggled} onClick={callback} />\n                    <span />\n                </div>\n                {\n                    !isToggled && (id === 'max' || id === 'min')  && \n                    (\n                        <div className={styles['input-wrapper']}>\n                            <input style={{width: '30px'}} readonly value={value === -1 ? 0 : value} />\n                            <input style={{width: '100px'}} type=\"range\" min={0} max={300} onChange={onChange} value={value} />\n                        </div>\n                    )\n                }               \n            </label>\n\n            {isToggled && label}\n        </>\n    )\n}\n\nexport default ToggleButton;","import { useState } from 'react'\nimport './GroupButton.scss'\n\nconst GroupButton = ({id, buttons, buttonGroupCB}) => {\n\n    const handleClick = (event, id) => {\n        buttonGroupCB(id);\n      };    \n\n    return (\n        <>\n            {buttons.map((buttonLabel, i) => (\n                <button\n                key={i}\n                name={buttonLabel}\n                onClick={(event) => handleClick(event, i)}\n                className={i === id ? \"customButton active\" : \"customButton\"}\n                >\n                {buttonLabel}\n                </button>\n            ))}\n        </>\n      );\n}\n\nexport default GroupButton;","import './ColorPicker.scss';\nimport { Wheel } from '@uiw/react-color';\n\nconst ColorPicker = ({width = 50, height = 50, id, color, handleChange}) => {\n\n    return (\n        <>\n            <Wheel width={width} height={height} color={color} onChange={(color) => handleChange(id, { ...color, ...color.hsva })} />\n        </>\n      );\n}\n\nexport default ColorPicker;","import Cell from '../Cell/Cell';\nimport ToggleButton from '../utils/ToggleButton/ToggleButton';\nimport GroupButton from '../utils/GroupButton/GroupButton';\nimport ColorPicker from '../utils/ColorPicker/ColorPicker';\n\nconst BarPanel = ({\n    rotateId, rotateButtonGroupCB, \n    recColor, interactiveTextColor, handleColorPick,\n    setDataCB, toggleCB, \n    maxValue, maxValueCB,\n    }) => {\n\n    return (\n        <div className=\"graph-pannel-container\">\n            {/* in case, drag & drop file is useful */}\n            {/* <Cell title={'cell-title'}>\n                <FileUploader handleChange={setDataCB} name=\"files\" types={[\"JPG\", \"PNG\", \"GIF\"]} />\n            </Cell>             */}\n\n            <Cell title={'cell-title'}>\n                <button\n                    onClick={() => setDataCB('test')}\n                >\n                    I am test button\n                </button>\n            </Cell>\n\n            <Cell title={'ROTATE'}>\n                <GroupButton\n                    buttons={[\"right\", \"top\", \"left\", \"bottom\"]}\n                    buttonGroupCB={rotateButtonGroupCB}\n                    id={rotateId}\n                />\n            </Cell>\n\n            <Cell title={'MAX VALUE'}>\n                <ToggleButton \n                    id=\"max\"\n                    label=\"auto\"\n                    toggled={true}\n                    onClick={toggleCB}\n                    onChange={maxValueCB}\n                    value={maxValue}\n                />\n            </Cell>\n\n            <Cell title={'BAR COLOR'}>\n                <ColorPicker\n                    id='rec-color'\n                    handleChange={handleColorPick}\n                    color={recColor}\n                 />\n            </Cell>\n            \n\n            <Cell title={'IS INTERACTIVE'}>\n                <ToggleButton \n                    id=\"interactive\"\n                    label=\"is interactive\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell>\n            <Cell title={'HOVER TEXT COLOR'}>\n                <ColorPicker\n                    id='interactive-text-color'\n                    handleChange={handleColorPick}\n                    color={interactiveTextColor}\n                 />\n            </Cell>                        \n        </div>\n    )\n};\n\nexport default BarPanel;","import React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport * as d3 from 'd3';\nimport BarPanel from \"./BarPanel\";\nimport styles from './Bar.module.scss';\nimport {createColorPalette} from '../utils/helper';\n\n\n\nconst Bar = ({\n  data = [],\n  setDataCB,\n  width=400,\n  height=300,\n  margin=20,\n  shouldDisplay= true\n}) => {\n  const svgRef = useRef(null);\n\n  // Y-axis\n  const y = useMemo(() => {\n    return d3\n      .scaleBand()\n      .range([ 0, height ])\n      .domain(data.map(function(d) { return d.Country; }))\n      .padding(.1);\n  }, [data]);     \n\n  // right: 0, top: 1, left: 2, bottom: 3\n  const [rotateId, setRotateId] = useState(0);\n  const [recColor, setRecColor] = useState('#1C70C8');\n  const [interactiveTextColor, setInteractiveTextColor] = useState('#1C70C8');\n  const [maxValue, setMaxValue] = useState(0);\n  const [isInteractiveValue, setIsInteractiveValue] = useState(true);\n  const [rotateAttr, setRotateAttr] = useState({\n    widthLength: width + margin + 100,\n    heightLength: height + margin + 100,\n    svgTransform: `translate(${margin + 30},${margin / 2})`,\n    axisY: y,\n    axisX: null, // x - x cannot be initialized before rotateAttr useState\n    axisXFunctionName: 'axisBottom',\n    axisYFunctionName: 'axisLeft',\n    axisYTransform: \"translate(0,\" + height + \")\",\n    axisXTransform: \"translate(10,10)rotate(45)\",\n    axisXLeftRotateTransform: null,\n    rectX: function () { return x(0)},\n    rectY: function(d) { return y(d.Country); },\n    rectWidth: function(d) { return x(d.Value); },\n    rectHeight: function () { return y.bandwidth()},\n    test: function(d) { return y(d[\"Country\"]) + y.bandwidth() / 2 + 10; },\n  })\n\n  const handleMaxValue = () => {\n    const values = data.map(ele => ele.Value)\n    return d3.max(values) > maxValue || maxValue === -1 ? d3.max(values) : maxValue;\n  }\n\n  // X-axis\n  const x = useMemo(() => {\n\n    let xLinearDomainRange = [0, handleMaxValue()];\n\n    if (rotateId === 3 || rotateId === 2) {\n      xLinearDomainRange = [handleMaxValue(), 0];\n    } else {\n      xLinearDomainRange = [0, handleMaxValue()];\n    }\n    return d3.scaleLinear()\n    .domain(xLinearDomainRange)\n    .range([ 0, width])\n  }, [rotateId, maxValue]);\n\n  \n\n  const rotateButtonGroupCB = (name) => {\n    setRotateId(name)\n  }\n\n  const handleColorPick = (id, color) => {\n    if (id === 'rec-color') {\n      setRecColor(color.hex)\n    }\n    if (id === 'interactive-text-color') {\n      setInteractiveTextColor(color.hex)\n    }    \n    \n  }\n\n  const maxValueCB = (e) => {\n    setMaxValue(e.target.value);\n  } \n\n  const toggleCB = (toggleState, id) => {\n    if (id === 'max' && toggleState) {\n      setMaxValue(-1);\n    }\n    if (id === 'interactive') {\n      setIsInteractiveValue(toggleState);\n    }\n  }\n\n  useEffect(() => {\n    setRotateAttrHandler();\n  }, [rotateId, maxValue, recColor, interactiveTextColor])\n\n  const setRotateAttrHandler = () => {\n    const attr = {};\n    if (rotateId === 0) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function () { return x(0)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 1) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2 + 20})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisTop',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0, 0)\";\n      attr.axisXTransform = \"translate(+10,-10)rotate(0)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function(d) { return y(d.Country); };\n      attr.rectY = function () { return x(0)};\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return x(d.Value); };\n    }\n    if (rotateId === 2) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisRight',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = `translate(${width}, 0)`;\n      attr.rectX = function (d) { return x(d.Value)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return width - x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 3) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = `translate(0, ${height+100})`;\n      attr.axisXTransform = \"translate(+10,0)rotate(0)\";\n      attr.axisXLeftRotateTransform = `translate(0, 0)`;\n      attr.rectX = function(d) { return y(d.Country); }; // d.Country\n      attr.rectY = function (d) { return x(d.Value) }; // height + 100 - x(d.Value)\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return height + 100 - x(d.Value) };\n    }    \n\n    setRotateAttr((previous) => ({\n      ...previous,\n      ...attr,\n    }))    \n  }; \n\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".svg-wrapper\").remove();\n      \n      const svg = d3\n        .select(div)\n        .attr(\"width\", rotateAttr.widthLength)\n        .attr(\"height\", rotateAttr.heightLength)\n        .append(\"g\")\n        .attr('class', 'svg-wrapper')\n        .attr(\"transform\", rotateAttr.svgTransform);\n\n      return svg;\n    },\n    [height, width, rotateAttr]\n  );\n\n  const mouseOverEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseover\", (event, d) => {\n        svg\n          .append(\"line\")\n          .attr(\"class\", \"valueLine\")\n          .attr(\"y1\", () => {\n            if (rotateId === 0) {\n              return 0;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return 0;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }           \n          })\n          .attr(\"x1\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return 0;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return 0;\n            }\n          })\n          .attr(\"y2\", () => {\n            if (rotateId === 0) {\n              return height;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return height;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }\n          })\n          .attr(\"x2\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return height;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return height;\n            }\n          });\n\n\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"info\")\n          .attr(\"fill\", interactiveTextColor)\n          .attr(\"font-size\", `18px`)\n\n          .attr(\"y\", () => {\n            if (rotateId === 0) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 1) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 2) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 3) {\n              return x(d['Value'] + 10);\n            }\n  \n          })\n          .attr(\"x\", () => {\n            if (rotateId === 0) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 1) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 2) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 3) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }              \n          })\n          .attr(\"text-anchor\", \"middle\")\n          .text(() => {\n            const value = d['Value'];\n            return `${value}%`;\n          })\n\n      });      \n\n    },\n    [rotateAttr]\n  );\n\n  const mouseOutEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseout\", (event, d) => {\n        svg.selectAll(\".valueLine\").remove();\n        svg.selectAll(\".info\").remove();\n      })\n    }, [rotateAttr]);  \n\n  const createGraph = (div) => {\n    const svg = drawSvg(div);\n\n    svg.append(\"g\")\n        .attr(\"transform\", rotateAttr.axisYTransform)\n        .call(d3[rotateAttr.axisXFunctionName](rotateAttr?.axisX ?? x\n        .range([ 0, width])).tickSizeOuter(0))\n        .selectAll(\"text\")\n          .attr(\"transform\", rotateAttr.axisXTransform)\n          .style(\"text-anchor\", \"end\");\n    svg.append(\"g\")\n        .call(d3[rotateAttr.axisYFunctionName](rotateAttr.axisY).tickSizeOuter(0))\n        .attr(\"transform\", rotateAttr.axisXLeftRotateTransform);\n\n    const rec = svg.selectAll(\"rect\").data(data);\n\n    rec\n      .join(\"rect\")\n      .attr(\"class\", \"test\")\n      .attr(\"x\", (d) => (rotateAttr.rectX(d)))\n      .attr(\"y\", (d) => (rotateAttr.rectY(d)))\n      .attr(\"width\", (d) => (rotateAttr.rectWidth(d)))\n      .attr(\"height\", (d) => (rotateAttr.rectHeight(d)))\n      .attr(\"fill\", recColor)\n\n      isInteractiveValue && mouseOverEvent(svg);\n      isInteractiveValue && mouseOutEvent(svg);\n  }\n\n  useEffect(() => {\n    if (svgRef.current || data) {\n      createGraph(svgRef.current);\n    }\n  }, [svgRef, createGraph, data]);\n\n  return (\n    <div className={\"graph-wrapper\"}>\n      <div className={`svg-container ${styles.bar_graph}`}>\n        <svg ref={svgRef} />\n      </div>\n      {\n        shouldDisplay &&\n          <BarPanel \n            rotateId={rotateId} rotateButtonGroupCB={rotateButtonGroupCB} \n            recColor={recColor} interactiveTextColor={interactiveTextColor} handleColorPick={handleColorPick} \n            setDataCB={setDataCB} \n            toggleCB={toggleCB}\n            maxValue={maxValue}\n            maxValueCB={maxValueCB}        \n          />\n      }\n    </div>\n  )\n}\n\nexport default Bar;","import * as d3 from \"d3\";\n\nexport const createColorPalette = (type, len) => {\n  switch (type) {\n    case \"Color-1\":\n      return d3.schemeCategory10.slice(0, len);\n    case \"Color-2\":\n      return d3.schemeAccent.slice(0, len);\n    case \"Color-3\":\n      return d3.schemeDark2.slice(0, len);\n    case \"Color-4\":\n      return d3.schemePaired.slice(0, len);\n    case \"Color-5\":\n      return d3.schemePastel1.slice(0, len);\n    case \"Color-6\":\n      return d3.schemePastel2.slice(0, len);\n    case \"Color-7\":\n      return d3.schemeSet1.slice(0, len);\n    case \"Color-8\":\n      return d3.schemeSet2.slice(0, len);\n    case \"Color-9\":\n      return d3.schemeSet3.slice(0, len);\n    case \"Color-10\":\n      return d3.schemeTableau10.slice(0, len);\n    default:\n      return [];\n  }\n};\n","import React, { useState } from 'react';\nimport Switch from 'react-switch';\nimport Cell from '../Cell/Cell';\nimport GroupButton from '../utils/GroupButton/GroupButton';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\n\nconst StackedBarPanel = ({ colorType, setColorType, range: { minMaxVal, rangeVal, setRangeVal }, handleClick, handleLabel, labels, hover: { checked, setChecked, checked2, setChecked2 } }) => {\n  const [rotateId, setRotateId] = useState(2);\n\n  const handleSwitch = (nextChecked) => {\n    setChecked(nextChecked);\n  }\n\n  const handleSwitch2 = (nextChecked) => {\n    setChecked2(nextChecked);\n  }\n\n  const handleRotate = (index) => {\n    const angle = [\"right\", \"top\", \"left\", \"bottom\"][index];\n    handleClick(angle);\n    setRotateId(index)\n  }\n\n  const onChangeLabel = (e) => {\n    const type = e.target.name;\n    const value = e.target.value;\n    handleLabel(type, value);\n  };\n\n  const handleRange = (e) => {\n    const value = e.target.value;\n    setRangeVal(value);\n  }\n\n    return (\n        <div className=\"graph-pannel-container\">\n          <Cell title={\"Rotate Graph\"}>\n            <GroupButton\n              buttons={[\"right\", \"top\", \"left\", \"bottom\"]}\n              buttonGroupCB={handleRotate}\n              id={rotateId}\n            />\n          </Cell>\n          <Cell title={\"Color\"}>\n            <Dropdown\n              options={[\n                { value: 'Color-1', label: 'Color-1'},\n                { value: 'Color-2', label: 'Color-2'},\n                { value: 'Color-3', label: 'Color-3'},\n                { value: 'Color-4', label: 'Color-4'},\n                { value: 'Color-5', label: 'Color-5'},\n                { value: 'Color-6', label: 'Color-6'},\n              ]}\n              onChange={setColorType}\n              value={colorType}\n            />\n          </Cell>\n          <Cell title={\"Max Value\"}>\n            <Switch \n              onChange={handleSwitch2}\n              checked={checked2}\n            />\n            { !checked2 &&\n              <input \n                type=\"range\" \n                name=\"maxValue\" \n                min={Math.ceil(minMaxVal)}\n                max={Math.ceil(minMaxVal) + 300}\n                onChange={handleRange}\n                value={rangeVal} \n              />\n            }\n          </Cell>\n          <Cell title={\"INTERACTIVE\"}>\n            <Switch \n              onChange={handleSwitch}\n              checked={checked}\n            />\n          </Cell>\n          <Cell title={\"Labels\"}>\n            <div>\n              <label>{\"xLabel\"}</label>\n              <input \n                name=\"xLabel\"\n                onChange={onChangeLabel}\n                type=\"text\" \n                value={labels?.xLabel} \n              />\n            </div>\n            <div>\n              <label>{\"yLabel\"}</label>\n              <input \n                name=\"yLabel\"\n                onChange={onChangeLabel}\n                type=\"text\" \n                value={labels?.yLabel} \n              />\n            </div>\n          </Cell>\n          <Cell title={\"DATA\"}>\n            // TODO: dropdown? for csv\n          </Cell>\n        </div>\n    )\n};\n\nexport default StackedBarPanel;","import React, { useEffect, useState, useCallback, useRef, useMemo } from 'react';\nimport { createColorPalette } from \"../../utils/color\";\nimport * as d3 from 'd3';\nimport StackedBarPanel from \"./StackedBarPanel\";\nimport styles from './StackedBar.module.scss';\n\n\nconst StackedBar = ({\n  data,\n  label = { show: true },\n  width = 400,\n  height = 400,\n  margin = 80,\n  groupKey = \"label\",\n  colorPalette = [],\n}) => {\n  const subgroups = Object.keys(data[0]).slice(1);\n  const minMaxVal = useMemo(() => {\n    return data.map((obj) => Object.keys(obj).reduce((acc, key) => subgroups?.includes(key) ? acc + parseInt(obj[key]) : acc + 0, 0))\n  }, [subgroups]);\n\n  const svgRef = useRef(null);\n  const [graphAngle, setGraphAngle] = useState('left');\n  const [labels, setLabels] = useState({\n    xLabel: \"Percentage %\",\n    yLabel: \"Fruit Type\"\n  })\n  const [checked, setChecked] = useState(false);\n  const [checked2, setChecked2] = useState(false);\n  const [rangeVal, setRangeVal] = useState(Math.max(...minMaxVal));\n  const [colorType, setColorType] = useState({ value: 'Color-1', label: 'Color-1'});\n\n  /* PANEL FUNCTIONS */\n  const handleClick = (angle) => {\n    setGraphAngle(angle)\n  }\n  const handleLabel = (type, value) => {\n    if (type === \"xLabel\") {\n      setLabels(prev => ({ ...prev, xLabel: value }));\n    }\n    if (type === \"yLabel\") {\n      setLabels(prev => ({ ...prev, yLabel: value }));\n    }\n  }\n\n  /* SVG functions */\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".svg-content\").remove();\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin + 50)\n        .attr(\"height\", height + margin + 50)\n        .append(\"g\")\n        .attr('class', 'svg-content')\n        .attr(\"transform\", function() {\n          if (graphAngle === 'right' || graphAngle === 'bottom') {\n            return `translate(${margin - 30}, ${margin / 2})`;\n          } else if (graphAngle === 'top') {\n            return `translate(${margin - 30}, ${margin})`;\n          }\n          return `translate(${margin + 30},${margin / 2})`;\n        });\n      return svg;\n    },\n    [height, width, margin, graphAngle]\n  );\n\n  const handleAxis = useCallback(\n    (groups) => {\n      const domainMax = checked2 ? Math.max(...minMaxVal) : rangeVal;\n\n      let x = d3.scaleBand().domain(groups).range([0, width]).padding([0.2]);\n      let y = d3\n        .scaleLinear()\n        .domain([0, Math.ceil(domainMax)])\n        .range([height, 0]);\n\n      if (graphAngle === 'bottom' || graphAngle === 'top') {\n        return [y, x]\n      }\n      return [x, y];\n    },\n    [width, height, graphAngle, rangeVal, minMaxVal]\n  );\n\n  const handleScale = useCallback(() => {\n    const len = subgroups.length;\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType.value ?? \"\");\n    const color = d3.scaleOrdinal().domain(subgroups).range(paletteRange);\n    return color;\n  }, [subgroups, colorPalette, colorType]);\n\n  const handleXAxis = useCallback((svgContent, x, y) => {\n      // x axis\n      if (graphAngle === 'bottom') {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0));\n      } else if (graphAngle === 'top') {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, 0)`)\n        .call(d3.axisTop(x).tickSizeOuter(0));\n      } else {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x));\n      }\n  }, [height, graphAngle]);\n\n  const handleYAxis = useCallback((svgContent, x, y) => {\n    if (graphAngle === 'bottom' || graphAngle === 'top') {\n      svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(${width}, 0)`)\n        .call(d3.axisRight(y).tickSizeOuter(0));\n    } else if (graphAngle === 'right') {\n      svgContent\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width}, 0)`)\n      .call(d3.axisRight(y).tickSizeOuter(0));\n    } else {\n      svgContent\n        .append(\"g\")\n        .call(d3.axisLeft(y).tickSizeOuter(0));\n    }\n  }, [width, graphAngle]);\n\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const groups = data.map((d) => d[groupKey]);\n      const stackedData = d3.stack().keys(subgroups)(data);\n      const color = handleScale();\n\n      const [x, y] = handleAxis(groups);\n      // x axis\n      handleXAxis(svg, x, y);\n      // y axis\n      handleYAxis(svg, x, y);\n\n      // adding bars\n      svg\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(stackedData)\n        .join(\"g\")\n        .attr(\"fill\", (d) => color(d.key))\n        .selectAll(\"rect\")\n        .data((d) => d)\n        .join(\"rect\")\n        .attr(\"y\", (d) => {\n          if (graphAngle === 'top' || graphAngle === 'bottom') {\n            return y(d.data[groupKey]);\n          }\n          return y(d[1]);\n        })\n        .attr(\"x\", (d) => {\n          if (graphAngle === 'top' || graphAngle === 'bottom') {\n            return x(d[1]);\n          }\n          return x(d.data[groupKey]);\n        })\n        .attr(\"width\", (d) => {\n          if (graphAngle === 'top' || graphAngle === 'bottom') {\n            return x(d[0]) - x(d[1]);\n          }\n          return x.bandwidth();\n        })\n        .attr(\"height\", (d) => {\n          if (graphAngle === 'top' || graphAngle === 'bottom') {\n            return y.bandwidth();\n          }\n          return y(d[0]) - y(d[1]);\n        })\n        .on('mouseover', function(event, d) {\n          // hover\n          if (checked) {\n            d3.select(this).transition()\n              .duration('50')\n              .attr('opacity', '.85')\n\n            svg.append('text')\n              .attr('class', 'hover-text')\n              .attr('x',  function() {\n                if (graphAngle === 'top' || graphAngle === 'bottom') {\n                  return x(d[1]);\n                }\n                return x(d.data[groupKey]);\n              })\n              .attr('y', function() {\n                if (graphAngle === 'top' || graphAngle === 'bottom') {\n                  return y(d.data[groupKey]);\n                }\n                return y(d[1]);\n              })\n              .text(d[1] - d[0])\n          }\n        })\n        .on('mouseout', function(d, i) {\n          d3.select(this).transition()\n          .duration('50')\n          .attr('opacity', '1')\n\n          svg.selectAll('.hover-text').remove();\n        })\n\n      // labels\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", -height / 2 )\n          .attr(\"y\", function() {\n            if (graphAngle === 'right' || graphAngle === 'bottom' || graphAngle === 'top') {\n              return width + margin;\n            }\n            return -margin / 1.3;\n          })\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(function() {\n            if (graphAngle === 'bottom' || graphAngle === 'top') {\n              return labels.yLabel;\n            }\n            return labels.xLabel;\n          });\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", function() {\n            if (graphAngle === 'top') {\n              return -margin + 30;\n            }\n            return height + (margin * 2) / 2.5;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .text(function() {\n            if (graphAngle === 'bottom' || graphAngle === 'top') {\n              return labels.xLabel;\n            }\n            return labels.yLabel;\n          });\n    },\n    [\n      drawSvg,\n      handleAxis,\n      handleScale,\n      height,\n      subgroups,\n      groupKey,\n      label,\n      margin,\n      width,\n      graphAngle,\n      labels,\n      checked\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div className=\"graph-wrapper\">\n      <div className=\"svg-container\">\n        <svg ref={svgRef} />\n      </div>\n      <StackedBarPanel \n        handleClick={handleClick} \n        handleLabel={handleLabel} \n        labels={labels}\n        hover={{ checked, setChecked, checked2, setChecked2 }}\n        range={{ minMaxVal: Math.max(...minMaxVal), rangeVal, setRangeVal }}\n        setColorType={setColorType}\n        colorType={colorType}\n      />\n    </div>\n  );\n}\n\nexport default StackedBar","const AreaChartPanel = () => {\n    return (\n        <div className=\"graph-pannel-container\">\n            hello AreaChartPanel\n        </div>\n    )\n};\n\nexport default AreaChartPanel;","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport AreaChartPanel from \"./AreaChartPanel\";\nimport styles from './AreaChart.module.scss';\n\n\nconst AreaChart = ({\n  data,\n  width = 400,\n  height = 400,\n  margin = { left: 100, bottom: 100, top: 50, right: 50 },\n  xAxis = \"date\",\n  yAxis = \"value\"\n  // tooltip={show: true, text: '<div>Portfolio Value: $%value%</div>'}\n}) => {\n  const svgRef = useRef(null);\n  const [copyData, setCopyData] = useState([]);\n\n  useEffect(() => {\n    const parseTime = d3.timeParse(\"%Y\");\n    const newFormattedData = data.map((obj) => {\n      return { date: parseTime(obj.data), value: obj.value };\n    });\n    setCopyData([...newFormattedData]);\n  }, []);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.right})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(() => {\n    let x, y;\n    // const domainMax = (axis) => Math.max.apply(Math, data.map(function(o) { return o[axis]; }))\n    // const scaleDomain = domain.length > 0 ? domain : createDomain(data, xAxis);\n    const reformatDates = copyData.map((obj) => obj[xAxis]);\n    x = d3\n      .scaleTime()\n      .domain(d3.extent(reformatDates))\n      .range([0, width])\n      .nice();\n\n    y = d3\n      .scaleLinear()\n      .domain([0, d3.max(copyData, (d) => +d[yAxis])])\n      .range([height, 0]);\n    return [x, y];\n  }, [width, height, copyData, xAxis, yAxis]);\n\n  const createAreaGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const [x, y] = handleAxis();\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x).ticks(d3.timeYear));\n      svg.append(\"g\").call(d3.axisLeft(y));\n      // svg.append('line').classed('hoverLine', true)\n      // svg.append('circle').classed('hoverPoint', true);\n      svg.append(\"text\").classed(\"hoverText\", true);\n\n      // Add the area\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\n          \"d\",\n          d3\n            .area()\n            .x((d) => x(d[xAxis]))\n            .y0(y(0))\n            .y1((d) => y(d[yAxis]))\n        );\n\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 2)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x((d) => x(d[xAxis]))\n            .y((d) => y(d[yAxis]))\n        );\n\n      svg\n        .selectAll(\"myCircles\")\n        .data(copyData)\n        .join(\"circle\")\n        .attr(\"fill\", \"yellow\")\n        .attr(\"stroke\", \"none\")\n        .attr(\"cx\", (d) => x(d[xAxis]))\n        .attr(\"cy\", (d) => y(d[yAxis]))\n        .attr(\"r\", 3);\n    },\n    [handleAxis, height, drawSvg, copyData, xAxis, yAxis]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createAreaGraph(svgRef.current);\n    }\n  }, [svgRef, createAreaGraph]);\n\n  return (\n    <div className=\"graph-wrapper\">\n      <div className=\"svg-container\">\n        <svg ref={svgRef} />\n      </div>\n      <AreaChartPanel />\n    </div>\n  );\n};\n\nexport default AreaChart;\n","const PieGraphPanel = () => {\n    return (\n        <div className=\"graph-pannel-container\">\n            hello PieGraphPanel\n        </div>\n    )\n};\n\nexport default PieGraphPanel;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport { createColorPalette } from \"../../utils/color\";\nimport { createDomain, parseTooltipText } from \"../../utils/help\";\nimport * as d3 from \"d3\";\nimport PieGraphPanel from \"./PieGraphPanel\";\nimport styles from './PieGraph.module.scss';\n\nconst PieGraph = ({\n  data,\n  width,\n  height,\n  dataKey,\n  value,\n  colorPalette,\n  colorType,\n  margin,\n  style,\n  text,\n  arc,\n  tooltip,\n  donut\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      return svg;\n    },\n    [height, width]\n  );\n\n  const handleUniqDataLen = useCallback(() => {\n    const uniqueArr = [...new Set(data.map((el) => el[dataKey]))];\n    return uniqueArr.length;\n  }, [data, dataKey]);\n\n  const handleScale = useCallback(() => {\n    const len = handleUniqDataLen();\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const ordScale = d3\n      .scaleOrdinal()\n      .domain(createDomain(data, dataKey))\n      .range(paletteRange);\n    return ordScale;\n  }, [data, dataKey, handleUniqDataLen, colorPalette, colorType]);\n\n  const createPie = useCallback(() => {\n    const pie = d3.pie().value((d) => d[value]);\n    return pie(data);\n  }, [data, value]);\n\n  const handleRadius = useCallback(() => {\n    if (margin) {\n      return Math.min(width, height) / 2 - margin;\n    }\n    return Math.min(width, height) / 2;\n  }, [width, height, margin]);\n\n  const handleConerRadius = useCallback(() => {\n    const outerRadius = height / 2 - 30;\n    const innerRadius = outerRadius / 3;\n    const limitRange = (outerRadius - innerRadius) / 2;\n\n    if (arc.cornerRadius >= limitRange) return limitRange;\n    return arc.cornerRadius;\n  }, [height, arc]);\n\n  const handleText = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"arc\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"arcText\")\n        .text((d) => d.data[dataKey])\n        .attr(\"transform\", function (d) {\n          if (text.location === \"outside\") {\n            const pos = outerArc.centroid(d);\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n            return \"translate(\" + pos + \")\";\n          }\n          return `translate(${arcGenerator.centroid(d)})`;\n        })\n        .style(\"text-anchor\", function (d) {\n          if (text.location === \"outside\") {\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            return midangle < Math.PI ? \"start\" : \"end\";\n          }\n          return text.textAnchor;\n        });\n    },\n    [dataKey, text]\n  );\n\n  const createTooltip = useCallback(() => {\n    const tooltipDiv = d3\n      .select(\".App\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"opacity\", 0);\n    return tooltipDiv;\n  }, []);\n\n  const handleInnerRadius = useCallback(\n    (radius) => {\n      if (donut.show) {\n        return radius < donut.innerRadius ? radius : donut.innerRadius;\n      }\n      return 0;\n    },\n    [donut]\n  );\n\n  const handleTextLine = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"allPolylines\")\n        .data(data)\n        .enter()\n        .append(\"polyline\")\n        .attr(\"class\", \"textLine\")\n        .style(\"fill\", \"none\")\n        .attr(\"points\", function (d) {\n          const posA = arcGenerator.centroid(d); // line insertion in the slice\n          const posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\n          const posC = outerArc.centroid(d); // Label position = almost the same as posB\n          const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\n          posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n          return [posA, posB, posC];\n        });\n    },\n    []\n  );\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const pie_data = createPie();\n      const color = handleScale();\n      const radius = handleRadius();\n      const arcGenerator = d3\n        .arc()\n        .innerRadius(handleInnerRadius(radius)) // range = 0 <= radius\n        .outerRadius(radius)\n        .cornerRadius(handleConerRadius())\n        .padAngle(arc.padAngle);\n      const outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      const Tooltip = createTooltip();\n\n      // create arc and fill in the color by value\n      svg\n        .selectAll(\".arc\")\n        .data(pie_data)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", arcGenerator)\n        .attr(\"fill\", (d) => color(d.data[dataKey]))\n        .on(\"mouseover\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition()\n              .duration(200)\n              .style(\"opacity\", 1)\n              .style(\"left\", event.pageX + 20 + \"px\")\n              .style(\"top\", event.pageY - 20 + \"px\")\n              .text(parseTooltipText(tooltip.text, d.data));\n        })\n        .on(\"mouseout\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n\n      // text line\n      text.showLine &&\n        handleTextLine(svg, pie_data, arcGenerator, outerArc, radius);\n      // text\n      text.show && handleText(svg, pie_data, arcGenerator, outerArc, radius);\n    },\n    [\n      handleTextLine,\n      handleInnerRadius,\n      dataKey,\n      tooltip,\n      createTooltip,\n      drawSvg,\n      createPie,\n      handleScale,\n      handleRadius,\n      text,\n      arc,\n      handleConerRadius,\n      handleText\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div className=\"graph-wrapper\">\n      <div className=\"svg-container\">\n        <svg ref={svgRef} width={width} height={height} />\n      </div>\n      <PieGraphPanel />\n    </div>\n  );\n};\n\nPieGraph.defaultProps = {\n  data: [],\n  width: 300,\n  height: 300,\n  dataKey: \"\",\n  value: \"\",\n  colorPalette: [],\n  colorType: \"Color-1\",\n  margin: 0,\n  text: {\n    show: false,\n    textAnchor: \"middle\",\n    location: \"inside\",\n    showLine: false\n  },\n  arc: {\n    padAngle: 0,\n    cornerRadius: 0\n  },\n  tooltip: {\n    show: false,\n    text: \"\"\n  },\n  donut: {\n    show: false,\n    innerRadius: 0\n  }\n};\n\nexport default PieGraph;","export const createDomain = (data, key) => {\n  const uniqArr = new Set(data.map((el) => el[key]));\n  return Array.from(uniqArr);\n};\n\nexport const parseTooltipText = (text, dataObj) => {\n  const newText = text.replace(/%.*?%/g, (match) => {\n    const str = match.replace(/[^()_a-zA-Z0-9-]+/g, \"\");\n    return dataObj[str];\n  });\n  return newText;\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport styles from './Sidebar.module.scss';\nimport { BiBarChartAlt2 } from 'react-icons/bi';\nimport { MdStackedBarChart } from 'react-icons/md';\nimport { LuAreaChart } from 'react-icons/lu';\nimport { AiOutlinePieChart } from 'react-icons/ai';\nimport { GiElephant } from 'react-icons/gi';\n\nconst sidebarNavItems = [\n    {\n        display: 'Bar',\n        icon: <BiBarChartAlt2 />,\n        to: '/2023-hackathon/bar',\n        section: 'bar'\n    },\n    {\n        display: 'Stacked Bar',\n        icon: <MdStackedBarChart />,\n        to: '/2023-hackathon/stacked-bar',\n        section: 'stacked-bar'\n    },\n    {\n        display: 'Area Chart',\n        icon: <LuAreaChart />,\n        to: '/2023-hackathon/area-chart',\n        section: 'area-chart'\n    },\n    {\n        display: 'Pie Graph',\n        icon: <AiOutlinePieChart />,\n        to: '/2023-hackathon/pie-graph',\n        section: 'pie-graph'\n    },\n]\n\nconst Sidebar = () => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const location = useLocation();\n    const navigate = useNavigate ();\n\n    console.log('>> location', location);\n\n    // change active index\n    useEffect(() => {\n        const curPath = window.location.pathname.split('/')[2];\n        const activeItem = sidebarNavItems.findIndex(item => item.section === curPath);\n        setActiveIndex(curPath?.length === 0 ? 0 : activeItem);\n    }, [location]);\n\n    return <div className={styles.sidebar}>\n        <div onClick={() => {return location?.pathname === '/2023-hackathon' ? null : navigate('/2023-hackathon')}} className={styles['sidebar__logo']}>\n            <span>Dumbo</span> <GiElephant /> <span>in Dumbo</span>\n        </div>\n        <div className={styles['sidebar__menu']}>\n            {\n                sidebarNavItems.map((item, index) => (\n                    <Link to={item.to} key={index}>\n                        <div className={activeIndex === index ? `${styles['sidebar__menu__item']} ${styles['active']}`: styles['sidebar__menu__item']}>\n                            <div className={styles[\"sidebar__menu__item__icon\"]}>\n                                {item.icon}\n                            </div>\n                            <div className={styles[\"sidebar__menu__item__text\"]}>\n                                {item.display}\n                            </div>\n                        </div>\n                    </Link>\n                ))\n            }\n        </div>\n    </div>;\n};\n\nexport default Sidebar;","import { useState } from 'react'\nimport styles from './GraphGallery.module.scss';\nimport { FileUploader } from \"react-drag-drop-files\";\nimport * as d3 from \"d3\";\nimport Bar from \"../Bar/Bar\";\n\nconst defaultData = [\n    { Country: 'US', Value: 100 },\n    { Country: 'S. Korea', Value: 85 },\n    { Country: 'Italy', Value: 72 },\n    { Country: 'Japan', Value: 80 },\n]\n\nconst graphGallery = () => {\n    // const [data, setDataCB] = useState(originalData);\n    const [barData, setBarData] = useState(defaultData);\n\n    //  TODO: rename component name\n    //  TODO: give the appropriate flag\n\n    const test = () => {\n        console.log('>Test')\n    }\n\n    const handleFileUpload = async (file) => {\n\n        const reader = new FileReader();\n        reader.addEventListener('load', (event) => {\n\n            const data = event.target.result;\n            const parsedData = JSON.parse(data);\n            setBarData(parsedData);\n            // TODO: React setState\n        });\n        reader.readAsText(file);\n    }\n\n    return (\n        <div className={styles['graphGallery']}>\n            <div className={styles['graph-wrapper']}>\n                <div className={styles['graph']}>\n                    <Bar \n                        data={barData} \n                        setDataCB={test} \n                        shouldDisplay={false}\n                        width={200}\n                        height={150}\n                    />\n                </div>\n                <div className={styles['graph']}>\n                    test 123\n                </div>                \n            </div>\n            <div className={styles[\"drag-drop-wrapper\"]}>\n                <FileUploader handleChange={handleFileUpload} name=\"file\" types={[\"JSON\"]} />\n            </div>\n        </div>\n      );\n}\n\nexport default graphGallery;","import './App.scss';\nimport React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport Bar from \"./components/Bar/Bar\";\nimport StackedBar from \"./components/StackedBar/StackedBar\";\nimport AreaChart from \"./components/AreaChart/AreaChart\";\nimport PieGraph from \"./components/PieGraph/PieGraph\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport GraphGallery from \"./components/GraphGallery/GraphGallery\";\nimport { Routes, Route, Outlet, Link, Navigate } from \"react-router-dom\";\n\nconst defaultData = [\n  { Country: 'US', Value: 100 },\n  { Country: 'S. Korea', Value: 85 },\n  { Country: 'Italy', Value: 72 },\n  { Country: 'Japan', Value: 80 },\n]\n\nconst BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100 },\n  { label: \"Bananas\", value: 200 },\n  { label: \"Oranges\", value: 50 },\n  { label: \"Kiwis\", value: 150 }\n];\n\nconst STACKED_BAR_CHART_DATA = [\n  { label: \"Apples\", value: 200, diff: 100, value1: 50, diff1: 50  },\n  { label: \"Bananas\", value: 200, diff: 0 },\n  { label: \"Oranges\", value: 50, diff: 150  },\n  { label: \"Kiwis\", value: 150, diff: 50  },\n];\n\nconst AREA_CHART_DATA = [\n  { data: \"2001\", value: 100 },\n  { data: \"2002\", value: 150 },\n  { data: \"2003\", value: 100 },\n  { data: \"2004\", value: 400 },\n  { data: \"2005\", value: 1070 },\n  { data: \"2006\", value: 700 }\n];\n\n\nfunction App() {\n\n  const [data, setDataCB] = useState(defaultData);\n\n  const setData = (file) => {\n    setDataCB(\n      [\n        { Country: 'USA', Value: 80 },\n        { Country: 'S. Korea', Value: 85 },\n        { Country: 'Italy', Value: 72 },\n        { Country: 'Japan', Value: 80 },\n      ]\n    )\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/2023-hackathon\" element={<Layout />}>\n          <Route index element={<GraphGallery />} />\n          <Route path='bar' element={<Bar data={data} setDataCB={setData} />}/>\n          <Route path='stacked-bar' element={<StackedBar data={STACKED_BAR_CHART_DATA} />}/>\n          <Route path='area-chart' element={<AreaChart data={AREA_CHART_DATA} />}/>\n          <Route path='pie-graph' element={<PieGraph data={BAR_CHART_DATA} dataKey=\"label\" value=\"value\" />}/>\n          {/* route fallback - redirect to the following path for non catchable routh path */}\n          <Route\n              path=\"*\"\n              element={<Navigate to=\"/2023-hackathon/bar\" replace />}\n          />          \n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Layout() {\n\n  return <div style={{\n    padding: '0px 0px 0px 320px'\n}}>\n    <Sidebar />\n    <Outlet />\n</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}