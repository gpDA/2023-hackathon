{"version":3,"sources":["components/Cell/Cell.jsx","components/utils/ToggleButton/ToggleButton.jsx","components/utils/GroupButton/GroupButton.jsx","components/utils/ColorPicker/ColorPicker.jsx","components/HorizontalBar/HorizontalBarPanel.jsx","components/HorizontalBar/HorizontalBar.jsx","utils/color.js","components/AreaChart/AreaChartPanel.jsx","components/AreaChart/AreaChart.jsx","components/PieGraph/PieGraphPanel.jsx","components/PieGraph/PieGraph.jsx","utils/help.js","components/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","title","children","className","ToggleButton","id","label","toggled","onClick","onChange","value","useState","isToggled","toggle","min","setMin","max","setMax","useEffect","style","marginBottom","type","defaultChecked","width","readonly","GroupButton","buttons","buttonGroupCB","map","buttonLabel","i","name","event","handleClick","ColorPicker","height","color","handleChange","hsva","HorizontalBarPanel","rotateId","rotateButtonGroupCB","recColor","interactiveTextColor","handleColorPick","setDataCB","toggleCB","maxValue","maxValueCB","HorizontalBar","data","margin","svgRef","useRef","y","useMemo","d3","range","domain","d","Country","padding","setRotateId","setRecColor","setInteractiveTextColor","setMaxValue","isInteractiveValue","setIsInteractiveValue","widthLength","heightLength","svgTransform","axisY","axisX","axisXFunctionName","axisYFunctionName","axisYTransform","axisXTransform","axisXLeftRotateTransform","rectX","x","rectY","rectWidth","Value","rectHeight","bandwidth","test","rotateAttr","setRotateAttr","handleMaxValue","values","ele","xLinearDomainRange","setRotateAttrHandler","attr","previous","drawSvg","useCallback","div","remove","append","mouseOverEvent","svg","selectAll","on","text","mouseOutEvent","createGraph","call","tickSizeOuter","join","current","hex","toggleState","e","target","ref","createColorPalette","len","slice","AreaChartPanel","AreaChart","left","bottom","top","right","xAxis","yAxis","copyData","setCopyData","parseTime","newFormattedData","obj","date","handleAxis","reformatDates","nice","createAreaGraph","ticks","classed","datum","y0","y1","PieGraphPanel","PieGraph","dataKey","colorPalette","colorType","arc","tooltip","donut","handleUniqDataLen","Set","el","length","handleScale","paletteRange","key","uniqArr","Array","from","createDomain","createPie","pie","handleRadius","Math","handleConerRadius","outerRadius","limitRange","cornerRadius","handleText","arcGenerator","outerArc","radius","enter","location","pos","centroid","midangle","startAngle","endAngle","PI","textAnchor","createTooltip","handleInnerRadius","show","innerRadius","handleTextLine","posA","posB","posC","createPieGraph","pie_data","padAngle","Tooltip","transition","duration","pageX","pageY","dataObj","replace","match","str","parseTooltipText","showLine","defaultProps","sidebarNavItems","display","icon","to","section","Sidebar","activeIndex","setActiveIndex","stepHeight","setStepHeight","sidebarRef","indicatorRef","useLocation","setTimeout","sidebarItem","querySelector","clientHeight","curPath","window","pathname","split","activeItem","findIndex","item","transform","index","defaultData","BAR_CHART_DATA","AREA_CHART_DATA","Layout","App","path","element","file","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb862c9f.chunk.js","sourcesContent":["import './Cell.scss'\n\nconst Cell = ({title, children,}) => {\n    return (\n        <div className=\"cell\">\n            <div>\n                {title}\n            </div>\n            {children}\n        </div>\n    )\n};\n\nexport default Cell;","import { useEffect, useState } from 'react'\nimport './ToggleButton.scss'\n\nconst ToggleButton = ({ id, label, toggled, onClick, onChange, value }) => {\n    const [isToggled, toggle] = useState(toggled);\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(300);\n\n\n    const callback = () => {\n        toggle(!isToggled)\n        onClick(!isToggled, id)\n    }\n\n    useEffect(() => {\n        if (id === \"min\") {\n            setMin(-300)\n            setMax(0);\n        }\n    }, [])\n\n    return (\n        <>\n            <label>\n                <div style={{marginBottom: '30px'}}>\n                    <input type=\"checkbox\" defaultChecked={isToggled} onClick={callback} />\n                    <span />\n                </div>\n                {\n                    !isToggled && (id === 'max' || id === 'min')  && \n                    (\n                        <div className=\"input-wrapper\">\n                            <input style={{width: '30px'}} readonly value={value === -1 ? 0 : value} />\n                            <input style={{width: '100px'}} type=\"range\" min={min} max={max} onChange={onChange} value={value} />\n                        </div>\n                    )\n                }               \n            </label>\n\n            {isToggled && label}\n        </>\n    )\n}\n\nexport default ToggleButton;","import { useState } from 'react'\nimport './GroupButton.scss'\n\nconst GroupButton = ({id, buttons, buttonGroupCB}) => {\n\n    const handleClick = (event, id) => {\n        buttonGroupCB(id);\n      };    \n\n    return (\n        <>\n            {buttons.map((buttonLabel, i) => (\n                <button\n                key={i}\n                name={buttonLabel}\n                onClick={(event) => handleClick(event, i)}\n                className={i === id ? \"customButton active\" : \"customButton\"}\n                >\n                {buttonLabel}\n                </button>\n            ))}\n        </>\n      );\n}\n\nexport default GroupButton;","import './ColorPicker.scss';\nimport { Wheel } from '@uiw/react-color';\n\nconst ColorPicker = ({width = 50, height = 50, id, color, handleChange}) => {\n\n    return (\n        <>\n            <Wheel width={width} height={height} color={color} onChange={(color) => handleChange(id, { ...color, ...color.hsva })} />\n        </>\n      );\n}\n\nexport default ColorPicker;","import './HorizontalBarPanel.scss';\nimport Cell from '../Cell/Cell';\nimport ToggleButton from '../utils/ToggleButton/ToggleButton';\nimport GroupButton from '../utils/GroupButton/GroupButton';\nimport ColorPicker from '../utils/ColorPicker/ColorPicker';\nimport { FileUploader } from \"react-drag-drop-files\"; // in case, drag & drop file is useful\n\nconst HorizontalBarPanel = ({\n    rotateId, rotateButtonGroupCB, \n    recColor, interactiveTextColor, handleColorPick,\n    setDataCB, toggleCB, \n    maxValue, maxValueCB,\n    }) => {\n\n    return (\n        <div className=\"horizontal-bar-left\">\n            {/* in case, drag & drop file is useful */}\n            {/* <Cell title={'cell-title'}>\n                <FileUploader handleChange={setDataCB} name=\"files\" types={[\"JPG\", \"PNG\", \"GIF\"]} />\n            </Cell>             */}\n\n            <Cell title={'cell-title'}>\n                <button\n                    onClick={() => setDataCB('test')}\n                >\n                    I am test button\n                </button>\n            </Cell>\n\n            <Cell title={'rotate'}>\n                <GroupButton\n                    buttons={[\"right\", \"top\", \"left\", \"bottom\"]}\n                    buttonGroupCB={rotateButtonGroupCB}\n                    id={rotateId}\n                />\n            </Cell>\n\n            <Cell title={'maxValue'}>\n                <ToggleButton \n                    id=\"max\"\n                    label=\"auto\"\n                    toggled={true}\n                    onClick={toggleCB}\n                    onChange={maxValueCB}\n                    value={maxValue}\n                />\n            </Cell>\n\n            <Cell title={'change color'}>\n                <ColorPicker\n                    id='rec-color'\n                    handleChange={handleColorPick}\n                    color={recColor}\n                 />\n            </Cell>\n\n            <Cell title={'interactive'}>\n                <ToggleButton \n                    id=\"interactive\"\n                    label=\"is interactive\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell>\n            <Cell title={'interactiveTextColor'}>\n                <ColorPicker\n                    id='interactive-text-color'\n                    handleChange={handleColorPick}\n                    color={interactiveTextColor}\n                 />\n            </Cell>                        \n        </div>\n    )\n};\n\nexport default HorizontalBarPanel;","import React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport * as d3 from 'd3';\nimport HorizontalBarPanel from \"./HorizontalBarPanel\";\nimport './HorizontalBar.scss';\nimport {createColorPalette} from '../utils/helper';\n\n\n\nconst HorizontalBar = ({\n  data = [],\n  setDataCB,\n  width=400,\n  height=300,\n  margin=20,\n}) => {\n  const svgRef = useRef(null);\n\n  // Y-axis\n  const y = useMemo(() => {\n    return d3\n      .scaleBand()\n      .range([ 0, height ])\n      .domain(data.map(function(d) { return d.Country; }))\n      .padding(.1);\n  }, [data]);     \n\n  // idea for the customization\n  // TODO: set the max for each ticks\n  // TODO: change the margin for x- & y- axis\n  // TODO: color change\n\n  // right: 0, top: 1, left: 2, bottom: 3\n  const [rotateId, setRotateId] = useState(0);\n  const [recColor, setRecColor] = useState('#1C70C8');\n  const [interactiveTextColor, setInteractiveTextColor] = useState('#1C70C8');\n  const [maxValue, setMaxValue] = useState(0);\n  const [isInteractiveValue, setIsInteractiveValue] = useState(true);\n  const [rotateAttr, setRotateAttr] = useState({\n    widthLength: width + margin + 100,\n    heightLength: height + margin + 100,\n    svgTransform: `translate(${margin + 30},${margin / 2})`,\n    axisY: y,\n    axisX: null, // x - x cannot be initialized before rotateAttr useState\n    axisXFunctionName: 'axisBottom',\n    axisYFunctionName: 'axisLeft',\n    axisYTransform: \"translate(0,\" + height + \")\",\n    axisXTransform: \"translate(10,10)rotate(45)\",\n    axisXLeftRotateTransform: null,\n    rectX: function () { return x(0)},\n    rectY: function(d) { return y(d.Country); },\n    rectWidth: function(d) { return x(d.Value); },\n    rectHeight: function () { return y.bandwidth()},\n    test: function(d) { return y(d[\"Country\"]) + y.bandwidth() / 2 + 10; },\n  })\n\n  const handleMaxValue = () => {\n    const values = data.map(ele => ele.Value)\n    return d3.max(values) > maxValue || maxValue === -1 ? d3.max(values) : maxValue;\n  }\n\n  // X-axis\n  const x = useMemo(() => {\n\n    let xLinearDomainRange = [0, handleMaxValue()];\n\n    if (rotateId === 3 || rotateId === 2) {\n      xLinearDomainRange = [handleMaxValue(), 0];\n    } else {\n      xLinearDomainRange = [0, handleMaxValue()];\n    }\n    return d3.scaleLinear()\n    .domain(xLinearDomainRange)\n    .range([ 0, width])\n  }, [rotateId, maxValue]);\n\n  \n\n  const rotateButtonGroupCB = (name) => {\n    setRotateId(name)\n  }\n\n  const handleColorPick = (id, color) => {\n    if (id === 'rec-color') {\n      setRecColor(color.hex)\n    }\n    if (id === 'interactive-text-color') {\n      setInteractiveTextColor(color.hex)\n    }    \n    \n  }\n\n  const maxValueCB = (e) => {\n    setMaxValue(e.target.value);\n  } \n\n  const toggleCB = (toggleState, id) => {\n    if (id === 'max' && toggleState) {\n      setMaxValue(-1);\n    }\n    if (id === 'interactive') {\n      setIsInteractiveValue(toggleState);\n    }\n  }\n\n  useEffect(() => {\n    setRotateAttrHandler();\n  }, [rotateId, maxValue, recColor, interactiveTextColor])\n\n  const setRotateAttrHandler = () => {\n    const attr = {};\n    if (rotateId === 0) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function () { return x(0)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 1) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2 + 20})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisTop',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0, 0)\";\n      attr.axisXTransform = \"translate(+10,-10)rotate(0)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function(d) { return y(d.Country); };\n      attr.rectY = function () { return x(0)};\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return x(d.Value); };\n    }\n    if (rotateId === 2) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisRight',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = `translate(${width}, 0)`;\n      attr.rectX = function (d) { return x(d.Value)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return width - x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 3) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = `translate(0, ${height+100})`;\n      attr.axisXTransform = \"translate(+10,0)rotate(0)\";\n      attr.axisXLeftRotateTransform = `translate(0, 0)`;\n      attr.rectX = function(d) { return y(d.Country); }; // d.Country\n      attr.rectY = function (d) { return x(d.Value) }; // height + 100 - x(d.Value)\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return height + 100 - x(d.Value) };\n    }    \n\n    setRotateAttr((previous) => ({\n      ...previous,\n      ...attr,\n    }))    \n  }; \n\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".test2\").remove();\n      \n      const svg = d3\n        .select(div)\n        .attr(\"width\", rotateAttr.widthLength)\n        .attr(\"height\", rotateAttr.heightLength)\n        .append(\"g\")\n        .attr('class', 'test2')\n        .attr(\"transform\", rotateAttr.svgTransform);\n\n      return svg;\n    },\n    [height, width, rotateAttr]\n  );\n\n  const mouseOverEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseover\", (event, d) => {\n        svg\n          .append(\"line\")\n          .attr(\"class\", \"valueLine\")\n          .attr(\"y1\", () => {\n            if (rotateId === 0) {\n              return 0;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return 0;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }           \n          })\n          .attr(\"x1\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return 0;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return 0;\n            }\n          })\n          .attr(\"y2\", () => {\n            if (rotateId === 0) {\n              return height;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return height;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }\n          })\n          .attr(\"x2\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return height;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return height;\n            }\n          });\n\n\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"info\")\n          .attr(\"fill\", interactiveTextColor)\n          .attr(\"font-size\", `18px`)\n\n          .attr(\"y\", () => {\n            if (rotateId === 0) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 1) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 2) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 3) {\n              return x(d['Value'] + 10);\n            }\n  \n          })\n          .attr(\"x\", () => {\n            if (rotateId === 0) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 1) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 2) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 3) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }              \n          })\n          .attr(\"text-anchor\", \"middle\")\n          .text(() => {\n            const value = d['Value'];\n            return `${value}%`;\n          })\n\n      });      \n\n    },\n    [rotateAttr]\n  );\n\n  const mouseOutEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseout\", (event, d) => {\n        svg.selectAll(\".valueLine\").remove();\n        svg.selectAll(\".info\").remove();\n      })\n    }, [rotateAttr]);  \n\n  const createGraph = (div) => {\n    const svg = drawSvg(div);\n\n    svg.append(\"g\")\n        .attr(\"transform\", rotateAttr.axisYTransform)\n        .call(d3[rotateAttr.axisXFunctionName](rotateAttr?.axisX ?? x\n        .range([ 0, width])).tickSizeOuter(0))\n        .selectAll(\"text\")\n          .attr(\"transform\", rotateAttr.axisXTransform)\n          .style(\"text-anchor\", \"end\");\n    svg.append(\"g\")\n        .call(d3[rotateAttr.axisYFunctionName](rotateAttr.axisY).tickSizeOuter(0))\n        // ${width}\n        .attr(\"transform\", rotateAttr.axisXLeftRotateTransform);\n\n    const rec = svg.selectAll(\"rect\").data(data);\n\n    rec\n      .join(\"rect\")\n      // .enter()\n      // .append(\"rect\")\n      .attr(\"class\", \"test\")\n      .attr(\"x\", (d) => (rotateAttr.rectX(d)))\n      .attr(\"y\", (d) => (rotateAttr.rectY(d)))\n      .attr(\"width\", (d) => (rotateAttr.rectWidth(d)))\n      .attr(\"height\", (d) => (rotateAttr.rectHeight(d)))\n      .attr(\"fill\", recColor) // createColorPalette(colorId)\n\n      isInteractiveValue && mouseOverEvent(svg);\n      isInteractiveValue && mouseOutEvent(svg);\n  }\n\n  useEffect(() => {\n    if (svgRef.current || data) {\n      createGraph(svgRef.current);\n    }\n  }, [svgRef, createGraph, data]);\n\n  return (\n    <div className=\"horizontal-bar-wrapper\">\n      <HorizontalBarPanel \n        rotateId={rotateId} rotateButtonGroupCB={rotateButtonGroupCB} \n        recColor={recColor} interactiveTextColor={interactiveTextColor} handleColorPick={handleColorPick} \n        setDataCB={setDataCB} \n        toggleCB={toggleCB}\n        maxValue={maxValue}\n        maxValueCB={maxValueCB}        \n      />\n      <div className=\"horizontal-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  )\n}\n\nexport default HorizontalBar;","import * as d3 from \"d3\";\n\nexport const createColorPalette = (type, len) => {\n  switch (type) {\n    case \"Color-1\":\n      return d3.schemeCategory10.slice(0, len);\n    case \"Color-2\":\n      return d3.schemeAccent.slice(0, len);\n    case \"Color-3\":\n      return d3.schemeDark2.slice(0, len);\n    case \"Color-4\":\n      return d3.schemePaired.slice(0, len);\n    case \"Color-5\":\n      return d3.schemePastel1.slice(0, len);\n    case \"Color-6\":\n      return d3.schemePastel2.slice(0, len);\n    case \"Color-7\":\n      return d3.schemeSet1.slice(0, len);\n    case \"Color-8\":\n      return d3.schemeSet2.slice(0, len);\n    case \"Color-9\":\n      return d3.schemeSet3.slice(0, len);\n    case \"Color-10\":\n      return d3.schemeTableau10.slice(0, len);\n    default:\n      return [];\n  }\n};\n","import './AreaChartPanel.scss'\n\nconst AreaChartPanel = () => {\n    return (\n        <div className=\"area-chart-left\">\n            hello AreaChartPanel\n        </div>\n    )\n};\n\nexport default AreaChartPanel;","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport AreaChartPanel from \"./AreaChartPanel\";\nimport './AreaChart.scss';\n\n\nconst AreaChart = ({\n  data,\n  width = 400,\n  height = 400,\n  margin = { left: 100, bottom: 100, top: 50, right: 50 },\n  xAxis = \"date\",\n  yAxis = \"value\"\n  // tooltip={show: true, text: '<div>Portfolio Value: $%value%</div>'}\n}) => {\n  const svgRef = useRef(null);\n  const [copyData, setCopyData] = useState([]);\n\n  useEffect(() => {\n    const parseTime = d3.timeParse(\"%Y\");\n    const newFormattedData = data.map((obj) => {\n      return { date: parseTime(obj.data), value: obj.value };\n    });\n    setCopyData([...newFormattedData]);\n  }, []);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.right})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(() => {\n    let x, y;\n    // const domainMax = (axis) => Math.max.apply(Math, data.map(function(o) { return o[axis]; }))\n    // const scaleDomain = domain.length > 0 ? domain : createDomain(data, xAxis);\n    const reformatDates = copyData.map((obj) => obj[xAxis]);\n    x = d3\n      .scaleTime()\n      .domain(d3.extent(reformatDates))\n      .range([0, width])\n      .nice();\n\n    y = d3\n      .scaleLinear()\n      .domain([0, d3.max(copyData, (d) => +d[yAxis])])\n      .range([height, 0]);\n    return [x, y];\n  }, [width, height, copyData, xAxis, yAxis]);\n\n  const createAreaGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const [x, y] = handleAxis();\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x).ticks(d3.timeYear));\n      svg.append(\"g\").call(d3.axisLeft(y));\n      // svg.append('line').classed('hoverLine', true)\n      // svg.append('circle').classed('hoverPoint', true);\n      svg.append(\"text\").classed(\"hoverText\", true);\n\n      // Add the area\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\n          \"d\",\n          d3\n            .area()\n            .x((d) => x(d[xAxis]))\n            .y0(y(0))\n            .y1((d) => y(d[yAxis]))\n        );\n\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 2)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x((d) => x(d[xAxis]))\n            .y((d) => y(d[yAxis]))\n        );\n\n      svg\n        .selectAll(\"myCircles\")\n        .data(copyData)\n        .join(\"circle\")\n        .attr(\"fill\", \"yellow\")\n        .attr(\"stroke\", \"none\")\n        .attr(\"cx\", (d) => x(d[xAxis]))\n        .attr(\"cy\", (d) => y(d[yAxis]))\n        .attr(\"r\", 3);\n    },\n    [handleAxis, height, drawSvg, copyData, xAxis, yAxis]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createAreaGraph(svgRef.current);\n    }\n  }, [svgRef, createAreaGraph]);\n\n  return (\n    <div className=\"area-chart-wrapper\">\n      <AreaChartPanel />\n      <div className=\"area-chart-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default AreaChart;\n","import './PieGraphPanel.scss'\n\nconst PieGraphPanel = () => {\n    return (\n        <div className=\"pie-graph-left\">\n            hello PieGraphPanel\n        </div>\n    )\n};\n\nexport default PieGraphPanel;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport { createColorPalette } from \"../../utils/color\";\nimport { createDomain, parseTooltipText } from \"../../utils/help\";\nimport * as d3 from \"d3\";\nimport PieGraphPanel from \"./PieGraphPanel\";\nimport './PieGraph.scss';\n\nconst PieGraph = ({\n  data,\n  width,\n  height,\n  dataKey,\n  value,\n  colorPalette,\n  colorType,\n  margin,\n  style,\n  text,\n  arc,\n  tooltip,\n  donut\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      return svg;\n    },\n    [height, width]\n  );\n\n  const handleUniqDataLen = useCallback(() => {\n    const uniqueArr = [...new Set(data.map((el) => el[dataKey]))];\n    return uniqueArr.length;\n  }, [data, dataKey]);\n\n  const handleScale = useCallback(() => {\n    const len = handleUniqDataLen();\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const ordScale = d3\n      .scaleOrdinal()\n      .domain(createDomain(data, dataKey))\n      .range(paletteRange);\n    return ordScale;\n  }, [data, dataKey, handleUniqDataLen, colorPalette, colorType]);\n\n  const createPie = useCallback(() => {\n    const pie = d3.pie().value((d) => d[value]);\n    return pie(data);\n  }, [data, value]);\n\n  const handleRadius = useCallback(() => {\n    if (margin) {\n      return Math.min(width, height) / 2 - margin;\n    }\n    return Math.min(width, height) / 2;\n  }, [width, height, margin]);\n\n  const handleConerRadius = useCallback(() => {\n    const outerRadius = height / 2 - 30;\n    const innerRadius = outerRadius / 3;\n    const limitRange = (outerRadius - innerRadius) / 2;\n\n    if (arc.cornerRadius >= limitRange) return limitRange;\n    return arc.cornerRadius;\n  }, [height, arc]);\n\n  const handleText = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"arc\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"arcText\")\n        .text((d) => d.data[dataKey])\n        .attr(\"transform\", function (d) {\n          if (text.location === \"outside\") {\n            const pos = outerArc.centroid(d);\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n            return \"translate(\" + pos + \")\";\n          }\n          return `translate(${arcGenerator.centroid(d)})`;\n        })\n        .style(\"text-anchor\", function (d) {\n          if (text.location === \"outside\") {\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            return midangle < Math.PI ? \"start\" : \"end\";\n          }\n          return text.textAnchor;\n        });\n    },\n    [dataKey, text]\n  );\n\n  const createTooltip = useCallback(() => {\n    const tooltipDiv = d3\n      .select(\".App\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"opacity\", 0);\n    return tooltipDiv;\n  }, []);\n\n  const handleInnerRadius = useCallback(\n    (radius) => {\n      if (donut.show) {\n        return radius < donut.innerRadius ? radius : donut.innerRadius;\n      }\n      return 0;\n    },\n    [donut]\n  );\n\n  const handleTextLine = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"allPolylines\")\n        .data(data)\n        .enter()\n        .append(\"polyline\")\n        .attr(\"class\", \"textLine\")\n        .style(\"fill\", \"none\")\n        .attr(\"points\", function (d) {\n          const posA = arcGenerator.centroid(d); // line insertion in the slice\n          const posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\n          const posC = outerArc.centroid(d); // Label position = almost the same as posB\n          const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\n          posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n          return [posA, posB, posC];\n        });\n    },\n    []\n  );\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const pie_data = createPie();\n      const color = handleScale();\n      const radius = handleRadius();\n      const arcGenerator = d3\n        .arc()\n        .innerRadius(handleInnerRadius(radius)) // range = 0 <= radius\n        .outerRadius(radius)\n        .cornerRadius(handleConerRadius())\n        .padAngle(arc.padAngle);\n      const outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      const Tooltip = createTooltip();\n\n      // create arc and fill in the color by value\n      svg\n        .selectAll(\".arc\")\n        .data(pie_data)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", arcGenerator)\n        .attr(\"fill\", (d) => color(d.data[dataKey]))\n        .on(\"mouseover\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition()\n              .duration(200)\n              .style(\"opacity\", 1)\n              .style(\"left\", event.pageX + 20 + \"px\")\n              .style(\"top\", event.pageY - 20 + \"px\")\n              .text(parseTooltipText(tooltip.text, d.data));\n        })\n        .on(\"mouseout\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n\n      // text line\n      text.showLine &&\n        handleTextLine(svg, pie_data, arcGenerator, outerArc, radius);\n      // text\n      text.show && handleText(svg, pie_data, arcGenerator, outerArc, radius);\n    },\n    [\n      handleTextLine,\n      handleInnerRadius,\n      dataKey,\n      tooltip,\n      createTooltip,\n      drawSvg,\n      createPie,\n      handleScale,\n      handleRadius,\n      text,\n      arc,\n      handleConerRadius,\n      handleText\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div style={{ margin: \"2em\" }} className=\"pie-graph-wrapper\">\n      <PieGraphPanel />\n      <div className=\"pie-graph-right\">\n        <svg ref={svgRef} width={width} height={height} />\n      </div>\n    </div>\n  );\n};\n\nPieGraph.defaultProps = {\n  data: [],\n  width: 300,\n  height: 300,\n  dataKey: \"\",\n  value: \"\",\n  colorPalette: [],\n  colorType: \"Color-1\",\n  margin: 0,\n  text: {\n    show: false,\n    textAnchor: \"middle\",\n    location: \"inside\",\n    showLine: false\n  },\n  arc: {\n    padAngle: 0,\n    cornerRadius: 0\n  },\n  tooltip: {\n    show: false,\n    text: \"\"\n  },\n  donut: {\n    show: false,\n    innerRadius: 0\n  }\n};\n\nexport default PieGraph;","export const createDomain = (data, key) => {\n  const uniqArr = new Set(data.map((el) => el[key]));\n  return Array.from(uniqArr);\n};\n\nexport const parseTooltipText = (text, dataObj) => {\n  const newText = text.replace(/%.*?%/g, (match) => {\n    const str = match.replace(/[^()_a-zA-Z0-9-]+/g, \"\");\n    return dataObj[str];\n  });\n  return newText;\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Sidebar.scss';\n\nconst sidebarNavItems = [\n    {\n        display: 'Bar',\n        icon: <i className='bx bx-home'></i>,\n        to: '/2023-hackathon/bar',\n        section: ''\n    },\n    {\n        display: 'Area Chart',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/area-chart',\n        section: 'order'\n    },\n    {\n        display: 'Pie Graph',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/pie-graph',\n        section: 'order'\n    },\n]\n\nconst Sidebar = () => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [stepHeight, setStepHeight] = useState(0);\n    const sidebarRef = useRef();\n    const indicatorRef = useRef();\n    const location = useLocation();\n\n    useEffect(() => {\n        setTimeout(() => {\n            const sidebarItem = sidebarRef.current.querySelector('.sidebar__menu__item');\n            indicatorRef.current.style.height = `${sidebarItem.clientHeight}px`;\n            setStepHeight(sidebarItem.clientHeight);\n        }, 50);\n    }, []);\n\n    // change active index\n    useEffect(() => {\n        const curPath = window.location.pathname.split('/')[1];\n        const activeItem = sidebarNavItems.findIndex(item => item.section === curPath);\n        setActiveIndex(curPath.length === 0 ? 0 : activeItem);\n    }, [location]);\n\n    return <div className='sidebar'>\n        <div className=\"sidebar__logo\">\n            Animate\n        </div>\n        <div ref={sidebarRef} className=\"sidebar__menu\">\n            <div\n                ref={indicatorRef}\n                className=\"sidebar__menu__indicator\"\n                style={{\n                    transform: `translateX(-50%) translateY(${activeIndex * stepHeight}px)`\n                }}\n            ></div>\n            {\n                sidebarNavItems.map((item, index) => (\n                    <Link to={item.to} key={index}>\n                        <div className={`sidebar__menu__item ${activeIndex === index ? 'active' : ''}`}>\n                            <div className=\"sidebar__menu__item__icon\">\n                                {item.icon}\n                            </div>\n                            <div className=\"sidebar__menu__item__text\">\n                                {item.display}\n                            </div>\n                        </div>\n                    </Link>\n                ))\n            }\n        </div>\n    </div>;\n};\n\nexport default Sidebar;","import './App.scss';\nimport React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport HorizontalBar from \"./components/HorizontalBar/HorizontalBar\";\nimport VerticalBar from \"./components/VerticalBar/VerticalBar\";\nimport StackedBar from \"./components/StackedBar/StackedBar\";\nimport AreaChart from \"./components/AreaChart/AreaChart\";\nimport PieGraph from \"./components/PieGraph/PieGraph\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { Routes, Route, Outlet, Link, Navigate } from \"react-router-dom\";\n\nconst defaultData = [\n  { Country: 'US', Value: 100 },\n  { Country: 'S. Korea', Value: 85 },\n  { Country: 'Italy', Value: 72 },\n  { Country: 'Japan', Value: 80 },\n]\n\nconst BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100 },\n  { label: \"Bananas\", value: 200 },\n  { label: \"Oranges\", value: 50 },\n  { label: \"Kiwis\", value: 150 }\n];\n\nconst STACKED_BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100, diff: 100, max: 200 },\n  { label: \"Bananas\", value: 200, diff: 0, max: 200 },\n  { label: \"Oranges\", value: 50, diff: 150, max: 200  },\n  { label: \"Kiwis\", value: 150, diff: 50, max: 200  }\n];\n\nconst AREA_CHART_DATA = [\n  { data: \"2001\", value: 100 },\n  { data: \"2002\", value: 150 },\n  { data: \"2003\", value: 100 },\n  { data: \"2004\", value: 400 },\n  { data: \"2005\", value: 1070 },\n  { data: \"2006\", value: 700 }\n];\n\n\nfunction App() {\n\n  const [data, setDataCB] = useState(defaultData);\n\n  const setData = (file) => {\n    setDataCB(\n      [\n        { Country: 'USA', Value: 80 },\n        { Country: 'S. Korea', Value: 85 },\n        { Country: 'Italy', Value: 72 },\n        { Country: 'Japan', Value: 80 },\n      ]\n    )\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/2023-hackathon\" element={<Layout />}>\n          <Route path='bar' element={<HorizontalBar data={data} setDataCB={setData} />}/>\n          <Route path='area-chart' element={<AreaChart data={AREA_CHART_DATA} />}/>\n          <Route path='pie-graph' element={<PieGraph data={BAR_CHART_DATA} dataKey=\"label\" value=\"value\" />}/>\n          {/* route fallback - redirect to the following path for non catchable routh path */}\n          <Route\n              path=\"*\"\n              element={<Navigate to=\"/2023-hackathon/bar\" replace />}\n          />          \n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Layout() {\n\n  return <div style={{\n    padding: '50px 0px 0px 370px'\n}}>\n    <Sidebar />\n    <Outlet />\n</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}