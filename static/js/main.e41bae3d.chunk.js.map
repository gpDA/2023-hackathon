{"version":3,"sources":["components/Cell/Cell.jsx","components/utils/ToggleButton/ToggleButton.jsx","components/utils/GroupButton/GroupButton.jsx","components/utils/ColorPicker/ColorPicker.jsx","components/HorizontalBar/HorizontalBarPanel.jsx","components/HorizontalBar/HorizontalBar.jsx","utils/color.js","components/StackedBar/StackedBarPanel.jsx","components/StackedBar/StackedBar.jsx","components/AreaChart/AreaChartPanel.jsx","components/AreaChart/AreaChart.jsx","components/PieGraph/PieGraphPanel.jsx","components/PieGraph/PieGraph.jsx","utils/help.js","components/Sidebar/Sidebar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","title","children","className","ToggleButton","id","label","toggled","onClick","onChange","value","useState","isToggled","toggle","min","setMin","max","setMax","useEffect","style","marginBottom","type","defaultChecked","width","readonly","GroupButton","buttons","buttonGroupCB","map","buttonLabel","i","name","event","handleClick","ColorPicker","height","color","handleChange","hsva","HorizontalBarPanel","rotateId","rotateButtonGroupCB","recColor","handleColorPick","setDataCB","toggleCB","maxValue","maxValueCB","minValue","minValueCB","HorizontalBar","data","margin","svgRef","useRef","y","useMemo","d3","range","domain","d","Country","padding","setRotateId","setRecColor","setMaxValue","isInteractiveValue","setIsInteractiveValue","setMinValue","widthLength","heightLength","svgTransform","axisY","axisX","axisXFunctionName","axisYFunctionName","axisYTransform","axisXTransform","axisXLeftRotateTransform","rectX","x","rectY","rectWidth","Value","rectHeight","bandwidth","test","rotateAttr","setRotateAttr","handleMaxValue","values","ele","handleMinValue","xLinearDomainRange","setRotateAttrHandler","attr","previous","drawSvg","useCallback","div","remove","append","mouseOverEvent","svg","selectAll","on","text","mouseOutEvent","createGraph","call","tickSizeOuter","join","current","hex","toggleState","e","target","ref","createColorPalette","len","slice","StackedBarPanel","handleLabel","labels","hover","checked","setChecked","handleRotate","angle","getAttribute","onChangeLabel","btn","data-rotate","console","log","nextChecked","xLabel","yLabel","StackedBar","show","groupKey","subgroups","colorPalette","colorType","graphAngle","setGraphAngle","setLabels","handleAxis","groups","datanum","obj","Object","keys","reduce","acc","key","includes","parseInt","domainMax","Math","ceil","handleScale","length","paletteRange","handleXAxis","svgContent","handleYAxis","createPieGraph","stackedData","this","transition","duration","prev","AreaChartPanel","AreaChart","left","bottom","top","right","xAxis","yAxis","copyData","setCopyData","parseTime","newFormattedData","date","reformatDates","nice","createAreaGraph","ticks","classed","datum","y0","y1","PieGraphPanel","PieGraph","dataKey","arc","tooltip","donut","handleUniqDataLen","Set","el","uniqArr","Array","from","createDomain","createPie","pie","handleRadius","handleConerRadius","outerRadius","limitRange","cornerRadius","handleText","arcGenerator","outerArc","radius","enter","location","pos","centroid","midangle","startAngle","endAngle","PI","textAnchor","createTooltip","handleInnerRadius","innerRadius","handleTextLine","posA","posB","posC","pie_data","padAngle","Tooltip","pageX","pageY","dataObj","replace","match","str","parseTooltipText","showLine","defaultProps","sidebarNavItems","display","icon","to","section","Sidebar","activeIndex","setActiveIndex","stepHeight","setStepHeight","sidebarRef","indicatorRef","useLocation","setTimeout","sidebarItem","querySelector","clientHeight","curPath","window","pathname","split","activeItem","findIndex","item","transform","index","defaultData","BAR_CHART_DATA","STACKED_BAR_CHART_DATA","diff","AREA_CHART_DATA","Layout","App","path","element","file","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e41bae3d.chunk.js","sourcesContent":["import './Cell.scss'\n\nconst Cell = ({title, children,}) => {\n    return (\n        <div className=\"cell\">\n            <div>\n                {title}\n            </div>\n            {children}\n        </div>\n    )\n};\n\nexport default Cell;","import { useEffect, useState } from 'react'\nimport './ToggleButton.scss'\n\nconst ToggleButton = ({ id, label, toggled, onClick, onChange, value }) => {\n    const [isToggled, toggle] = useState(toggled);\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(300);\n\n\n    const callback = () => {\n        toggle(!isToggled)\n        onClick(!isToggled, id)\n    }\n\n    useEffect(() => {\n        if (id === \"min\") {\n            setMin(-300)\n            setMax(0);\n        }\n    }, [])\n\n    return (\n        <>\n            <label>\n                <div style={{marginBottom: '30px'}}>\n                    <input type=\"checkbox\" defaultChecked={isToggled} onClick={callback} />\n                    <span />\n                </div>\n                {\n                    !isToggled && (id === 'max' || id === 'min')  && \n                    (\n                        <div className=\"input-wrapper\">\n                            <input style={{width: '30px'}} readonly value={value === -1 ? 0 : value} />\n                            <input style={{width: '100px'}} type=\"range\" min={min} max={max} onChange={onChange} value={value} />\n                        </div>\n                    )\n                }               \n            </label>\n\n            {isToggled && label}\n        </>\n    )\n}\n\nexport default ToggleButton;","import { useState } from 'react'\nimport './GroupButton.scss'\n\nconst GroupButton = ({id, buttons, buttonGroupCB}) => {\n\n    const handleClick = (event, id) => {\n        buttonGroupCB(id);\n      };    \n\n    return (\n        <>\n            {buttons.map((buttonLabel, i) => (\n                <button\n                key={i}\n                name={buttonLabel}\n                onClick={(event) => handleClick(event, i)}\n                className={i === id ? \"customButton active\" : \"customButton\"}\n                >\n                {buttonLabel}\n                </button>\n            ))}\n        </>\n      );\n}\n\nexport default GroupButton;","import './ColorPicker.scss';\nimport { Wheel } from '@uiw/react-color';\n\nconst ColorPicker = ({width = 50, height = 50, id, color, handleChange}) => {\n\n    return (\n        <>\n            <Wheel width={width} height={height} color={color} onChange={(color) => handleChange(id, { ...color, ...color.hsva })} />\n        </>\n      );\n}\n\nexport default ColorPicker;","import './HorizontalBarPanel.scss';\nimport Cell from '../Cell/Cell';\nimport ToggleButton from '../utils/ToggleButton/ToggleButton';\nimport GroupButton from '../utils/GroupButton/GroupButton';\nimport ColorPicker from '../utils/ColorPicker/ColorPicker';\nimport { FileUploader } from \"react-drag-drop-files\"; // in case, drag & drop file is useful\n\nconst HorizontalBarPanel = ({\n    rotateId, rotateButtonGroupCB, \n    recColor, handleColorPick,\n    setDataCB, toggleCB, \n    maxValue, maxValueCB,\n    minValue, minValueCB,\n    }) => {\n\n    return (\n        <div className=\"horizontal-bar-left\">\n            {/* in case, drag & drop file is useful */}\n            {/* <Cell title={'cell-title'}>\n                <FileUploader handleChange={setDataCB} name=\"files\" types={[\"JPG\", \"PNG\", \"GIF\"]} />\n            </Cell>             */}\n\n            <Cell title={'cell-title'}>\n                <button\n                    onClick={() => setDataCB('test')}\n                >\n                    I am test button\n                </button>\n            </Cell>\n\n            <Cell title={'rotate'}>\n                <GroupButton\n                    buttons={[\"right\", \"top\", \"left\", \"bottom\"]}\n                    buttonGroupCB={rotateButtonGroupCB}\n                    id={rotateId}\n                />\n            </Cell>\n\n            <Cell title={'maxValue'}>\n                <ToggleButton \n                    id=\"max\"\n                    label=\"auto\"\n                    toggled={true}\n                    onClick={toggleCB}\n                    onChange={maxValueCB}\n                    value={maxValue}\n                />\n            </Cell>\n\n            <Cell title={'minValue'}>\n                <ToggleButton \n                    id=\"min\"\n                    label=\"auto\"\n                    toggled={true}\n                    onClick={toggleCB}\n                    onChange={minValueCB}\n                    value={minValue}\n                />\n            </Cell>\n\n            <Cell title={'change color'}>\n                <ColorPicker\n                    id='rec-color'\n                    handleChange={handleColorPick}\n                    color={recColor}\n                 />\n            </Cell>\n\n            <Cell title={'interactive'}>\n                <ToggleButton \n                    id=\"interactive\"\n                    label=\"is interactive\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell>\n            <Cell title={'interactiveTextColor'}>\n                <ToggleButton \n                    id=\"interactiveTextColor\"\n                    label=\"is interactiveTextColor\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell>\n            <Cell title={'interactiveLine'}>\n                <ToggleButton \n                    id=\"interactiveLine\"\n                    label=\"is interactiveLine\"\n                    toggled={true}\n                    onClick={toggleCB}\n                />\n            </Cell>                        \n        </div>\n    )\n};\n\nexport default HorizontalBarPanel;","import React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport * as d3 from 'd3';\nimport HorizontalBarPanel from \"./HorizontalBarPanel\";\nimport './HorizontalBar.scss';\nimport {createColorPalette} from '../utils/helper';\n\n\n\nconst HorizontalBar = ({\n  data = [],\n  setDataCB,\n  width=400,\n  height=300,\n  margin=20,\n}) => {\n  const svgRef = useRef(null);\n\n  // Y-axis\n  const y = useMemo(() => {\n    return d3\n      .scaleBand()\n      .range([ 0, height ])\n      .domain(data.map(function(d) { return d.Country; }))\n      .padding(.1);\n  }, [data]);     \n\n  // idea for the customization\n  // TODO: set the max for each ticks\n  // TODO: change the margin for x- & y- axis\n  // TODO: color change\n\n  // right: 0, top: 1, left: 2, bottom: 3\n  const [rotateId, setRotateId] = useState(0);\n  const [recColor, setRecColor] = useState('#1C70C8');\n  const [maxValue, setMaxValue] = useState(0);\n  const [isInteractiveValue, setIsInteractiveValue] = useState(true);\n  const [minValue, setMinValue] = useState(0);\n  const [rotateAttr, setRotateAttr] = useState({\n    widthLength: width + margin + 100,\n    heightLength: height + margin + 100,\n    svgTransform: `translate(${margin + 30},${margin / 2})`,\n    axisY: y,\n    axisX: null, // x - x cannot be initialized before rotateAttr useState\n    axisXFunctionName: 'axisBottom',\n    axisYFunctionName: 'axisLeft',\n    axisYTransform: \"translate(0,\" + height + \")\",\n    axisXTransform: \"translate(10,10)rotate(45)\",\n    axisXLeftRotateTransform: null,\n    rectX: function () { return x(0)},\n    rectY: function(d) { return y(d.Country); },\n    rectWidth: function(d) { return x(d.Value); },\n    rectHeight: function () { return y.bandwidth()},\n    test: function(d) { return y(d[\"Country\"]) + y.bandwidth() / 2 + 10; },\n  })\n\n  const handleMaxValue = () => {\n    const values = data.map(ele => ele.Value)\n    return d3.max(values) > maxValue || maxValue === -1 ? d3.max(values) : maxValue;\n  }\n  const handleMinValue = () => {\n    const values = data.map(ele => ele.Value)\n    return minValue === -1 ? 0 : minValue;\n  }\n\n  // X-axis\n  const x = useMemo(() => {\n\n    let xLinearDomainRange = [handleMinValue(), handleMaxValue()];\n\n    if (rotateId === 3 || rotateId === 2) {\n      xLinearDomainRange = [handleMaxValue(), handleMinValue()];\n    } else {\n      xLinearDomainRange = [handleMinValue(), handleMaxValue()];\n    }\n    return d3.scaleLinear()\n    .domain(xLinearDomainRange)\n    .range([ 0, width])\n  }, [rotateId, maxValue, minValue]);\n\n  \n\n  const rotateButtonGroupCB = (name) => {\n    setRotateId(name)\n  }\n\n  const handleColorPick = (id, color) => {\n    if (id === 'rec-color') {\n      setRecColor(color.hex)\n    }\n    \n  }\n\n  const maxValueCB = (e) => {\n    setMaxValue(e.target.value);\n  }\n\n  const minValueCB = (e) => {\n    setMinValue(e.target.value);\n  }  \n\n  const toggleCB = (toggleState, id) => {\n    if (id === 'max' && toggleState) {\n      setMaxValue(-1);\n    }\n    if (id === 'min' && toggleState) {\n      setMinValue(-1);\n    }\n    if (id === 'interactive') {\n      setIsInteractiveValue(toggleState);\n    }\n  }\n\n  useEffect(() => {\n    setRotateAttrHandler();\n  }, [rotateId, maxValue, minValue, recColor])\n\n  const setRotateAttrHandler = () => {\n    const attr = {};\n    if (rotateId === 0) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function () { return x(0)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 1) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2 + 20})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisTop',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = \"translate(0, 0)\";\n      attr.axisXTransform = \"translate(+10,-10)rotate(0)\";\n      attr.axisXLeftRotateTransform = null;\n      attr.rectX = function(d) { return y(d.Country); };\n      attr.rectY = function () { return x(0)};\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return x(d.Value); };\n    }\n    if (rotateId === 2) {\n      attr.widthLength = width + margin + 100;\n      attr.heightLength = height + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = y;\n      attr.axisX = x;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisRight',\n      attr.axisYTransform = \"translate(0,\" + height + \")\";\n      attr.axisXTransform = \"translate(10,10)rotate(45)\";\n      attr.axisXLeftRotateTransform = `translate(${width}, 0)`;\n      attr.rectX = function (d) { return x(d.Value)};\n      attr.rectY = function(d) { return y(d.Country); };\n      attr.rectWidth = function(d) { return width - x(d.Value); };\n      attr.rectHeight = function () { return y.bandwidth()};\n    }\n    if (rotateId === 3) {\n      attr.widthLength = height + margin + 100;\n      attr.heightLength = width + margin + 100;\n      attr.svgTransform = `translate(${margin + 30},${margin / 2})`;\n      attr.axisY = x;\n      attr.axisX = y;\n      attr.axisXFunctionName = 'axisBottom',\n      attr.axisYFunctionName = 'axisLeft',\n      attr.axisYTransform = `translate(0, ${height+100})`;\n      attr.axisXTransform = \"translate(+10,0)rotate(0)\";\n      attr.axisXLeftRotateTransform = `translate(0, 0)`;\n      attr.rectX = function(d) { return y(d.Country); }; // d.Country\n      attr.rectY = function (d) { return x(d.Value) }; // height + 100 - x(d.Value)\n      attr.rectWidth = function () { return y.bandwidth()};\n      attr.rectHeight = function(d) { return height + 100 - x(d.Value) };\n    }    \n\n    setRotateAttr((previous) => ({\n      ...previous,\n      ...attr,\n    }))    \n  }; \n\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".test2\").remove();\n      \n      const svg = d3\n        .select(div)\n        .attr(\"width\", rotateAttr.widthLength)\n        .attr(\"height\", rotateAttr.heightLength)\n        .append(\"g\")\n        .attr('class', 'test2')\n        .attr(\"transform\", rotateAttr.svgTransform);\n\n      return svg;\n    },\n    [height, width, rotateAttr]\n  );\n\n  const mouseOverEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseover\", (event, d) => {\n        svg\n          .append(\"line\")\n          .attr(\"class\", \"valueLine\")\n          .attr(\"y1\", () => {\n            if (rotateId === 0) {\n              return 0;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return 0;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }           \n          })\n          .attr(\"x1\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return 0;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return 0;\n            }\n          })\n          .attr(\"y2\", () => {\n            if (rotateId === 0) {\n              return height;\n            }\n            if (rotateId === 1) {\n              return x(d['Value']);\n            }\n            if (rotateId === 2) {\n              return height;\n            }\n            if (rotateId === 3) {\n              return x(d['Value']);\n            }\n          })\n          .attr(\"x2\", () => {\n            if (rotateId === 0) {\n              return x(d['Value']);\n            }\n            if (rotateId === 1) {\n              return height;\n            }\n            if (rotateId === 2) {\n              return x(d['Value']);\n            }\n            if (rotateId === 3) {\n              return height;\n            }\n          });\n\n\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"info\")\n          .attr(\"fill\", recColor)\n\n          .attr(\"y\", () => {\n            if (rotateId === 0) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 1) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 2) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 3) {\n              return x(d['Value'] + 10);\n            }\n  \n          })\n          .attr(\"x\", () => {\n            if (rotateId === 0) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 1) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }\n            if (rotateId === 2) {\n              return x(d['Value'] + 10);\n            }\n            if (rotateId === 3) {\n              return y(d[\"Country\"]) + y.bandwidth() / 2 + 10;\n            }              \n          })\n          .attr(\"text-anchor\", \"middle\")\n          .text(() => {\n            const value = d['Value'];\n            return `${value}%`;\n          })\n\n      });      \n\n    },\n    [rotateAttr]\n  );\n\n  const mouseOutEvent = useCallback(\n    (svg) => {\n      svg.selectAll(\"rect\")\n      .on(\"mouseout\", (event, d) => {\n        svg.selectAll(\".valueLine\").remove();\n        svg.selectAll(\".info\").remove();\n      })\n    }, [rotateAttr]);  \n\n  const createGraph = (div) => {\n    const svg = drawSvg(div);\n\n    svg.append(\"g\")\n        .attr(\"transform\", rotateAttr.axisYTransform)\n        .call(d3[rotateAttr.axisXFunctionName](rotateAttr?.axisX ?? x\n        .range([ 0, width])).tickSizeOuter(0))\n        .selectAll(\"text\")\n          .attr(\"transform\", rotateAttr.axisXTransform)\n          .style(\"text-anchor\", \"end\");\n    svg.append(\"g\")\n        .call(d3[rotateAttr.axisYFunctionName](rotateAttr.axisY).tickSizeOuter(0))\n        // ${width}\n        .attr(\"transform\", rotateAttr.axisXLeftRotateTransform);\n\n    const rec = svg.selectAll(\"rect\").data(data);\n\n    rec\n      .join(\"rect\")\n      // .enter()\n      // .append(\"rect\")\n      .attr(\"class\", \"test\")\n      .attr(\"x\", (d) => (rotateAttr.rectX(d)))\n      .attr(\"y\", (d) => (rotateAttr.rectY(d)))\n      .attr(\"width\", (d) => (rotateAttr.rectWidth(d)))\n      .attr(\"height\", (d) => (rotateAttr.rectHeight(d)))\n      .attr(\"fill\", recColor) // createColorPalette(colorId)\n\n      isInteractiveValue && mouseOverEvent(svg);\n      isInteractiveValue && mouseOutEvent(svg);\n  }\n\n  useEffect(() => {\n    if (svgRef.current || data) {\n      createGraph(svgRef.current);\n    }\n  }, [svgRef, createGraph, data]);\n\n  return (\n    <div className=\"horizontal-bar-wrapper\">\n      <HorizontalBarPanel \n        rotateId={rotateId} rotateButtonGroupCB={rotateButtonGroupCB} \n        recColor={recColor} handleColorPick={handleColorPick} \n        setDataCB={setDataCB} \n        toggleCB={toggleCB}\n        maxValue={maxValue}\n        maxValueCB={maxValueCB}\n        minValue={minValue}\n        minValueCB={minValueCB}        \n      />\n      <div className=\"horizontal-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  )\n}\n\nexport default HorizontalBar;","import * as d3 from \"d3\";\n\nexport const createColorPalette = (type, len) => {\n  switch (type) {\n    case \"Color-1\":\n      return d3.schemeCategory10.slice(0, len);\n    case \"Color-2\":\n      return d3.schemeAccent.slice(0, len);\n    case \"Color-3\":\n      return d3.schemeDark2.slice(0, len);\n    case \"Color-4\":\n      return d3.schemePaired.slice(0, len);\n    case \"Color-5\":\n      return d3.schemePastel1.slice(0, len);\n    case \"Color-6\":\n      return d3.schemePastel2.slice(0, len);\n    case \"Color-7\":\n      return d3.schemeSet1.slice(0, len);\n    case \"Color-8\":\n      return d3.schemeSet2.slice(0, len);\n    case \"Color-9\":\n      return d3.schemeSet3.slice(0, len);\n    case \"Color-10\":\n      return d3.schemeTableau10.slice(0, len);\n    default:\n      return [];\n  }\n};\n","import React, { useState } from 'react';\nimport './StackedBarPanel.scss'\nimport Switch from 'react-switch';\nimport ColorPicker from '../utils/ColorPicker/ColorPicker';\n\n\nconst StackedBarPanel = ({ handleClick, handleLabel, labels, hover: { checked, setChecked } }) => {\n  const btns = ['right', 'left', 'top', 'bottom'];\n\n  const handleSwitch = (nextChecked) => {\n    setChecked(nextChecked);\n  }\n\n  const handleRotate = (e) => {\n    const angle = e.target.getAttribute('data-rotate');\n    handleClick(angle);\n  }\n\n  const onChangeLabel = (e) => {\n    const type = e.target.name;\n    const value = e.target.value;\n    handleLabel(type, value);\n  };\n\n    return (\n        <div className=\"horizontal-stacked-bar-left\">\n          <div className=\"panel-item\">\n            <h2>{\"Rotate Graph\"}</h2>\n            {btns.map(btn => (\n              <button data-rotate={btn} key={btn} onClick={handleRotate}>{btn}</button>\n            ))}\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Color\"}</h2>\n            <ColorPicker\n              id='rec-color'\n              handleChange={() => console.log('update')}\n              color={'#1C70C8'}\n            />\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Max Value\"}</h2>\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Min Value\"}</h2>\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Hover\"}</h2>\n            <Switch \n              onChange={handleSwitch}\n              checked={checked}\n            />\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Labels\"}</h2>\n            <div>\n              <label>{\"xLabel\"}</label>\n              <input \n                name=\"xLabel\"\n                onChange={onChangeLabel}\n                type=\"text\" \n                value={labels?.xLabel} \n              />\n            </div>\n            <div>\n              <label>{\"yLabel\"}</label>\n              <input \n                name=\"yLabel\"\n                onChange={onChangeLabel}\n                type=\"text\" \n                value={labels?.yLabel} \n              />\n            </div>\n          </div>\n          <div className=\"panel-item\">\n            <h2>{\"Data\"}</h2>\n            // TODO: dropdown? for csv\n          </div>\n        </div>\n    )\n};\n\nexport default StackedBarPanel;","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { createColorPalette } from \"../../utils/color\";\nimport * as d3 from 'd3';\nimport StackedBarPanel from \"./StackedBarPanel\";\nimport './StackedBar.scss';\n\n\nconst StackedBar = ({\n  data,\n  label = { show: true },\n  width = 400,\n  height = 400,\n  margin = 80,\n  groupKey = \"label\",\n  subgroups = [\"value\", \"diff\"],\n  colorPalette = [],\n  colorType = \"Color-6\"\n}) => {\n  const svgRef = useRef(null);\n  const [graphAngle, setGraphAngle] = useState('left');\n  const [labels, setLabels] = useState({\n    xLabel: \"Percentage %\",\n    yLabel: \"Fruit Type\"\n  })\n  const [checked, setChecked] = useState(false);\n\n  /* PANEL FUNCTIONS */\n  const handleClick = (angle) => {\n    setGraphAngle(angle)\n  }\n  const handleLabel = (type, value) => {\n    if (type === \"xLabel\") {\n      setLabels(prev => ({ ...prev, xLabel: value }));\n    }\n    if (type === \"yLabel\") {\n      setLabels(prev => ({ ...prev, yLabel: value }));\n    }\n  }\n\n  /* SVG functions */\n  const drawSvg = useCallback(\n    (div) => {\n      d3.selectAll(\".svg-content\").remove();\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin + 50)\n        .attr(\"height\", height + margin + 50)\n        .append(\"g\")\n        .attr('class', 'svg-content')\n        .attr(\"transform\", function() {\n          if (graphAngle === 'right') {\n            return `translate(${margin - 30}, ${margin / 2})`;\n          } else if (graphAngle === 'top') {\n            return `translate(${margin + 10}, ${margin})`;\n          }\n          return `translate(${margin + 30},${margin / 2})`;\n        });\n      return svg;\n    },\n    [height, width, margin, graphAngle]\n  );\n\n  const handleAxis = useCallback(\n    (groups) => {\n      const datanum = data.map((obj) =>\n        Object.keys(obj).reduce(\n          (acc, key) =>\n            subgroups.includes(key) ? acc + parseInt(obj[key]) : acc + 0,\n          0\n        )\n      );\n      const domainMax = Math.max(...datanum);\n\n      let y = d3.scaleBand().domain(groups).range([0, height]).padding([0.2]);\n      let x = d3\n        .scaleLinear()\n        .domain([0, Math.ceil(domainMax)])\n        .range([width, 0]);\n\n      if (graphAngle === 'bottom' || graphAngle === 'top') {\n        return [y, x]\n      }\n      return [x, y];\n    },\n    [width, height, subgroups, graphAngle]\n  );\n\n  const handleScale = useCallback(() => {\n    const len = subgroups.length;\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const color = d3.scaleOrdinal().domain(subgroups).range(paletteRange);\n    return color;\n  }, [subgroups, colorPalette, colorType]);\n\n  const handleXAxis = useCallback((svgContent, x) => {\n      // x axis\n      if (graphAngle === 'bottom') {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0));\n      } else if (graphAngle === 'top') {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, 0)`)\n        .call(d3.axisTop(x).tickSizeOuter(0));\n      } else {\n        svgContent\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x));\n      }\n  }, [height, graphAngle]);\n\n  const handleYAxis = useCallback((svgContent, y) => {\n    if (graphAngle === 'bottom' || graphAngle === 'top') {\n      svgContent.append(\"g\").call(d3.axisLeft(y));\n    } else if (graphAngle === 'right') {\n      svgContent\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width}, 0)`)\n      .call(d3.axisRight(y).tickSizeOuter(0));\n    } else {\n      svgContent\n        .append(\"g\")\n        .call(d3.axisLeft(y).tickSizeOuter(0));\n    }\n  }, [width, graphAngle]);\n\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const groups = data.map((d) => d[groupKey]);\n      const stackedData = d3.stack().keys(subgroups)(data);\n      const color = handleScale();\n\n      const [x, y] = handleAxis(groups);\n      // x axis\n      handleXAxis(svg, x);\n      // y axis\n      handleYAxis(svg, y);\n\n      // adding bars\n      svg\n        .append(\"g\")\n        .selectAll(\"g\")\n        .data(stackedData)\n        .join(\"g\")\n        .attr(\"fill\", (d) => color(d.key))\n        .selectAll(\"rect\")\n        .data((d) => d)\n        .join(\"rect\")\n        .attr(\"y\", (d) => {\n          if (graphAngle === 'bottom') {\n            return  y(d[1]);\n          } else if (graphAngle === 'top') {\n            return  y(d[1]) === 0 ? height - y(d[0]) : 0;\n          } else {\n            return  y(d.data[groupKey]);\n          }\n        })\n        .attr(\"x\", (d) => {\n          if (graphAngle === 'bottom' || graphAngle === 'top') {\n            return x(d.data[groupKey]);\n          } else if (graphAngle === 'right') {\n            return  width - x(d[0]);\n          } else {\n            return x(d[1]);\n          }\n        })\n        .attr(\"width\", (d) => {\n          if (graphAngle === 'bottom' || graphAngle === 'top') {\n            return x.bandwidth();\n          } else {\n            return x(d[0]) - x(d[1]);\n          }\n        })\n        .attr(\"height\", (d) => {\n          if (graphAngle === 'bottom') {\n            return y(d[0]) - y(d[1]);\n          } else if (graphAngle === 'top') {\n            return y(d[0]) - y(d[1]);\n          } else {\n            return y.bandwidth();\n          }\n        })\n        .on('mouseover', function(event, d) {\n          // hover\n          if (checked) {\n            d3.select(this).transition()\n              .duration('50')\n              .attr('opacity', '.85')\n\n            svg.append('text')\n              .attr('class', 'hover-text')\n              .attr('x',  function() {\n                if (graphAngle === 'right') {\n                  return width-x(d[1]) - 30;\n                } else if (graphAngle === 'bottom' || graphAngle === 'top') {\n                  return x(d.data[groupKey]) + 25;\n                }\n                return x(d[0]) - 30;\n              })\n              .attr('y', function() {\n                if (graphAngle === 'bottom') {\n                  return y(d[1]) + 20;\n                } else if (graphAngle === 'top') {\n                  return y(d[1]) === 0 ? height - y(d[0]) + 20 : 0 + 20;\n                }\n                return y(d.data[groupKey]) + 45;\n              })\n              .text(d[1] - d[0])\n          }\n        })\n        .on('mouseout', function(d, i) {\n          d3.select(this).transition()\n          .duration('50')\n          .attr('opacity', '1')\n\n          svg.selectAll('.hover-text').remove();\n        })\n\n      // labels\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", -height / 2)\n          .attr(\"y\", function() {\n            if (graphAngle === 'right') {\n              return width + margin;\n            }\n            return -margin / 1.3;\n          })\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"text-anchor\", \"middle\")\n          .text(function() {\n            if (graphAngle === 'bottom' || graphAngle === 'top') {\n              return labels.xLabel;\n            }\n            return labels.yLabel;\n          });\n\n      label.show &&\n        svg\n          .append(\"text\")\n          .attr(\"class\", \"label\")\n          .attr(\"x\", width / 2)\n          .attr(\"y\", function() {\n            if (graphAngle === 'top') {\n              return -margin + 30;\n            }\n            return height + (margin * 2) / 2.5;\n          })\n          .attr(\"text-anchor\", \"middle\")\n          .text(function() {\n            if (graphAngle === 'bottom' || graphAngle === 'top') {\n              return labels.yLabel;\n            }\n            return labels.xLabel;\n          });\n    },\n    [\n      drawSvg,\n      handleAxis,\n      handleScale,\n      height,\n      subgroups,\n      groupKey,\n      label,\n      margin,\n      width,\n      graphAngle,\n      labels,\n      checked\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div className=\"horizontal-stacked-bar-wrapper\">\n      <StackedBarPanel \n        handleClick={handleClick} \n        handleLabel={handleLabel} \n        labels={labels}\n        hover={{ checked, setChecked }}\n        />\n      <div className=\"horizontal-stacked-bar-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default StackedBar","import './AreaChartPanel.scss'\n\nconst AreaChartPanel = () => {\n    return (\n        <div className=\"area-chart-left\">\n            hello AreaChartPanel\n        </div>\n    )\n};\n\nexport default AreaChartPanel;","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport AreaChartPanel from \"./AreaChartPanel\";\nimport './AreaChart.scss';\n\n\nconst AreaChart = ({\n  data,\n  width = 400,\n  height = 400,\n  margin = { left: 100, bottom: 100, top: 50, right: 50 },\n  xAxis = \"date\",\n  yAxis = \"value\"\n  // tooltip={show: true, text: '<div>Portfolio Value: $%value%</div>'}\n}) => {\n  const svgRef = useRef(null);\n  const [copyData, setCopyData] = useState([]);\n\n  useEffect(() => {\n    const parseTime = d3.timeParse(\"%Y\");\n    const newFormattedData = data.map((obj) => {\n      return { date: parseTime(obj.data), value: obj.value };\n    });\n    setCopyData([...newFormattedData]);\n  }, []);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.right})`);\n      return svg;\n    },\n    [height, width, margin]\n  );\n\n  const handleAxis = useCallback(() => {\n    let x, y;\n    // const domainMax = (axis) => Math.max.apply(Math, data.map(function(o) { return o[axis]; }))\n    // const scaleDomain = domain.length > 0 ? domain : createDomain(data, xAxis);\n    const reformatDates = copyData.map((obj) => obj[xAxis]);\n    x = d3\n      .scaleTime()\n      .domain(d3.extent(reformatDates))\n      .range([0, width])\n      .nice();\n\n    y = d3\n      .scaleLinear()\n      .domain([0, d3.max(copyData, (d) => +d[yAxis])])\n      .range([height, 0]);\n    return [x, y];\n  }, [width, height, copyData, xAxis, yAxis]);\n\n  const createAreaGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const [x, y] = handleAxis();\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x).ticks(d3.timeYear));\n      svg.append(\"g\").call(d3.axisLeft(y));\n      // svg.append('line').classed('hoverLine', true)\n      // svg.append('circle').classed('hoverPoint', true);\n      svg.append(\"text\").classed(\"hoverText\", true);\n\n      // Add the area\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"#cce5df\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\n          \"d\",\n          d3\n            .area()\n            .x((d) => x(d[xAxis]))\n            .y0(y(0))\n            .y1((d) => y(d[yAxis]))\n        );\n\n      svg\n        .append(\"path\")\n        .datum(copyData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#69b3a2\")\n        .attr(\"stroke-width\", 2)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x((d) => x(d[xAxis]))\n            .y((d) => y(d[yAxis]))\n        );\n\n      svg\n        .selectAll(\"myCircles\")\n        .data(copyData)\n        .join(\"circle\")\n        .attr(\"fill\", \"yellow\")\n        .attr(\"stroke\", \"none\")\n        .attr(\"cx\", (d) => x(d[xAxis]))\n        .attr(\"cy\", (d) => y(d[yAxis]))\n        .attr(\"r\", 3);\n    },\n    [handleAxis, height, drawSvg, copyData, xAxis, yAxis]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createAreaGraph(svgRef.current);\n    }\n  }, [svgRef, createAreaGraph]);\n\n  return (\n    <div className=\"area-chart-wrapper\">\n      <AreaChartPanel />\n      <div className=\"area-chart-right\">\n        <svg ref={svgRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default AreaChart;\n","import './PieGraphPanel.scss'\n\nconst PieGraphPanel = () => {\n    return (\n        <div className=\"pie-graph-left\">\n            hello PieGraphPanel\n        </div>\n    )\n};\n\nexport default PieGraphPanel;","import React, { useRef, useEffect, useCallback } from \"react\";\nimport { createColorPalette } from \"../../utils/color\";\nimport { createDomain, parseTooltipText } from \"../../utils/help\";\nimport * as d3 from \"d3\";\nimport PieGraphPanel from \"./PieGraphPanel\";\nimport './PieGraph.scss';\n\nconst PieGraph = ({\n  data,\n  width,\n  height,\n  dataKey,\n  value,\n  colorPalette,\n  colorType,\n  margin,\n  style,\n  text,\n  arc,\n  tooltip,\n  donut\n}) => {\n  const svgRef = useRef(null);\n\n  const drawSvg = useCallback(\n    (div) => {\n      const svg = d3\n        .select(div)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n      return svg;\n    },\n    [height, width]\n  );\n\n  const handleUniqDataLen = useCallback(() => {\n    const uniqueArr = [...new Set(data.map((el) => el[dataKey]))];\n    return uniqueArr.length;\n  }, [data, dataKey]);\n\n  const handleScale = useCallback(() => {\n    const len = handleUniqDataLen();\n    const paletteRange =\n      colorPalette.length > 0\n        ? colorPalette\n        : createColorPalette(colorType, len);\n    const ordScale = d3\n      .scaleOrdinal()\n      .domain(createDomain(data, dataKey))\n      .range(paletteRange);\n    return ordScale;\n  }, [data, dataKey, handleUniqDataLen, colorPalette, colorType]);\n\n  const createPie = useCallback(() => {\n    const pie = d3.pie().value((d) => d[value]);\n    return pie(data);\n  }, [data, value]);\n\n  const handleRadius = useCallback(() => {\n    if (margin) {\n      return Math.min(width, height) / 2 - margin;\n    }\n    return Math.min(width, height) / 2;\n  }, [width, height, margin]);\n\n  const handleConerRadius = useCallback(() => {\n    const outerRadius = height / 2 - 30;\n    const innerRadius = outerRadius / 3;\n    const limitRange = (outerRadius - innerRadius) / 2;\n\n    if (arc.cornerRadius >= limitRange) return limitRange;\n    return arc.cornerRadius;\n  }, [height, arc]);\n\n  const handleText = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"arc\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"arcText\")\n        .text((d) => d.data[dataKey])\n        .attr(\"transform\", function (d) {\n          if (text.location === \"outside\") {\n            const pos = outerArc.centroid(d);\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\n            return \"translate(\" + pos + \")\";\n          }\n          return `translate(${arcGenerator.centroid(d)})`;\n        })\n        .style(\"text-anchor\", function (d) {\n          if (text.location === \"outside\") {\n            const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n            return midangle < Math.PI ? \"start\" : \"end\";\n          }\n          return text.textAnchor;\n        });\n    },\n    [dataKey, text]\n  );\n\n  const createTooltip = useCallback(() => {\n    const tooltipDiv = d3\n      .select(\".App\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"position\", \"absolute\")\n      .style(\"opacity\", 0);\n    return tooltipDiv;\n  }, []);\n\n  const handleInnerRadius = useCallback(\n    (radius) => {\n      if (donut.show) {\n        return radius < donut.innerRadius ? radius : donut.innerRadius;\n      }\n      return 0;\n    },\n    [donut]\n  );\n\n  const handleTextLine = useCallback(\n    (svg, data, arcGenerator, outerArc, radius) => {\n      svg\n        .selectAll(\"allPolylines\")\n        .data(data)\n        .enter()\n        .append(\"polyline\")\n        .attr(\"class\", \"textLine\")\n        .style(\"fill\", \"none\")\n        .attr(\"points\", function (d) {\n          const posA = arcGenerator.centroid(d); // line insertion in the slice\n          const posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\n          const posC = outerArc.centroid(d); // Label position = almost the same as posB\n          const midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\n          posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\n          return [posA, posB, posC];\n        });\n    },\n    []\n  );\n\n  const createPieGraph = useCallback(\n    (div) => {\n      const svg = drawSvg(div);\n      const pie_data = createPie();\n      const color = handleScale();\n      const radius = handleRadius();\n      const arcGenerator = d3\n        .arc()\n        .innerRadius(handleInnerRadius(radius)) // range = 0 <= radius\n        .outerRadius(radius)\n        .cornerRadius(handleConerRadius())\n        .padAngle(arc.padAngle);\n      const outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      const Tooltip = createTooltip();\n\n      // create arc and fill in the color by value\n      svg\n        .selectAll(\".arc\")\n        .data(pie_data)\n        .enter()\n        .append(\"path\")\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", arcGenerator)\n        .attr(\"fill\", (d) => color(d.data[dataKey]))\n        .on(\"mouseover\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition()\n              .duration(200)\n              .style(\"opacity\", 1)\n              .style(\"left\", event.pageX + 20 + \"px\")\n              .style(\"top\", event.pageY - 20 + \"px\")\n              .text(parseTooltipText(tooltip.text, d.data));\n        })\n        .on(\"mouseout\", function (event, d) {\n          tooltip.show &&\n            Tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n\n      // text line\n      text.showLine &&\n        handleTextLine(svg, pie_data, arcGenerator, outerArc, radius);\n      // text\n      text.show && handleText(svg, pie_data, arcGenerator, outerArc, radius);\n    },\n    [\n      handleTextLine,\n      handleInnerRadius,\n      dataKey,\n      tooltip,\n      createTooltip,\n      drawSvg,\n      createPie,\n      handleScale,\n      handleRadius,\n      text,\n      arc,\n      handleConerRadius,\n      handleText\n    ]\n  );\n\n  useEffect(() => {\n    if (svgRef.current) {\n      createPieGraph(svgRef.current);\n    }\n  }, [svgRef, createPieGraph]);\n\n  return (\n    <div style={{ margin: \"2em\" }} className=\"pie-graph-wrapper\">\n      <PieGraphPanel />\n      <div className=\"pie-graph-right\">\n        <svg ref={svgRef} width={width} height={height} />\n      </div>\n    </div>\n  );\n};\n\nPieGraph.defaultProps = {\n  data: [],\n  width: 300,\n  height: 300,\n  dataKey: \"\",\n  value: \"\",\n  colorPalette: [],\n  colorType: \"Color-1\",\n  margin: 0,\n  text: {\n    show: false,\n    textAnchor: \"middle\",\n    location: \"inside\",\n    showLine: false\n  },\n  arc: {\n    padAngle: 0,\n    cornerRadius: 0\n  },\n  tooltip: {\n    show: false,\n    text: \"\"\n  },\n  donut: {\n    show: false,\n    innerRadius: 0\n  }\n};\n\nexport default PieGraph;","export const createDomain = (data, key) => {\n  const uniqArr = new Set(data.map((el) => el[key]));\n  return Array.from(uniqArr);\n};\n\nexport const parseTooltipText = (text, dataObj) => {\n  const newText = text.replace(/%.*?%/g, (match) => {\n    const str = match.replace(/[^()_a-zA-Z0-9-]+/g, \"\");\n    return dataObj[str];\n  });\n  return newText;\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Sidebar.scss';\n\nconst sidebarNavItems = [\n    {\n        display: 'Bar',\n        icon: <i className='bx bx-home'></i>,\n        to: '/2023-hackathon/bar',\n        section: ''\n    },\n    {\n        display: 'Stacked Bar',\n        icon: <i className='bx bx-home'></i>,\n        to: '/2023-hackathon/stacked-bar',\n        section: ''\n    },\n    {\n        display: 'Area Chart',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/area-chart',\n        section: 'order'\n    },\n    {\n        display: 'Pie Graph',\n        icon: <i className='bx bx-receipt'></i>,\n        to: '/2023-hackathon/pie-graph',\n        section: 'order'\n    },\n]\n\nconst Sidebar = () => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [stepHeight, setStepHeight] = useState(0);\n    const sidebarRef = useRef();\n    const indicatorRef = useRef();\n    const location = useLocation();\n\n    useEffect(() => {\n        setTimeout(() => {\n            const sidebarItem = sidebarRef.current.querySelector('.sidebar__menu__item');\n            indicatorRef.current.style.height = `${sidebarItem.clientHeight}px`;\n            setStepHeight(sidebarItem.clientHeight);\n        }, 50);\n    }, []);\n\n    // change active index\n    useEffect(() => {\n        const curPath = window.location.pathname.split('/')[1];\n        const activeItem = sidebarNavItems.findIndex(item => item.section === curPath);\n        setActiveIndex(curPath.length === 0 ? 0 : activeItem);\n    }, [location]);\n\n    return <div className='sidebar'>\n        <div className=\"sidebar__logo\">\n            Animate\n        </div>\n        <div ref={sidebarRef} className=\"sidebar__menu\">\n            <div\n                ref={indicatorRef}\n                className=\"sidebar__menu__indicator\"\n                style={{\n                    transform: `translateX(-50%) translateY(${activeIndex * stepHeight}px)`\n                }}\n            ></div>\n            {\n                sidebarNavItems.map((item, index) => (\n                    <Link to={item.to} key={index}>\n                        <div className={`sidebar__menu__item ${activeIndex === index ? 'active' : ''}`}>\n                            <div className=\"sidebar__menu__item__icon\">\n                                {item.icon}\n                            </div>\n                            <div className=\"sidebar__menu__item__text\">\n                                {item.display}\n                            </div>\n                        </div>\n                    </Link>\n                ))\n            }\n        </div>\n    </div>;\n};\n\nexport default Sidebar;","import './App.scss';\nimport React, { useMemo, useEffect, useCallback, useRef, useState } from 'react'\nimport HorizontalBar from \"./components/HorizontalBar/HorizontalBar\";\nimport VerticalBar from \"./components/VerticalBar/VerticalBar\";\nimport StackedBar from \"./components/StackedBar/StackedBar\";\nimport AreaChart from \"./components/AreaChart/AreaChart\";\nimport PieGraph from \"./components/PieGraph/PieGraph\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { Routes, Route, Outlet, Link, Navigate } from \"react-router-dom\";\n\nconst defaultData = [\n  { Country: 'US', Value: 100 },\n  { Country: 'S. Korea', Value: 85 },\n  { Country: 'Italy', Value: 72 },\n  { Country: 'Japan', Value: 80 },\n]\n\nconst BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100 },\n  { label: \"Bananas\", value: 200 },\n  { label: \"Oranges\", value: 50 },\n  { label: \"Kiwis\", value: 150 }\n];\n\nconst STACKED_BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100, diff: 100, max: 200 },\n  { label: \"Bananas\", value: 200, diff: 0, max: 200 },\n  { label: \"Oranges\", value: 50, diff: 150, max: 200  },\n  { label: \"Kiwis\", value: 150, diff: 50, max: 200  }\n];\n\nconst AREA_CHART_DATA = [\n  { data: \"2001\", value: 100 },\n  { data: \"2002\", value: 150 },\n  { data: \"2003\", value: 100 },\n  { data: \"2004\", value: 400 },\n  { data: \"2005\", value: 1070 },\n  { data: \"2006\", value: 700 }\n];\n\n\nfunction App() {\n\n  const [data, setDataCB] = useState(defaultData);\n\n  const setData = (file) => {\n    setDataCB(\n      [\n        { Country: 'USA', Value: 80 },\n        { Country: 'S. Korea', Value: 85 },\n        { Country: 'Italy', Value: 72 },\n        { Country: 'Japan', Value: 80 },\n      ]\n    )\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Routes>\n        <Route path=\"/2023-hackathon\" element={<Layout />}>\n          <Route path='bar' element={<HorizontalBar data={data} setDataCB={setData} />}/>\n          <Route path='stacked-bar' element={<StackedBar data={STACKED_BAR_CHART_DATA} />}/>\n          <Route path='area-chart' element={<AreaChart data={AREA_CHART_DATA} />}/>\n          <Route path='pie-graph' element={<PieGraph data={BAR_CHART_DATA} dataKey=\"label\" value=\"value\" />}/>\n          {/* route fallback - redirect to the following path for non catchable routh path */}\n          <Route\n              path=\"*\"\n              element={<Navigate to=\"/2023-hackathon/bar\" replace />}\n          />          \n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nfunction Layout() {\n\n  return <div style={{\n    padding: '50px 0px 0px 370px'\n}}>\n    <Sidebar />\n    <Outlet />\n</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}