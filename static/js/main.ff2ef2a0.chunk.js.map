{"version":3,"sources":["components/HorizontalBar.jsx","components/VerticalBar.jsx","components/HorizontalStackedBar.jsx","components/VerticalStackedBar.jsx","components/AreaChart.jsx","components/PieGraph.jsx","App.js","reportWebVitals.js","index.js"],"names":["HorizontalBar","AxisBottom","scale","transform","ref","useRef","useEffect","current","select","call","axisBottom","AxisLeft","axisLeft","Bars","data","height","scaleX","scaleY","map","value","label","x","y","width","bandwidth","fill","VerticalBar","margin","scaleBand","domain","range","padding","scaleLinear","Math","max","HorizontalStackedBar","VerticalStackedBar","AreaChart","PieGraph","BAR_CHART_DATA","App","test","id","component","imgSrc","className","el","src","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff2ef2a0.chunk.js","sourcesContent":["import React, { useRef } from 'react'\n\n// TODO: WORKING NOW\nconst HorizontalBar = () => {\n  return (\n    <div>horizontal-bar</div>\n  )\n}\n\nexport default HorizontalBar","import React, { useEffect, useRef } from 'react'\n\nimport {\n    axisBottom,\n    axisLeft,\n    ScaleBand,\n    scaleBand,\n    ScaleLinear,\n    scaleLinear,\n    select\n  } from \"d3\";\n\nconst AxisBottom = ({scale, transform}) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n          select(ref.current).call(axisBottom(scale));\n        }\n      }, [scale]);\n    \n    return <g ref={ref} transform={transform} />;\n}\n\nconst AxisLeft = ({scale, transform}) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (ref.current) {\n          select(ref.current).call(axisLeft(scale));\n        }\n      }, [scale]);\n    \n    return <g ref={ref} transform={transform} />;\n}\n\nconst Bars = ({data, height, scaleX, scaleY}) => {\n    return (\n        <>\n          {data.map(({ value, label }) => (\n            <rect\n              key={`bar-${label}`}\n              x={scaleX(label)}\n              y={scaleY(value)}\n              width={scaleX.bandwidth()}\n              height={height - scaleY(value)}\n              fill=\"teal\"\n            />\n          ))}\n        </>\n      );\n}\n\n// TODO: change the color of a bar (+ individually)\n// TODO: ultimately, make a storybook so that the user can play around with props\n// TODO: make it scale based on the screen size\n// TODO: change the x- y- axis tick rotation (+ individually)\n\n// TODO: onClick ... onHover event for the each ticks\n// TODO: hover over the bar and see what happens (+ individually)\n// TODO: max Value\n// TODO: enableLabel\n// \nconst VerticalBar = ({ data }) => {\n    const margin = { top: 10, right: 0, bottom: 20, left: 30 };\n    const width = 500 - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n  \n    const scaleX = scaleBand()\n      .domain(data.map(({ label }) => label))\n      .range([0, width])\n      .padding(0.5);\n    const scaleY = scaleLinear()\n      .domain([0, Math.max(...data.map(({ value }) => value))])\n      .range([height, 0]);\n  \n    return (\n      <svg\n        width={width + margin.left + margin.right}\n        height={height + margin.top + margin.bottom}\n      >\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <AxisBottom scale={scaleX} transform={`translate(0, ${height})`} />\n          <AxisLeft scale={scaleY} />\n          <Bars data={data} height={height} scaleX={scaleX} scaleY={scaleY} />\n        </g>\n      </svg>\n    );\n}\n\nexport default VerticalBar","import React from 'react'\n\nconst HorizontalStackedBar = () => {\n  return (\n    <div>horizontal-stacked-bar</div>\n  )\n}\n\nexport default HorizontalStackedBar","import React from 'react'\n\nconst VerticalStackedBar = () => {\n  return (\n    <div>vertical-stacked-bar</div>\n  )\n}\n\nexport default VerticalStackedBar","import React from 'react'\n\nconst AreaChart = () => {\n  return (\n    <div>area-chart</div>\n  )\n}\n\nexport default AreaChart","import React from 'react'\n\nconst PieGraph = () => {\n  return (\n    <div>pie-graph</div>\n  )\n}\n\nexport default PieGraph","import './App.scss';\nimport HorizontalBar from \"./components/HorizontalBar\";\nimport VerticalBar from \"./components/VerticalBar\";\nimport HorizontalStackedBar from \"./components/HorizontalStackedBar\";\nimport VerticalStackedBar from \"./components/VerticalStackedBar\";\nimport AreaChart from \"./components/AreaChart\";\nimport PieGraph from \"./components/PieGraph\";\n\nconst BAR_CHART_DATA = [\n  { label: \"Apples\", value: 100 },\n  { label: \"Bananas\", value: 200 },\n  { label: \"Oranges\", value: 50 },\n  { label: \"Kiwis\", value: 150 }\n];\n\nfunction App() {\n  const test = [\n    {\n      id: 'test',\n      component: <HorizontalBar />,\n      imgSrc: '/horizontal-bar.png',\n    },\n    {\n      id: 'test1',\n      component: <VerticalBar data={BAR_CHART_DATA} />,\n      imgSrc: '/vertical-bar.png',\n    },\n    {\n      id: 'test1',\n      component: <VerticalStackedBar />,\n      imgSrc: '/vertical-stacked-bar.png',\n    },\n    {\n      id: 'test1',\n      component: <HorizontalStackedBar />,\n      imgSrc: '/horizontal-stacked-bar.png',\n    },     \n    {\n      id: 'test1',\n      component: <AreaChart />,\n      imgSrc: '/area-chart.png',\n    },\n    {\n      id: 'test1',\n      component: <PieGraph />,\n      imgSrc: '/pie-graph.png',\n    },               \n  ]\n\n  return (\n    <div className=\"wrapper\">\n      {\n        test.map((el) => (\n          <div className=\"box\">\n            <div className=\"left-box\">\n              <img src={process.env.PUBLIC_URL + el.imgSrc} />  \n            </div>\n            <div className=\"right-box\">\n              {el.component}\n            </div>\n            \n          </div>\n        )\n        )\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}